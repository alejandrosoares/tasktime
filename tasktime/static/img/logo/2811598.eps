%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Time management & Relaxing at home concept-3 up-01.eps
%%Creator: Adobe Illustrator(R) 23.0
%%For: Ayib
%%CreationDate: 26/08/19
%%BoundingBox: 0 0 500 500
%%HiResBoundingBox: 0 0 500 500
%%CropBox: 0 0 500 500
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.0.2 x567 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Time management &amp; Relaxing at home concept-3 up-01</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2019-08-26T15:31:15+07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2019-08-26T15:31:15+07:00</xmp:ModifyDate>
         <xmp:CreateDate>2019-08-26T15:31:15+07:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 23.0 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBKwErAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABK/++AAEA&#xA;AQEr/74AAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9R4UOxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;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&#xA;dirsVdirsVdirsVdirsVdir/AP/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:83477d82-7b1d-498d-a603-22a843ff20ed</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:83477d82-7b1d-498d-a603-22a843ff20ed</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:6c55a206-4b8c-cb4d-9cc1-67e05b9914ae</stRef:instanceID>
            <stRef:documentID>xmp.did:26aaeb05-d1c7-46fa-8c85-a0b55309e58f</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9055feea-6df3-418a-84b0-35eb367eec15</stEvt:instanceID>
                  <stEvt:when>2016-04-18T22:41:34+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:83477d82-7b1d-498d-a603-22a843ff20ed</stEvt:instanceID>
                  <stEvt:when>2019-08-26T15:31:15+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>500.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 8</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=150 B=99</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>150</xmpG:green>
                           <xmpG:blue>99</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 10</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=118 G=120 B=237</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>118</xmpG:red>
                           <xmpG:green>120</xmpG:green>
                           <xmpG:blue>237</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=61 G=52 B=139</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>61</xmpG:red>
                           <xmpG:green>52</xmpG:green>
                           <xmpG:blue>139</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 11</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Kulit</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=233 G=229 B=217</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>233</xmpG:red>
                           <xmpG:green>229</xmpG:green>
                           <xmpG:blue>217</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=249 G=248 B=247</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>248</xmpG:green>
                           <xmpG:blue>247</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>65</xmpG:red>
                           <xmpG:green>64</xmpG:green>
                           <xmpG:blue>66</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=80</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>88</xmpG:red>
                           <xmpG:green>89</xmpG:green>
                           <xmpG:blue>91</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=70</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>109</xmpG:red>
                           <xmpG:green>110</xmpG:green>
                           <xmpG:blue>113</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=60</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>130</xmpG:green>
                           <xmpG:blue>133</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=50</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>149</xmpG:green>
                           <xmpG:blue>152</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=40</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>167</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>188</xmpG:red>
                           <xmpG:green>190</xmpG:green>
                           <xmpG:blue>192</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=20</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>209</xmpG:red>
                           <xmpG:green>211</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>231</xmpG:green>
                           <xmpG:blue>232</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=5</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Freepik logo</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=165 G=183 B=198</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>165</xmpG:red>
                           <xmpG:green>183</xmpG:green>
                           <xmpG:blue>198</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=29 G=38 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>29</xmpG:red>
                           <xmpG:green>38</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=249 G=251 B=252</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>251</xmpG:green>
                           <xmpG:blue>252</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 5</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=209 B=91 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>209</xmpG:green>
                           <xmpG:blue>91</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=190 G=225 B=244</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>190</xmpG:red>
                           <xmpG:green>225</xmpG:green>
                           <xmpG:blue>244</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=135 G=140 B=240</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>135</xmpG:red>
                           <xmpG:green>140</xmpG:green>
                           <xmpG:blue>240</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=177 G=178 B=243</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>177</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>243</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=86 G=84 B=140</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>86</xmpG:red>
                           <xmpG:green>84</xmpG:green>
                           <xmpG:blue>140</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=17 G=43 B=70</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>17</xmpG:red>
                           <xmpG:green>43</xmpG:green>
                           <xmpG:blue>70</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>kulit orang II</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>133</xmpG:green>
                           <xmpG:blue>120</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Kulit orang</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>175</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 500 li
500 500 li
500 0 li
cp
clp
500 500 mo
0 500 li
0 0 li
500 0 li
500 500 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.0154421 .00189212 .00241093 0 cmyk
f
363.135 87.0156 mo
362.022 87.0156 360.909 87.0874 359.795 87.1948 cv
346.491 88.667 335.628 99.3682 333.994 112.655 cv
332.666 123.375 337.262 133.932 345.97 140.216 cv
348.518 142.046 350.582 144.396 352.018 147.088 cv
348.652 147.088 li
348.652 149.495 li
348.091 149.495 li
348.091 151.999 li
348.652 151.999 li
348.652 153.858 li
348.091 153.858 li
348.091 156.361 li
348.652 156.361 li
348.652 158.221 li
348.091 158.221 li
348.091 160.725 li
348.652 160.725 li
348.652 162.584 li
348.091 162.584 li
348.091 165.088 li
348.699 165.088 li
348.934 167.173 350.683 168.801 352.831 168.801 cv
355.074 168.801 li
355.074 169.937 li
355.074 171.532 356.367 172.826 357.963 172.826 cv
368.292 172.826 li
369.888 172.826 371.181 171.532 371.181 169.937 cv
371.181 168.801 li
373.424 168.801 li
375.572 168.801 377.321 167.173 377.556 165.088 cv
378.164 165.088 li
378.164 162.584 li
377.603 162.584 li
377.603 160.725 li
378.164 160.725 li
378.164 158.221 li
377.603 158.221 li
377.603 156.361 li
378.164 156.361 li
378.164 153.858 li
377.603 153.858 li
377.603 151.999 li
378.164 151.999 li
378.164 149.495 li
377.603 149.495 li
377.603 147.088 li
374.271 147.088 li
375.778 144.396 377.896 141.993 380.552 140.019 cv
388.039 134.489 392.492 125.655 392.492 116.39 cv
392.492 100.194 379.313 87.0156 363.135 87.0156 cv
cp
.153964 .0136416 .00540169 0 cmyk
f
129.083 147.43 mo
71.2544 147.43 li
71.2544 104.357 li
129.083 104.357 li
129.083 147.43 li
cp
f
194.578 174.109 mo
136.75 174.109 li
136.75 141.727 li
194.578 141.727 li
194.578 174.109 li
cp
f
373.984 206.986 mo
373.984 221.44 362.267 233.157 347.813 233.157 cv
333.36 233.157 321.643 221.44 321.643 206.986 cv
321.643 192.532 333.36 180.815 347.813 180.815 cv
362.267 180.815 373.984 192.532 373.984 206.986 cv
f
294.791 158.396 mo
292.616 166.101 285.592 171.129 277.97 171.131 cv
276.395 171.131 274.793 170.917 273.197 170.465 cv
265.492 168.289 260.463 161.266 260.462 153.644 cv
260.462 152.069 260.676 150.468 261.128 148.871 cv
263.303 141.166 270.327 136.138 277.949 136.136 cv
279.524 136.136 281.125 136.35 282.722 136.802 cv
290.426 138.977 295.455 146.001 295.456 153.623 cv
295.456 155.198 295.242 156.799 294.791 158.396 cv
270.79 178.971 mo
270.991 178.258 li
270.79 178.971 li
306.826 151.901 mo
306.563 147.519 305.303 143.31 303.211 139.558 cv
306.791 137.562 li
304.997 134.342 302.665 131.421 299.876 128.942 cv
297.15 132.009 li
294 129.21 290.204 127.044 285.881 125.811 cv
286.998 121.886 li
286.947 121.871 li
283.949 121.023 280.921 120.617 277.943 120.617 cv
277.295 120.617 276.65 120.636 276.008 120.674 cv
276.25 124.766 li
271.867 125.025 267.657 126.281 263.903 128.37 cv
261.911 124.788 li
258.689 126.58 255.767 128.909 253.285 131.696 cv
256.35 134.425 li
253.548 137.572 251.38 141.368 250.144 145.69 cv
246.219 144.569 li
246.197 144.646 li
245.349 147.643 244.942 150.671 244.942 153.649 cv
244.942 154.288 244.961 154.925 244.998 155.558 cv
249.091 155.319 li
249.346 159.703 250.598 163.914 252.684 167.669 cv
249.101 169.659 li
250.891 172.881 253.217 175.807 256.002 178.29 cv
258.733 175.227 li
261.878 178.031 265.673 180.202 269.993 181.441 cv
268.869 185.366 li
268.972 185.395 li
271.97 186.244 274.997 186.65 277.975 186.65 cv
278.641 186.65 279.304 186.63 279.964 186.59 cv
279.716 182.499 li
284.097 182.233 288.305 180.969 292.055 178.874 cv
294.054 182.453 li
297.272 180.656 300.192 178.322 302.668 175.531 cv
299.599 172.808 li
302.396 169.655 304.56 165.857 305.789 161.532 cv
309.714 162.646 li
309.721 162.621 li
310.57 159.623 310.976 156.596 310.976 153.618 cv
310.976 152.961 310.956 152.307 310.917 151.655 cv
306.826 151.901 li
f
321.214 101.818 mo
321.214 106.082 317.757 109.539 313.493 109.539 cv
309.229 109.539 305.771 106.082 305.771 101.818 cv
305.771 97.5532 309.229 94.0967 313.493 94.0967 cv
317.757 94.0967 321.214 97.5532 321.214 101.818 cv
cp
f
458.683 406.244 mo
318.311 406.244 177.938 406.244 37.5659 406.244 cv
14.5283 367.747 23.7188 320.047 54.7929 296.662 cv
78.8921 278.525 113.489 277.02 142.458 292.748 cv
140.99 281.939 146.314 271.318 155.765 266.136 cv
165.604 260.739 177.97 262.304 186.292 270.049 cv
188.068 266.024 199.247 241.768 226.211 233.26 cv
250.653 225.548 278.344 233.844 296.657 254.395 cv
310.185 244.813 327.9 243.312 342.838 250.48 cv
357.737 257.631 367.638 272.334 368.668 288.835 cv
396.669 277.069 428.135 280.447 449.29 298.227 cv
477.887 322.262 484.024 369.571 458.683 406.244 cv
f
174.745 270.087 mo
174.745 308.411 143.676 339.479 105.352 339.479 cv
67.0273 339.479 35.959 308.411 35.959 270.087 cv
35.959 231.762 67.0273 200.694 105.352 200.694 cv
143.676 200.694 174.745 231.762 174.745 270.087 cv
f
297.134 220.191 mo
297.134 258.516 266.066 289.584 227.742 289.584 cv
189.417 289.584 158.349 258.516 158.349 220.191 cv
158.349 181.867 189.417 150.798 227.742 150.798 cv
266.066 150.798 297.134 181.867 297.134 220.191 cv
f
172.75 214.553 mo
172.75 226.811 162.812 236.748 150.554 236.748 cv
138.296 236.748 128.358 226.811 128.358 214.553 cv
128.358 202.294 138.296 192.357 150.554 192.357 cv
162.812 192.357 172.75 202.294 172.75 214.553 cv
f
25.9035 397.983 mo
11.3808 370.402 15.13 338.196 32.7193 317.957 cv
34.3806 319.595 36.1056 321.124 37.7316 322.48 cv
33.544 323.562 31.5279 325.605 31.0292 328.455 cv
29.7487 329.415 28.9354 330.924 28.9639 333.216 cv
29.0502 340.166 32.964 345.489 38.3812 349.234 cv
40.5852 353.368 43.0427 357.852 45.4186 362.616 cv
44.8373 366.278 46.7658 370.737 50.6425 374.171 cv
53.2623 380.769 55.312 387.721 56.0791 394.864 cv
53.1362 392.721 48.3153 390.083 42.3695 390.083 cv
41.1491 390.083 39.8813 390.194 38.5727 390.443 cv
33.5964 391.376 29.1557 394.104 25.9035 397.983 cv
472.986 396.758 mo
469.934 387.734 462.845 380.354 453.549 377.428 cv
450.669 376.521 447.726 376.089 444.807 376.089 cv
437.908 376.089 431.148 378.506 425.71 382.802 cv
423.003 373.169 415.647 365.404 406.017 362.376 cv
403.068 361.432 400.038 360.974 397.029 360.974 cv
389.006 360.974 381.14 364.229 375.422 370.195 cv
373.671 364.427 369.056 360.026 363.288 358.786 cv
362.191 358.547 361.084 358.43 359.983 358.43 cv
356.974 358.43 354.007 359.297 351.424 360.887 cv
351.914 343.599 349.905 319.718 339.628 308.443 cv
342.98 305.021 346.075 301.346 348.882 297.45 cv
357.641 297.953 366.153 300.048 373.922 303.716 cv
375.509 300.778 377.661 298.19 380.234 296.1 cv
379.705 300.51 379.002 304.881 378.146 308.594 cv
378.146 308.594 379.496 309.014 381.906 309.543 cv
386.19 310.493 393.814 311.809 403.017 311.809 cv
407.668 311.809 412.725 311.473 417.956 310.583 cv
418.502 310.488 419.638 310.157 420.666 309.864 cv
420.787 310.376 420.892 310.895 420.981 311.419 cv
424.02 310.152 427.354 309.449 430.852 309.449 cv
445.032 309.449 456.527 320.944 456.527 335.124 cv
456.527 336.364 456.435 337.581 456.265 338.773 cv
464.689 344.957 471.081 353.749 474.245 363.96 cv
475.676 368.577 476.446 373.485 476.446 378.573 cv
476.446 384.996 475.219 391.131 472.986 396.758 cv
274.902 357.474 mo
278.201 354.189 280.405 350.065 280.623 345.082 cv
288.455 343.511 295.938 340.974 302.948 337.597 cv
302.766 338.615 302.856 339.698 303.051 340.725 cv
303.216 341.584 303.445 342.416 303.725 343.224 cv
297.325 345.603 291.691 349.996 287.827 355.967 cv
286.272 355.509 284.688 355.287 283.121 355.287 cv
280.221 355.287 277.382 356.047 274.902 357.474 cv
329.272 344.6 mo
327.973 343.948 326.623 343.38 325.233 342.906 cv
322.548 336.883 318.27 332.774 311.835 332.774 cv
311.801 332.774 311.769 332.774 311.736 332.774 cv
314.678 330.951 317.511 328.972 320.228 326.848 cv
323.071 332.179 326.386 338.168 329.272 344.6 cv
41.9444 305.09 mo
40.5387 303.329 38.2846 300.829 35.7939 298.911 cv
36.2171 296.259 36.8899 293.691 37.7882 291.23 cv
38.731 296.634 40.6544 301.991 41.9444 305.09 cv
57.8077 300.088 mo
57.1496 294.61 56.3478 278.12 48.8686 274.719 cv
53.1562 270.805 58.2656 267.772 63.9053 265.911 cv
63.9053 287.08 li
60.6236 290.073 58.399 296.033 57.8077 300.088 cv
level3{
gsave
clp
[7.2709e-15 118.743 -118.743 7.2709e-15 246.696 292.087 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~"=h7g">%@h">7Fh">IOi"#@Oi"#RXj"#dak"#mdk!]dgl!^!sn!^+!n!^=-p!^O6q!^aBs!CX?r!CjHs
!D'Qt!D9Zu!DK`u!)9]u!)Kg!!)Tm"!)g!#!*$*$!*60$!*H<&!*Q?&!*cE&!*uN'!+)Q'!+;W'!+M]'
!+V`'!+qo)!,%o(!,8#)!,A&)!,S/*!,e5*!-">+!-4G,!-FM,!-OP,!-aY-!-jY,!.'b-!.9h-!.Kq.
!.^".!.p+/!/$(-!/6.-!/?1-!/Q7-!/c@.!/lC.!0)I.!0;R/!0DU/!0V[/!0ha/!0qa.!1.g.!1@p/
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!1@p/!1Rp-!1ds,!1mm)!2*m'"/0*&#,5?&$DUZ&%AZl%&Z&5&'W4M&(oTk'*2u1'+0%C&,HE^&-EJp%
.]k3$0!?Q$0sDf$26e)#33j>#4L>_$5d_%$7(*=#8%/U$9=Y$&:V$N+;n;r/=M"P5>eL+;@_DaABYFHH
DSH/OFM@eUH,'C[J&)*bKY[WgM89/lNktbrP/72!Q,3M$RDT")T#1O.Tu-j1Ur*04W58N7X2=o;Y/:5>
Z,-J@[)2kD[_i(F\\eCI]#+LJ]u'gM^;BpN_8?6Q_nuHS`PMTT`kqcVaMIoWahe#Xb/+,Ybea>[c,'G\
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.37076 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.2709e-15 118.743 -118.743 7.2709e-15 246.696 292.087 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~!s8W-!s8W,!WiE)!W`<&!<E3%!<E0#zzzzzzzzzzzzzzzzzzzz!!!$$!sAc4#RUqJ%1a$`',22u)&jP9
*ZuUN,UFfd.P!)'0/54=2)[BR4$5\k5sdt.7S$*D9MSA\;cQn$>$G<@@V'1dCi435Fa&+XIXm$'L51VD
NK93bPE_B"R@Bb=T:r!SUo()iWiN5'YHY:;Za@-K\%&uZ]">Vg]tV7s_8=(,`5T^7`lH0AaN;QHb0/#Q
~>
<~.4Zr$0/,+:1c70M3'',_4[)(r6:4127nH<G9MJ8X:f1.j<EE:)>$G6;?=.,M@Us(_BPD0rCi+'/EH6/C
Fa&%SH@($gIt3-&K8##6Ll%"IN/`mZOHPflQ'Rc)R@9V8S=Q4BT:_dLTqS0SU8+KYUnji`VPg>iW2Q\p
WN)u!X/i>'Xf\b0YHY78Z*CR>Za@*H[C*HO[^WcW\[f8]]"5Jb]Y(ni]tM+n^:q=q^V@S"^qdb$^qde&
_83t(_84"*_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX1,_SX.*_83t(_83t(
~>
<~_83q%^:h4m]=YYb\[f8]\@B&X\$i]O['R'CYct@8YHP+2XK/D&WMlbnVPU&^U7n6PSt2FBS!ob4R$X)'
P`q8mOH5E]N/NRLLP:G8JqAQ(IsufoI!U'_G'.nJEc>r7D/3j!An>I\?X6o?=B8C!;,9nZ8Ou<>6U<q"
4#o5W1GLO6.OZSg+s7pH)Aj8*'+k`a$O?q?"9JT(zzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
413.011 396.441 mo
401.594 396.441 li
401.594 390.32 397.563 384.288 394.549 379.146 cv
394.453 378.983 394.357 378.815 394.261 378.652 cv
391.665 374.167 388.291 370.003 387.292 364.785 cv
387.003 363.268 386.945 361.625 387.656 360.254 cv
388.412 358.79 389.951 357.854 391.548 357.444 cv
410.565 352.569 414.541 377.963 413.011 396.441 cv
cp
level3{
gsave
clp
[2.42522e-15 39.6068 -39.6068 2.42522e-15 400.199 356.834 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~`Mrn<`i9"=`i9"=a/]1?a/]1?a/f7@`iK.?`iT4@`i]:Aa0#CBa0,ICa0,ICa0,ICaKPXEaKPXEaKPXE
aKPXEaKY^FaftgGag(mHaKkjHaKkjHaKtpIag;$JagD*KagD*KagD*Kb-_3Lb-h9Mb-h9MbI7HObI7HO
bI@NPbI@NPbIITQbIITQbIITQbIRZRbIRZRbIRZRbIRZRbI[`SbI[`Sbe*oUbe*oUbe3uVbe3uVbe3uV
be=&Wbe=&Wbe=&Wbe=&WbeF,Xc+a5Yc+a5Yc+a5Yc+j;Zc+j;Zc+j;Zc+sA[c+sA[c+sA[c+sA[c,'G\
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~c,'G\cGBP]cGKV^cGKV^cG]b`cGfhacGonbcc6"ccc?(dd)c7fd)l=gd)l=gdE;LidEDRjdEMXkdE_dm
dEhjndEhjnda8$pdaA*qdaJ0rda\<tda\<te(+L!e(4R"e(=X#e(Od%eCjm&eCss'e_L3*e_U9+e_^?,
e_pK.f&?Z0f&H`1f&Zl3f&m#5fB<27fBE88f]rM;f^&S<g$Sh?g$etAg@5.Cg@G:Eg@YFGg@kRIg\LmM
g\_$Oh#79Rh#@?Th#@?Th#@?Th#@?Uh#@BWh#@HYh>[T\h>[W]h>[Z_h#@Zbh#@]dg]%]hgA_ZjgA_`n
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.326986 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.42522e-15 39.6068 -39.6068 2.42522e-15 400.199 356.834 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~`5T^8`l?$<`Pog9`l?$<a2c6@a2c6AaN2HCa2c9BaN2HEaiVZIb0%lLb0%lLb0%lLb0%lLbKJ)PbKJ)P
bKJ)PbKJ,Rbfn;Tbfn;Tbfn;Tc-=MXc-=MXc-=MXc-=MXc-FV[cHab^cd0q`cd0tbd*U.dd*U.dd*U.d
d*U.edF$@hdF$@hdF$@hdaHRldaHRldaHRme'ldpe'umseC<!teC<!te^`4#e^`4#e^`4$f%/F'f@SX+
f@S[-f\"j0g"G'3g"G'3g"G*5g=k98gY:K;gY:K;gY:K;gY:K;gY:K<gt^]?gt^]?gt^Z=gY:K:g=k65
~>
<~WMuksWiE,#XK8P+Y-+q1YHP.5YHP17Z*CU?Za7!F['[3I[C*EN[^NZS\@B&Y\[f8]\[f;_]=Y\f]Y(nj
]tM+m^:q=q^:q@s^V@S"^qdb%_83t)_SX1,_o'F3`Poj:`l?$=a2c9BaN;QGaiV]Jb0.uObfn>VcHjh_
cd0qad*^7gdaHRmeC<!te^`4$f%/I)f@\d0g"G*5g=tE<h;-rEhV[8LiSieUioB([jlY^gkNM-nl0@R"
lg*p)mdBQ5nF5u=o(2MHp%J.Tq>1!dr;HWorr<#us8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<N<)!sA`0"U,&6#7(VB$4
@7O%Ls!\~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!$#!<N<(!WiE*!s8W-"9\i
2"U,)7#6tM@#mgqH~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
408.103 396.441 mo
407.614 396.441 li
407.572 393.854 407.3 391.266 406.882 388.716 cv
406.376 385.63 405.616 382.595 404.621 379.64 cv
402.639 373.728 399.608 368.176 395.636 363.326 cv
395.31 362.913 395.599 362.691 395.941 363.059 cv
400.285 367.653 403.601 373.272 405.607 379.309 cv
406.615 382.327 407.333 385.442 407.735 388.595 cv
408.065 391.199 408.22 393.824 408.103 396.441 cv
cp
.766384 .709743 0 0 cmyk
f
433.369 396.441 mo
444.988 396.441 li
444.988 381.545 461.84 366.916 449.135 365.335 cv
444.614 364.77 441.388 367.087 439.09 370.688 cv
433.369 379.621 433.369 396.441 433.369 396.441 cv
cp
level3{
gsave
clp
[-1.9099e-15 31.191 31.191 1.9099e-15 443.622 365.25 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.9099e-15 31.191 31.191 1.9099e-15 443.622 365.25 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
420.651 396.441 mo
434.912 396.441 li
437.236 374.986 436.601 321.199 405.533 326.482 cv
381.697 330.533 420.042 361.519 420.651 396.441 cv
cp
level3{
gsave
clp
[-4.30599e-15 70.3221 70.3221 4.30599e-15 416.732 326.119 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.30599e-15 70.3221 70.3221 4.30599e-15 416.732 326.119 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
412.854 338.33 mo
414.733 340.438 416.289 342.813 417.66 345.276 cv
419.032 347.734 420.188 350.318 421.159 352.966 cv
422.143 355.607 422.988 358.306 423.68 361.049 cv
424.378 363.786 424.975 366.548 425.451 369.342 cv
426.436 374.91 427.032 380.555 427.407 386.212 cv
427.623 389.622 427.763 393.031 427.794 396.441 cv
428.766 396.441 li
428.893 393.013 428.886 389.577 428.766 386.143 cv
428.543 380.428 428.01 374.707 427.007 369.056 cv
426.518 366.23 425.883 363.424 425.127 360.655 cv
424.385 357.881 423.464 355.15 422.378 352.483 cv
421.857 351.144 421.235 349.842 420.619 348.54 cv
419.946 347.265 419.299 345.981 418.524 344.769 cv
417.019 342.318 415.317 339.969 413.286 337.931 cv
412.676 337.282 412.276 337.645 412.854 338.33 cv
cp
.766384 .709743 0 0 cmyk
f
409.443 396.441 mo
421.28 396.441 li
421.28 396.441 424.401 371.498 411.003 371.515 cv
398.81 371.522 406.953 386.937 409.443 396.441 cv
cp
level3{
gsave
clp
[-1.52634e-15 24.927 24.927 1.52634e-15 413.032 371.514 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.52634e-15 24.927 24.927 1.52634e-15 413.032 371.514 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
412.971 377.674 mo
414.73 383.285 415.478 389.161 415.893 395.014 cv
415.917 395.486 415.942 395.968 415.967 396.441 cv
416.997 396.441 li
416.98 395.935 416.955 395.437 416.922 394.938 cv
416.49 389.021 415.503 383.086 413.328 377.532 cv
413.145 377.101 412.821 377.233 412.971 377.674 cv
cp
.766384 .709743 0 0 cmyk
f
437.813 396.441 mo
438.556 396.441 li
438.83 394.181 439.172 391.921 439.598 389.686 cv
440.245 386.562 441.045 383.476 442.105 380.473 cv
442.385 379.723 442.703 378.993 442.995 378.256 cv
443.147 377.888 443.28 377.514 443.452 377.151 cv
443.985 376.085 li
444.512 375.012 li
444.69 374.656 444.861 374.294 445.083 373.964 cv
446.334 371.926 li
446.595 371.507 446.385 371.335 446.093 371.761 cv
444.734 373.755 li
444.493 374.085 444.309 374.44 444.119 374.796 cv
443.534 375.856 li
442.957 376.923 li
442.772 377.278 442.626 377.653 442.455 378.021 cv
442.138 378.765 441.794 379.494 441.496 380.244 cv
440.34 383.26 439.477 386.377 438.823 389.539 cv
438.385 391.825 438.048 394.13 437.813 396.441 cv
cp
f
47.8984 399.913 mo
35.1978 399.913 li
35.1978 393.104 30.7148 386.395 27.3613 380.674 cv
27.2544 380.492 27.1475 380.307 27.0405 380.125 cv
24.1523 375.135 20.3994 370.503 19.2881 364.699 cv
18.9673 363.011 18.9019 361.183 19.6924 359.657 cv
20.5342 358.03 22.2456 356.988 24.0225 356.532 cv
45.1782 351.109 49.6006 379.357 47.8984 399.913 cv
cp
level3{
gsave
clp
[2.69787e-15 44.0596 -44.0596 2.69787e-15 33.6463 355.854 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.69787e-15 44.0596 -44.0596 2.69787e-15 33.6463 355.854 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
42.439 399.913 mo
41.8945 399.913 li
41.8481 397.035 41.5459 394.156 41.0811 391.319 cv
40.5181 387.887 39.6719 384.511 38.5649 381.223 cv
36.3604 374.646 32.9888 368.471 28.5708 363.076 cv
28.208 362.615 28.5288 362.369 28.9102 362.778 cv
33.7422 367.89 37.4302 374.14 39.6626 380.855 cv
40.7832 384.213 41.583 387.678 42.0293 391.185 cv
42.397 394.082 42.5688 397.002 42.439 399.913 cv
cp
.766384 .709743 0 0 cmyk
f
70.5449 399.913 mo
83.4712 399.913 li
83.4712 383.343 102.217 367.069 88.0835 365.311 cv
83.0541 364.682 79.4663 367.26 76.9092 371.265 cv
70.5449 381.202 70.5449 399.913 70.5449 399.913 cv
level3{
gsave
clp
[-2.12461e-15 34.6976 34.6976 2.12461e-15 81.9514 365.216 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.12461e-15 34.6976 34.6976 2.12461e-15 81.9514 365.216 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
59.2114 397.536 mo
59.0217 397.347 57.9165 396.202 56.0791 394.864 cv
55.312 387.721 53.2623 380.769 50.6425 374.171 cv
51.8968 375.282 53.3547 376.285 54.9981 377.12 cv
57.6086 378.446 60.3598 379.391 63.1737 379.965 cv
63.4491 382.504 63.6702 385.05 63.8493 387.6 cv
60.7525 392.431 59.4568 396.676 59.2114 397.536 cv
45.4186 362.616 mo
43.0427 357.852 40.5852 353.368 38.3812 349.234 cv
44.0406 353.147 51.3403 355.338 57.6322 355.867 cv
57.116 355.836 56.6173 355.821 56.1358 355.821 cv
49.3851 355.821 46.0272 358.782 45.4186 362.616 cv
31.0292 328.455 mo
31.5279 325.605 33.544 323.562 37.7316 322.48 cv
41.9885 326.03 45.5693 328.39 45.5693 328.39 cv
45.5691 328.39 44.4619 328.031 42.8196 327.672 cv
41.1779 327.313 39.0012 326.954 36.8606 326.954 cv
34.6774 326.954 32.5317 327.327 31.0292 328.455 cv
level3{
gsave
clp
[-4.79008e-15 78.2279 78.2279 4.79008e-15 52.0383 321.686 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.79008e-15 78.2279 78.2279 4.79008e-15 52.0383 321.686 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
47.7236 335.269 mo
49.8144 337.614 51.5449 340.256 53.0709 342.997 cv
54.5962 345.73 55.8818 348.605 56.9624 351.551 cv
58.0576 354.489 58.997 357.491 59.7666 360.542 cv
60.5435 363.587 61.2075 366.659 61.7374 369.768 cv
62.832 375.962 63.4961 382.241 63.9131 388.534 cv
64.1529 392.327 64.3086 396.12 64.3438 399.913 cv
65.4244 399.913 li
65.5659 396.1 65.5585 392.278 65.4244 388.457 cv
65.1773 382.1 64.584 375.735 63.4678 369.449 cv
62.9243 366.306 62.2178 363.184 61.377 360.105 cv
60.5508 357.018 59.5264 353.98 58.3188 351.014 cv
57.7397 349.523 57.0474 348.075 56.3623 346.628 cv
55.6133 345.208 54.8931 343.781 54.0313 342.432 cv
52.3574 339.705 50.4643 337.092 48.2041 334.824 cv
47.5258 334.105 47.0811 334.507 47.7236 335.269 cv
.766384 .709743 0 0 cmyk
f
43.9297 399.913 mo
57.0972 399.913 li
57.0972 399.913 60.5688 372.166 45.6655 372.185 cv
32.1011 372.193 41.1592 389.341 43.9297 399.913 cv
cp
level3{
gsave
clp
[-1.69794e-15 27.7294 27.7294 1.69794e-15 47.922 372.184 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.69794e-15 27.7294 27.7294 1.69794e-15 47.922 372.184 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
47.854 379.036 mo
49.8115 385.277 50.6426 391.815 51.1045 398.325 cv
51.1318 398.852 51.1597 399.387 51.1875 399.913 cv
52.3325 399.913 li
52.314 399.351 52.2861 398.796 52.2495 398.242 cv
51.769 391.658 50.6704 385.056 48.251 378.879 cv
48.0479 378.398 47.688 378.546 47.854 379.036 cv
cp
.766384 .709743 0 0 cmyk
f
75.4893 399.913 mo
76.3159 399.913 li
76.6197 397.398 77.0009 394.885 77.4741 392.398 cv
78.1948 388.923 79.0845 385.49 80.2641 382.149 cv
80.5752 381.315 80.9283 380.503 81.2534 379.684 cv
81.4228 379.274 81.5708 378.857 81.7618 378.455 cv
82.3549 377.269 li
82.9414 376.074 li
83.1391 375.679 83.3296 375.276 83.5766 374.909 cv
84.9682 372.642 li
85.2578 372.176 85.0249 371.985 84.7002 372.458 cv
83.1885 374.676 li
82.92 375.043 82.7153 375.438 82.5034 375.835 cv
81.8535 377.014 li
81.2109 378.201 li
81.0059 378.597 80.8433 379.013 80.6529 379.423 cv
80.2993 380.249 79.918 381.061 79.5859 381.894 cv
78.3003 385.25 77.3399 388.718 76.6123 392.235 cv
76.125 394.778 75.751 397.343 75.4893 399.913 cv
f
63.9053 380.105 mo
63.6611 380.061 63.417 380.014 63.1737 379.965 cv
60.3598 379.391 57.6086 378.446 54.9981 377.12 cv
53.3547 376.285 51.8968 375.282 50.6425 374.171 cv
46.7658 370.737 44.8373 366.278 45.4186 362.616 cv
46.0272 358.782 49.3851 355.821 56.1358 355.821 cv
56.6173 355.821 57.116 355.836 57.6322 355.867 cv
51.3403 355.338 44.0406 353.147 38.3812 349.234 cv
32.964 345.489 29.0502 340.166 28.9639 333.216 cv
28.9354 330.924 29.7487 329.415 31.0292 328.455 cv
32.5317 327.327 34.6774 326.954 36.8606 326.954 cv
39.0012 326.954 41.1779 327.313 42.8196 327.672 cv
44.4619 328.031 45.5691 328.39 45.5693 328.39 cv
45.5693 328.39 41.9885 326.03 37.7316 322.48 cv
36.1056 321.124 34.3806 319.595 32.7193 317.957 cv
26.5842 311.909 21.3126 304.383 25.0586 298.665 cv
26.2612 296.829 27.7552 296.099 29.3685 296.099 cv
31.436 296.099 33.6988 297.299 35.7939 298.911 cv
38.2846 300.829 40.5387 303.329 41.9444 305.09 cv
40.6544 301.991 38.731 296.634 37.7882 291.23 cv
37.3359 288.637 37.1094 286.035 37.2866 283.664 cv
37.6229 279.166 39.4132 275.507 43.8745 274.354 cv
44.6066 274.183 45.298 274.101 45.9516 274.101 cv
47.0227 274.101 47.9916 274.32 48.8686 274.719 cv
56.3478 278.12 57.1496 294.61 57.8077 300.088 cv
58.399 296.033 60.6236 290.073 63.9053 287.08 cv
63.9053 303.115 li
63.5347 304.251 63.1512 305.379 62.7651 306.492 cv
62.31 307.804 61.7739 309.105 61.2876 310.42 cv
60.7197 311.687 60.2329 313.008 59.6142 314.245 cv
58.6402 316.459 57.4825 318.544 56.2989 320.606 cv
51.2764 307.642 47.5381 294.714 44.8491 281.082 cv
47.1841 294.838 50.5947 307.915 55.2886 321.063 cv
53.0771 320.491 50.8657 319.767 48.6924 318.78 cv
46.1909 317.646 43.706 316.315 41.3077 314.734 cv
38.9145 313.156 36.5439 311.391 34.2759 309.428 cv
32.0073 307.464 29.8047 305.321 27.7329 302.955 cv
29.7461 305.41 31.9019 307.652 34.1338 309.72 cv
36.3652 311.787 38.7085 313.662 41.0889 315.353 cv
43.4741 317.047 45.96 318.495 48.48 319.748 cv
50.8876 320.944 53.3623 321.833 55.8545 322.536 cv
58.3671 328.645 61.0064 334.505 63.9053 340.406 cv
63.9053 342.266 li
62.2657 342.601 60.566 342.795 58.8536 342.795 cv
58.6339 342.795 58.4143 342.792 58.1943 342.785 cv
55.6143 342.711 52.9165 342.311 50.2691 341.628 cv
47.6162 340.944 44.9341 339.989 42.2997 338.806 cv
39.664 337.621 37.0415 336.222 34.4957 334.528 cv
37.0098 336.329 39.6152 337.843 42.247 339.143 cv
44.8775 340.441 47.5679 341.516 50.2485 342.315 cv
52.9233 343.113 55.6685 343.632 58.3242 343.812 cv
58.8628 343.848 59.4021 343.866 59.9408 343.866 cv
61.2723 343.866 62.6003 343.758 63.9053 343.559 cv
63.9053 367.925 li
61.9189 367.83 59.9064 367.65 57.8876 367.362 cv
55.1563 366.973 52.3951 366.422 49.6246 365.636 cv
52.3969 366.539 55.1713 367.208 57.9248 367.712 cv
59.9254 368.078 61.9254 368.34 63.9053 368.516 cv
63.9053 380.105 li
58.4033 355.924 mo
58.4033 355.924 li
58.4033 355.924 li
63.9053 336.961 mo
61.3443 332.119 58.9883 327.108 56.9126 322.085 cv
58.1645 319.69 59.3951 317.29 60.3969 314.754 cv
60.9776 313.467 61.4238 312.104 61.9506 310.796 cv
62.3965 309.441 62.8907 308.103 63.3032 306.758 cv
63.5058 306.098 63.7071 305.434 63.9053 304.767 cv
63.9053 336.961 li
level3{
gsave
clp
[-10.7035 103.166 -103.166 -10.7035 65.6703 276.106 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~_S-!M_S#pL_RojK_n,mK_R]^I_R]^I_RTXH_RKRG_R9FE_R0@D_6a1B_6X+A_6Et?_6<n>_6*b<_5mV:
_5[J8_5I>6^nq)3^SCi0^7kT-^7PB*^7>6(]p\p$]pA^!]T`Br]9*'n\r?[i\VU:d[tOe^[X\>X[!ViR
Z$-0JY]9^DX_n+=X(_P6Wac#/W*TH(VHEm!Uf7<oUJCjiU.G=bTL8b[T0<5TSiHcNShg?HSLsmBRjS19
Riqb3R2c2,R2,c&R1TE!R0iooR0<QjR/d3eR/d3eQiI*dQ2h!ePQ1gdOT5RcO8oReNrTRgMuX=fM#\(e
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-10.7035 103.166 -103.166 -10.7035 65.6703 276.106 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Ll%"IMi<XUNfT6^O-#HbOHG]iPE_;sQ'R`&Q^F/-R$a8.R$a8.R$a8.R$a8.R$a8.R$a8.R$jA2R[T\6
R[T_8S=H.@SXl=BSXl@DSt;RHT:_dLTqS3TU8"EXUSFW\V5:&dVl-JlWMuntWiE,#XK8P+Y-5(6YctC;
ZEpmE['d<M[^NWR\%&rY\[f8^]"5Jb]=Y\f]Y(ni]Y(nj]tM+m]tM+m]tM+n^:q=r^V@P!^qdb$^qdb$
^qdb$^qdb$^qdb$^qdb$^qdb$^qdb$_83t(_83t(_83t(_83t(_83t(_83t(_SX1,_SX1,_83t(_83t(
~>
<~zzzzzzzzz!!!$$"9eu7#mq(M%hTEf'G_K&)B9b=+!DgR,pk#i/1iM/0etRC2`NfZ4?Yno6:4.17n?3E9
MSA[;H$Op='/U/>?tQB?t*VVAnPgmCM[m,E,fo>FEMePH$XgbI=?ZsJqJ`1L51SAMMmFQNfT9aP*2#nQ
'IZ%R$a;1S"#q=SXuFFT:hmPU8+KZUnsobVPg>jW2ZbrWiE,#XK8P+Y-+t3Yct@9Z*CU?Za7!E['[3I[
C*EM[^NZS\@B&Y\[f8]\[f8]]"5Ja]=Y\e]Y(ni]tM+m~>
<~%hB0\%LijU$k!CK#m^b?"pG/5"9S`.!s/K(zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzz!!!!!~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
63.9053 368.516 mo
61.9254 368.34 59.9254 368.078 57.9248 367.712 cv
55.1713 367.208 52.3969 366.539 49.6246 365.636 cv
52.3951 366.422 55.1563 366.973 57.8876 367.362 cv
59.9064 367.65 61.9189 367.83 63.9053 367.925 cv
63.9053 368.516 li
59.9408 343.866 mo
59.4021 343.866 58.8628 343.848 58.3242 343.812 cv
55.6685 343.632 52.9233 343.113 50.2485 342.315 cv
47.5679 341.516 44.8775 340.441 42.247 339.143 cv
39.6152 337.843 37.0098 336.329 34.4957 334.528 cv
37.0415 336.222 39.664 337.621 42.2997 338.806 cv
44.9341 339.989 47.6162 340.944 50.2691 341.628 cv
52.9165 342.311 55.6143 342.711 58.1943 342.785 cv
58.4143 342.792 58.6339 342.795 58.8536 342.795 cv
60.566 342.795 62.2657 342.601 63.9053 342.266 cv
63.9053 343.559 li
62.6003 343.758 61.2723 343.866 59.9408 343.866 cv
63.9053 340.406 mo
61.0064 334.505 58.3671 328.645 55.8545 322.536 cv
53.3623 321.833 50.8876 320.944 48.48 319.748 cv
45.96 318.495 43.4741 317.047 41.0889 315.353 cv
38.7085 313.662 36.3652 311.787 34.1338 309.72 cv
31.9019 307.652 29.7461 305.41 27.7329 302.955 cv
29.8047 305.321 32.0073 307.464 34.2759 309.428 cv
36.5439 311.391 38.9145 313.156 41.3077 314.734 cv
43.706 316.315 46.1909 317.646 48.6924 318.78 cv
50.8657 319.767 53.0771 320.491 55.2886 321.063 cv
50.5947 307.915 47.1841 294.838 44.8491 281.082 cv
47.5381 294.714 51.2764 307.642 56.2989 320.606 cv
57.4825 318.544 58.6402 316.459 59.6142 314.245 cv
60.2329 313.008 60.7197 311.687 61.2876 310.42 cv
61.7739 309.105 62.31 307.804 62.7651 306.492 cv
63.1512 305.379 63.5347 304.251 63.9053 303.115 cv
63.9053 304.767 li
63.7071 305.434 63.5058 306.098 63.3032 306.758 cv
62.8907 308.103 62.3965 309.441 61.9506 310.796 cv
61.4238 312.104 60.9776 313.467 60.3969 314.754 cv
59.3951 317.29 58.1645 319.69 56.9126 322.085 cv
58.9883 327.108 61.3443 332.119 63.9053 336.961 cv
63.9053 340.406 li
level3{
gsave
clp
[84.2862 8.74468 -8.74468 84.2862 24.799 331.235 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~[ZLOi\!-jm\<R$o\X*9r\sWNu]:/d#]U]$&]q59)^7bN,^7tZ.^SCi0^nq)3_5I>6_Q!S9_Q*Y:_lWn=
`30.@`NT=B`j,REa0YgHa0ksJaLD3MaghBOb.@WRbImlUbe=&Wc+j;ZcGBP]cbf__d)5nadDc.ddDu:f
d`MOie'%dleBS$oe^+9rf$OHtf$XNuf@9j$g"$-'g=QB*gY)W-gtMf/h;&&2hVS;5hr"J7i8O_:iT't=
io^:Aj6-ICjQZ^Fjm2sIkNr6LkjJKOl1"`RlLY&Vlh1;Zm.p\_mJHqbmJd.en,E@hnG`Iinc&Rjo)A[k
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[84.2862 8.74468 -8.74468 84.2862 24.799 331.235 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~[C3NP[^W`T\%&rX\@K/\\[oA`]">Sd]=beh]Y2"l]tM+m]tV4p^;%Ft^VIY#^qmk'_83t(_8=(+_Sa:/
_o'F2`5KX6`Poj:`l?$<`l?'>a2c9BaN2KFaiV]Jb0%oNbKJ,Rbfn>Vc-=PZcHab^cd0tbd*U.dd*U1f
dF$@idaHRme'ldqeC<!ue^`4#e^`4$f%/F(f@\a/g"G'4g=k98gY:K<gt^]@h;-oDhVR,Hhr!>Li8EPP
iSibSio8tWj5]1[jQ,C_jlPXekND$kkih6ol07HslK[["lg*m&m-O**m-O**mHs?0n*f`6nF5r:naZ/>
~>
<~OHG]iPE_;rPa.N"QC!r*R$jA2R[]e:S=Q4BStDXJTV8'RU8+KYUSO]^V5C,fVl6PnWN)tuWiN2%XKAV-
Y-+t3YHP17Z*CU?Za7$G[C*HO\$rlW\@B)[]"5Mc]Y(qk]tM.o^V@S"_84"*_SX4._o'F2`Poj:a2c9B
aN;QHb0.uPbg"DXcHjh`d*U.edF$@ie'lgse^`4$f%8O+f\+s3g=k98gYCT?h;7#Ghr!>Li8NYSioB([
jQ5OdkND$kkih9qlK[^$m-O**mHs?0n*fc8nac8Bo^qhLp@n@XqYL*dr;?Nms8W-!s8W-!s8W-!s8W-!
~>
0 <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E3%!<E3%!<E3%
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
271.355 360.241 mo
271.355 348.258 li
272.498 347.579 273.63 346.851 274.744 346.068 cv
276.722 345.8 278.686 345.47 280.623 345.082 cv
280.405 350.065 278.201 354.189 274.902 357.474 cv
273.608 358.219 272.411 359.146 271.355 360.241 cv
271.355 348.076 mo
271.355 346.936 li
247.98 346.936 li
248.133 346.611 248.284 346.287 248.435 345.962 cv
252.857 346.598 257.372 346.926 261.967 346.926 cv
266.288 346.926 270.539 346.635 274.708 346.073 cv
273.603 346.793 272.483 347.458 271.355 348.076 cv
246.382 346.936 mo
239.625 346.936 li
239.6 346.895 239.575 346.854 239.549 346.813 cv
238.947 345.834 238.358 344.826 237.788 343.8 cv
240.8 344.595 243.873 345.246 246.994 345.744 cv
246.791 346.142 246.587 346.54 246.382 346.936 cv
238.535 346.936 mo
230.748 346.936 li
230.748 341.642 li
232.724 342.333 234.729 342.961 236.763 343.523 cv
237.332 344.68 237.925 345.823 238.535 346.936 cv
level3{
gsave
clp
[10.7035 103.166 103.166 -10.7035 243.933 287.387 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.7035 103.166 103.166 -10.7035 243.933 287.387 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
271.355 348.258 mo
271.355 348.076 li
272.483 347.458 273.603 346.793 274.708 346.073 cv
274.721 346.071 274.732 346.069 274.744 346.068 cv
273.63 346.851 272.498 347.579 271.355 348.258 cv
247.98 346.936 mo
246.382 346.936 li
246.587 346.54 246.791 346.142 246.994 345.744 cv
247.473 345.82 247.953 345.893 248.435 345.962 cv
248.284 346.287 248.133 346.611 247.98 346.936 cv
239.625 346.936 mo
238.535 346.936 li
237.925 345.823 237.332 344.68 236.763 343.523 cv
237.103 343.617 237.446 343.709 237.788 343.8 cv
238.358 344.826 238.947 345.834 239.549 346.813 cv
239.575 346.854 239.6 346.895 239.625 346.936 cv
level3{
gsave
clp
[-84.2863 8.74469 8.74469 84.2863 284.805 342.516 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-84.2863 8.74469 8.74469 84.2863 284.805 342.516 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
424.059 361.443 mo
426.879 358.379 434.36 364.146 434.36 364.146 cv
430.897 359.64 420.667 348.527 424.407 343.566 cv
427.444 339.539 433.562 343.073 436.406 346.486 cv
433.644 342.37 423.828 329.989 427.824 326.465 cv
431.316 323.385 436.653 329.021 438.582 332.692 cv
437.648 328.507 433.458 314.683 441.578 313.798 cv
449.458 313.118 449.74 327.091 449.449 332.327 cv
450.658 328.854 454.124 321.385 458.463 324.696 cv
465.496 330.063 452.279 347.48 452.279 347.48 cv
452.28 347.481 461.415 340.496 463.566 346.847 cv
466.608 355.832 457.825 364.068 450.351 367.246 cv
460.943 362.438 463.438 372.886 457.058 379.574 cv
451.694 385.196 443.527 387.451 435.992 385.617 cv
430.335 382.689 419.772 366.101 424.059 361.443 cv
cp
level3{
gsave
clp
[29.0205 61.282 61.282 -29.0205 428.523 319.614 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[29.0205 61.282 61.282 -29.0205 428.523 319.614 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
432.442 371.835 mo
433.368 373.056 434.355 374.233 435.371 375.357 cv
436.156 376.228 436.998 377.037 437.864 377.799 cv
439.705 372.212 441.149 366.494 442.183 360.702 cv
440.882 359.772 439.595 358.79 438.399 357.735 cv
437.083 356.573 435.783 355.306 434.565 354.009 cv
433.348 352.712 432.188 351.35 431.094 349.952 cv
430 348.555 428.955 347.126 428.03 345.629 cv
429.005 347.089 430.097 348.472 431.233 349.817 cv
432.37 351.164 433.568 352.468 434.818 353.699 cv
436.069 354.931 437.398 356.124 438.735 357.206 cv
439.883 358.135 441.107 358.993 442.342 359.796 cv
443.139 355.289 443.672 350.63 443.915 346.06 cv
442.623 344.854 441.342 343.643 440.173 342.297 cv
439.536 341.63 438.964 340.887 438.354 340.194 cv
437.786 339.456 437.19 338.738 436.643 337.999 cv
435.554 336.525 434.461 335.005 433.46 333.456 cv
432.46 331.909 431.5 330.338 430.645 328.714 cv
431.552 330.304 432.561 331.832 433.607 333.334 cv
434.654 334.836 435.79 336.304 436.917 337.718 cv
437.483 338.428 438.096 339.113 438.682 339.818 cv
439.308 340.477 439.895 341.185 440.545 341.813 cv
441.627 342.967 442.794 344 443.972 345.015 cv
444.25 335.93 443.745 327.146 442.44 318.157 cv
443.99 327.146 444.73 335.949 444.694 345.076 cv
445.933 344.243 447.139 343.315 448.265 342.235 cv
449.56 340.992 450.803 339.632 451.938 338.136 cv
453.07 336.643 454.148 335.038 455.12 333.335 cv
456.092 331.631 456.984 329.831 457.747 327.923 cv
457.04 329.874 456.198 331.725 455.271 333.484 cv
454.345 335.244 453.308 336.909 452.208 338.469 cv
451.105 340.032 449.887 341.465 448.605 342.785 cv
447.381 344.047 446.049 345.132 444.666 346.107 cv
444.423 350.829 444.022 355.398 443.438 360.09 cv
444.841 359.938 446.266 359.624 447.624 359.101 cv
449.199 358.493 450.775 357.66 452.259 356.664 cv
453.746 355.666 455.192 354.494 456.559 353.192 cv
457.926 351.889 459.239 350.456 460.44 348.858 cv
459.282 350.516 458.004 352.015 456.665 353.389 cv
455.325 354.761 453.899 356.008 452.421 357.084 cv
450.945 358.157 449.365 359.073 447.767 359.762 cv
446.339 360.376 444.823 360.77 443.307 360.976 cv
442.419 366.841 441.116 372.642 439.412 378.323 cv
440.723 378.227 442.042 378.06 443.358 377.771 cv
445.005 377.411 446.663 376.947 448.294 376.338 cv
449.922 375.729 451.557 375.02 453.155 374.187 cv
454.755 373.353 456.337 372.413 457.875 371.326 cv
456.362 372.485 454.796 373.501 453.208 374.41 cv
451.622 375.318 449.993 376.105 448.363 376.789 cv
446.73 377.474 445.064 378.014 443.398 378.446 cv
441.989 378.813 440.567 379.042 439.147 379.192 cv
437.069 385.829 434.527 392.355 431.374 398.561 cv
430.591 398.144 430.199 397.937 429.416 397.521 cv
432.684 391.493 435.359 385.131 437.581 378.65 cv
436.659 377.761 435.772 376.827 434.958 375.832 cv
433.976 374.632 433.029 373.389 432.148 372.11 cv
431.269 370.833 430.411 369.534 429.598 368.223 cv
428.785 366.911 427.995 365.589 427.261 364.245 cv
428.048 365.554 428.889 366.835 429.751 368.101 cv
430.613 369.367 431.518 370.614 432.442 371.835 cv
cp
level3{
gsave
clp
[-50.0634 23.7078 23.7078 50.0634 465.703 344.722 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-50.0634 23.7078 23.7078 50.0634 465.703 344.722 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
444.052 369.762 mo
446.907 369.146 448.865 375.475 448.865 375.475 cv
448.701 371.492 447.328 360.987 451.478 359.655 cv
454.846 358.573 456.925 363.072 457.175 366.178 cv
457.255 362.702 456.632 351.638 460.348 351.232 cv
463.594 350.878 464.376 356.266 463.998 359.15 cv
465.154 356.374 468.339 346.755 473.352 349.53 cv
478.144 352.325 472.658 360.449 470.375 363.333 cv
472.472 361.831 477.478 358.949 478.626 362.602 cv
480.489 368.521 465.873 373.163 465.873 373.163 cv
465.873 373.164 473.933 372.853 472.599 377.362 cv
470.712 383.743 462.348 384.914 456.779 383.715 cv
464.794 385.24 462.001 392.237 455.641 393.493 cv
450.294 394.548 444.701 392.54 441.123 388.442 cv
439.063 384.479 439.713 370.699 444.052 369.762 cv
cp
level3{
gsave
clp
[-8.13245 46.8591 46.8591 8.13245 463.517 347.587 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-8.13245 46.8591 46.8591 8.13245 463.517 347.587 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
444.658 379.107 mo
444.695 380.182 444.786 381.256 444.913 382.311 cv
445.012 383.127 445.167 383.931 445.355 384.718 cv
448.669 382.259 451.808 379.564 454.742 376.663 cv
454.371 375.604 454.031 374.521 453.771 373.433 cv
453.486 372.234 453.253 370.982 453.08 369.747 cv
452.906 368.512 452.792 367.262 452.729 366.019 cv
452.667 364.775 452.646 363.533 452.721 362.302 cv
452.689 363.533 452.756 364.767 452.863 365.997 cv
452.971 367.229 453.131 368.46 453.35 369.672 cv
453.569 370.883 453.849 372.104 454.178 373.265 cv
454.46 374.261 454.815 375.248 455.199 376.207 cv
457.478 373.945 459.667 371.49 461.652 368.969 cv
461.398 367.756 461.154 366.543 461.028 365.299 cv
460.932 364.659 460.905 364.002 460.835 363.359 cv
460.808 362.706 460.756 362.054 460.742 361.409 cv
460.712 360.124 460.701 358.811 460.753 357.519 cv
460.805 356.227 460.89 354.938 461.056 353.661 cv
460.934 354.939 460.894 356.224 460.887 357.508 cv
460.88 358.791 460.938 360.092 461.012 361.358 cv
461.05 361.994 461.124 362.635 461.175 363.275 cv
461.268 363.906 461.318 364.549 461.437 365.172 cv
461.591 366.271 461.842 367.335 462.107 368.393 cv
465.938 363.297 469.199 358.058 472.084 352.377 cv
469.34 358.156 466.206 363.502 462.496 368.72 cv
463.543 368.743 464.609 368.698 465.691 368.534 cv
466.937 368.345 468.199 368.067 469.454 367.669 cv
470.707 367.271 471.973 366.786 473.218 366.203 cv
474.464 365.619 475.703 364.948 476.912 364.162 cv
475.718 364.994 474.487 365.715 473.245 366.35 cv
472.002 366.983 470.735 367.52 469.474 367.969 cv
468.21 368.419 466.933 368.749 465.665 368.987 cv
464.453 369.216 463.25 369.299 462.063 369.299 cv
460.016 371.908 457.939 374.365 455.708 376.818 cv
456.574 377.299 457.517 377.694 458.508 377.943 cv
459.656 378.231 460.896 378.392 462.149 378.42 cv
463.405 378.449 464.708 378.361 466.018 378.167 cv
467.328 377.973 468.66 377.683 469.994 377.252 cv
468.661 377.733 467.322 378.077 465.999 378.322 cv
464.676 378.568 463.355 378.707 462.073 378.726 cv
460.793 378.745 459.517 378.632 458.323 378.38 cv
457.256 378.155 456.227 377.768 455.275 377.273 cv
452.396 380.276 449.304 383.076 446.031 385.644 cv
446.821 386.118 447.646 386.556 448.516 386.923 cv
449.606 387.382 450.744 387.785 451.925 388.096 cv
453.104 388.405 454.328 388.658 455.582 388.827 cv
456.835 388.995 458.122 389.097 459.443 389.095 cv
458.107 389.147 456.799 389.098 455.521 388.977 cv
454.245 388.855 452.993 388.648 451.782 388.382 cv
450.57 388.114 449.396 387.75 448.267 387.325 cv
447.31 386.966 446.403 386.522 445.528 386.035 cv
441.655 388.999 437.559 391.713 433.244 393.996 cv
432.963 393.44 432.823 393.163 432.542 392.608 cv
436.851 390.474 440.956 387.908 444.849 385.091 cv
444.68 384.209 444.549 383.315 444.484 382.415 cv
444.406 381.33 444.366 380.235 444.378 379.146 cv
444.39 378.059 444.424 376.968 444.487 375.888 cv
444.551 374.807 444.633 373.729 444.755 372.663 cv
444.678 373.73 444.642 374.805 444.625 375.879 cv
444.607 376.953 444.622 378.034 444.658 379.107 cv
cp
level3{
gsave
clp
[-38.2805 -6.64363 -6.64363 38.2805 474.682 377.008 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-38.2805 -6.64363 -6.64363 38.2805 474.682 377.008 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
303.725 343.224 mo
303.445 342.416 303.216 341.584 303.051 340.725 cv
302.856 339.698 302.766 338.615 302.948 337.597 cv
305.969 336.142 308.903 334.53 311.736 332.774 cv
311.769 332.774 311.801 332.774 311.835 332.774 cv
318.27 332.774 322.548 336.883 325.233 342.906 cv
323.721 342.39 322.16 341.983 320.558 341.694 cv
318.687 341.362 316.814 341.2 314.954 341.2 cv
311.09 341.2 307.288 341.9 303.725 343.224 cv
level3{
gsave
clp
[2.42522e-15 39.6068 -39.6068 2.42522e-15 315.959 332.774 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.42522e-15 39.6068 -39.6068 2.42522e-15 315.959 332.774 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
323.862 372.381 mo
323.374 372.381 li
323.332 369.793 323.06 367.205 322.642 364.655 cv
322.136 361.569 321.375 358.534 320.38 355.579 cv
318.398 349.667 315.367 344.115 311.396 339.266 cv
311.07 338.852 311.358 338.631 311.701 338.998 cv
316.045 343.593 319.36 349.212 321.367 355.248 cv
322.374 358.267 323.093 361.382 323.495 364.534 cv
323.825 367.139 323.979 369.764 323.862 372.381 cv
cp
.766384 .709743 0 0 cmyk
f
349.128 372.381 mo
360.748 372.381 li
360.748 357.484 377.6 342.855 364.894 341.274 cv
360.374 340.709 357.148 343.026 354.849 346.627 cv
349.128 355.561 349.128 372.381 349.128 372.381 cv
cp
level3{
gsave
clp
[-1.9099e-15 31.191 31.191 1.9099e-15 359.382 341.19 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.9099e-15 31.191 31.191 1.9099e-15 359.382 341.19 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
346.195 365.923 mo
345.763 364.125 345.182 362.387 344.467 360.723 cv
344.216 355.461 343.69 350.199 342.766 344.995 cv
342.277 342.17 341.643 339.363 340.887 336.595 cv
340.144 333.82 339.224 331.09 338.138 328.423 cv
337.617 327.083 336.995 325.781 336.379 324.479 cv
335.706 323.203 335.058 321.921 334.284 320.708 cv
333.405 319.277 332.459 317.88 331.42 316.561 cv
332.205 315.714 332.98 314.847 333.735 313.972 cv
335.777 312.212 337.743 310.368 339.628 308.443 cv
349.905 319.718 351.914 343.599 351.424 360.887 cv
349.386 362.14 347.588 363.842 346.195 365.923 cv
342.794 357.382 mo
339.636 351.893 334.924 347.439 329.272 344.6 cv
326.386 338.168 323.071 332.179 320.228 326.848 cv
324.02 323.883 327.581 320.635 330.88 317.138 cv
331.803 318.447 332.641 319.817 333.42 321.216 cv
334.791 323.674 335.947 326.258 336.918 328.905 cv
337.903 331.547 338.747 334.245 339.439 336.988 cv
340.138 339.726 340.734 342.487 341.211 345.281 cv
341.918 349.283 342.425 353.324 342.794 357.382 cv
level3{
gsave
clp
[-4.30599e-15 70.3221 70.3221 4.30599e-15 332.492 302.059 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.30599e-15 70.3221 70.3221 4.30599e-15 332.492 302.059 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
328.613 314.27 mo
330.493 316.378 332.048 318.753 333.42 321.216 cv
334.791 323.674 335.947 326.258 336.918 328.905 cv
337.903 331.547 338.747 334.245 339.439 336.988 cv
340.138 339.726 340.734 342.487 341.211 345.281 cv
342.195 350.85 342.792 356.494 343.166 362.151 cv
343.382 365.562 343.522 368.971 343.554 372.381 cv
344.525 372.381 li
344.652 368.952 344.646 365.517 344.525 362.082 cv
344.303 356.367 343.77 350.646 342.766 344.995 cv
342.277 342.17 341.643 339.363 340.887 336.595 cv
340.144 333.82 339.224 331.09 338.138 328.423 cv
337.617 327.083 336.995 325.781 336.379 324.479 cv
335.706 323.203 335.058 321.921 334.284 320.708 cv
332.779 318.257 331.077 315.908 329.045 313.87 cv
328.436 313.222 328.036 313.584 328.613 314.27 cv
.766384 .709743 0 0 cmyk
f
325.203 372.381 mo
337.04 372.381 li
337.04 372.381 340.16 347.438 326.763 347.454 cv
314.569 347.462 322.712 362.876 325.203 372.381 cv
cp
level3{
gsave
clp
[-1.52634e-15 24.927 24.927 1.52634e-15 328.792 347.454 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.52634e-15 24.927 24.927 1.52634e-15 328.792 347.454 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
328.73 353.613 mo
330.49 359.224 331.237 365.101 331.652 370.953 cv
331.677 371.426 331.702 371.907 331.727 372.381 cv
332.756 372.381 li
332.74 371.874 332.715 371.376 332.682 370.878 cv
332.25 364.96 331.262 359.024 329.087 353.472 cv
328.905 353.04 328.581 353.173 328.73 353.613 cv
cp
.766384 .709743 0 0 cmyk
f
353.573 372.381 mo
354.316 372.381 li
354.589 370.12 354.932 367.86 355.357 365.625 cv
356.005 362.501 356.805 359.415 357.865 356.411 cv
358.145 355.662 358.462 354.933 358.754 354.195 cv
358.907 353.827 359.04 353.453 359.211 353.091 cv
359.745 352.024 li
360.271 350.951 li
360.45 350.596 360.621 350.233 360.843 349.903 cv
362.094 347.865 li
362.354 347.446 362.145 347.274 361.853 347.7 cv
360.494 349.693 li
360.253 350.024 360.068 350.38 359.878 350.735 cv
359.294 351.796 li
358.716 352.862 li
358.532 353.218 358.386 353.593 358.214 353.961 cv
357.897 354.703 357.554 355.434 357.256 356.183 cv
356.1 359.199 355.237 362.316 354.583 365.479 cv
354.145 367.765 353.808 370.069 353.573 372.381 cv
cp
f
63.9053 408.944 mo
20.7549 408.944 li
21.5257 404.789 23.3476 401.031 25.9035 397.983 cv
29.1557 394.104 33.5964 391.376 38.5727 390.443 cv
39.8813 390.194 41.1491 390.083 42.3695 390.083 cv
48.3153 390.083 53.1362 392.721 56.0791 394.864 cv
57.9165 396.202 59.0217 397.347 59.2114 397.536 cv
59.4568 396.676 60.7525 392.431 63.8493 387.6 cv
63.8682 387.57 63.8862 387.542 63.9053 387.512 cv
63.9053 408.944 li
level3{
gsave
clp
[4.3919e-15 -71.7252 71.7252 4.3919e-15 165.794 408.945 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~"98H&"T\W("T\W("p"`)#6=i*#QXr+#QXr+#lt&,$3:/-$3:/-$NU8.$ipA/%06J0%KQS1%fl\2&-2e3
&HMn4&ci"5'*/+6'*/+6'ES:8'`nC9('4L:(BOU;(]j^<)?Ks?)Zg'@*!66B*!66B*<Q?C*WlHD*s2QE
+9MZF+ThcG+p.oI,6J#J,Qe,K,m+5L-3OAM-NjJN-j0SO.0K\P.KfeQ.KfeQ.g,nR/-H"S/Hc+T/d)4U
0*MCW0*MFX0EhOY0a.XZ1'Ia[1Bdj\1^*s]1^*s]2?a0_2?a0_2['9`3!BBa3<]Kb3X#Tc3s>]d49Yfe
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.3919e-15 -71.7252 71.7252 4.3919e-15 165.794 408.945 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~!sA`0"9\i1"9er4"U5/8"pYA<#6tJ=#7(S@#RLeD#mgnE#mq"H$4@4L$OdFP$k3XT%1WjX%M''\%hK9`
&.fEc&J5Wg&eYfi&eYik',)&o'GM8s'bqK"()@]&(Ddo*)&X>2)B'P6)]K_8)]Kb:*#ot>*??1B*ZcCF
+!2RI+<VdM+X&!Q+sJ3U,9nEY,U=W],paia-71&e-RU8i-n$Jm.4H\p.4H\q.Olnu.k<,$/1`>(/M/P,
/hSb//hSb/0/"t30JG170ekC;1,:U?1G^gC1G^gC1c.'I2)R6K2E!HO2`EZS3&ilW3B9)[3]];_4$,Mc
~>
<~zzzzzzzzzzzzzzzzzzz!!!$#!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiE)!
WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE*!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W."9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"
9\i1~>
<~zzzzzzzzzzzzzzzzzzzzzzzz!!!$#!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3&!WiE)!
WiE)!WiE)!WiE)!WiE(!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!WiE)!WiE)!
WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
474.005 412.925 mo
458.137 412.925 442.268 412.925 426.399 412.925 cv
406.617 412.925 li
224.291 412.925 li
224.291 406.765 li
230.748 406.765 li
230.748 390.009 li
271.355 390.009 li
271.355 360.241 li
272.411 359.146 273.608 358.219 274.902 357.474 cv
277.382 356.047 280.221 355.287 283.121 355.287 cv
284.688 355.287 286.272 355.509 287.827 355.967 cv
291.691 349.996 297.325 345.603 303.725 343.224 cv
307.288 341.9 311.09 341.2 314.954 341.2 cv
316.814 341.2 318.687 341.362 320.558 341.694 cv
322.16 341.983 323.721 342.39 325.233 342.906 cv
326.623 343.38 327.973 343.948 329.272 344.6 cv
334.924 347.439 339.636 351.893 342.794 357.382 cv
343.413 358.458 343.972 359.572 344.467 360.723 cv
345.182 362.387 345.763 364.125 346.195 365.923 cv
347.588 363.842 349.386 362.14 351.424 360.887 cv
354.007 359.297 356.974 358.43 359.983 358.43 cv
361.084 358.43 362.191 358.547 363.288 358.786 cv
369.056 360.026 373.671 364.427 375.422 370.195 cv
381.14 364.229 389.006 360.974 397.029 360.974 cv
400.038 360.974 403.068 361.432 406.017 362.376 cv
415.647 365.404 423.003 373.169 425.71 382.802 cv
431.148 378.506 437.908 376.089 444.807 376.089 cv
447.726 376.089 450.669 376.521 453.549 377.428 cv
462.845 380.354 469.934 387.734 472.986 396.758 cv
474.691 401.798 475.136 407.349 474.005 412.925 cv
level3{
gsave
clp
[4.39189e-15 -71.7251 71.7251 4.39189e-15 329.589 412.925 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.39189e-15 -71.7251 71.7251 4.39189e-15 329.589 412.925 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
224.291 413.221 mo
63.9053 413.221 li
63.9053 408.944 li
185.648 408.944 li
185.174 410.22 184.805 411.551 184.55 412.925 cv
224.291 412.925 li
224.291 413.221 li
.104707 .0691234 .0661631 0 cmyk
f
63.9053 265.911 mo
63.9053 223.783 li
70.3613 223.783 li
70.3613 246.378 li
70.3613 264.342 li
68.1463 264.695 65.9895 265.223 63.9053 265.911 cv
.237369 .0791638 .0603952 0 cmyk
f
67.9624 318.882 mo
68.4698 316.912 69.4071 313.825 70.3613 310.304 cv
70.3613 314.232 li
69.3464 315.758 68.5235 317.372 67.9624 318.882 cv
63.9053 287.08 mo
63.9053 265.911 li
65.9895 265.223 68.1463 264.695 70.3613 264.342 cv
70.3613 285.721 li
70.2955 285.69 70.2279 285.66 70.1597 285.633 cv
69.4583 285.35 68.7762 285.219 68.1173 285.219 cv
66.5797 285.219 65.1646 285.931 63.9053 287.08 cv
level3{
gsave
clp
[7.2709e-15 118.743 -118.743 7.2709e-15 246.696 292.087 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~+?[mK+$IjK+$IgJ+$e!L+%"$K+%+*L*_"*L*_+-L*(n3N*)"9O*)4BP*)4BP*)=EP*)XWS*)a]T*)scT
)ca`T)d'lU)d9uV)I0rU)I0rU)I9rT).:#U).L,V(h:&U(M1#T(MC/V(M^>X(M^;W(Mg>W(2^;V(2pGX
(3-PY(3?\['m-PX'm?\Z'mQbZ'R?_Z'RQk\'n*%]'S!(^'S3.^'837`'8E7^'8N:^'8W:]'8W:]'8rF^
'9/O_'98R_'9J[`&sJaa&XA[_&XJ^_&X\a^&X\a^&"A[]&"Sg_&"\g^&"em_&#"p^&#5!^&#G$]%]>'^
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~%]>'^&uL6\'W?E[(o_`[*3+,]+KTM^,->V\-*Cq_.Bd7_/$NC^0<e^_1U1$_2RHB`3j_W_4gdi^6+95_
7(>J_8@L\^9Xm%_::i:^;S4U^=1p'a>JDKc?,7W`@_s&aB#5;`BYtA]Cr?b_E5`+`El\=_G/sX`HcZ6f
IEVZkJ]n)oL!0MsMp;;&ONdb*Pg'1.R*>U2S^.99T[*T<Us8r?W6PACWm1SEY0I"IZHiLN[*J^P[a+pR
]$13T]ZgEV^<HWX_9Dr[_p&/]`Q\A_`m"J`aNOVab09ndbfg%ec--.fd*)Iid)uChd`VUjeB7gle]Rpm
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.37076 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.2709e-15 118.743 -118.743 7.2709e-15 246.696 292.087 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~+!2OF*Zc@D*Zc=B*#fh9)]K_8)]K_8)]BV5)AsD1)&X8.(`*r'()@Z$()@W"'bqGu'GM5q',)&o'GD,n
&eYfi&eYfi&eYfi&eP]e&.fBa%h9'Z%LrsY%LrsY%hTEf',;<#)B0\<+<_mP,UFcc.4Qi!/h\q71c70N
3BB8c5<qM%6q'U:8k_oQ:/Fed<EE=,>?kH@@:Nh[AnPdlCi+*0EH-&BG'J=[I!pHoJqJc4MN!RWOcu#q
Q^O>6StD^NUnsufWN*#$Y->4;Za@-J\%'#]]=bhk^VI\&_o'F3`Q#p<aN;QHbKS2Sc-O_^cd:(fdaQ^q
~>
<~4$5Vf5!VD#6UX@58P2WL9MJ5W;,L7k<*!+(>?b<:?!h#L@Us%^BPD0qCM[m,E,p#@F`qtRH$XgcIXcp$
KSG5:LPL_EN/`jYOcu#pQC!r*R[]k=StD[LUSO``VP^5gVl6PnWMunuXK8M*Xfeh0YHP.5YHY78ZEpmD
Za@*I[^NZS\$riU\%&u[]=Y\f]Y2%n^VI\%_83t)_SX4.`5KU5`lH-?aN2HEbKJ)PbKJ,Rc-=MWbfn;T
bg"GYcHa_\c-=MXc-=MXcHa_\cHa_\cHXSWbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfe2QbKJ)PbK@uMb0%lL
~>
<~bfn;TbK@oHa2c3=`Pog8`5KU3_o'@-_8*h#]tD"i]"5G^\@/fQ[C!<IZE^X<Yck74XK8J&WiE(tW2QSj
V4s]XT:_aHSXc1=R[KM.Q'7AoOcYZcNfK'VM2-h?KS"`(I=$6`G'.kGDf'9)BkV*h@pr_N?!CK7<`Dsn
:/"8N7RTR/5<_1k3B&fO1,(=3.Oc_l,U"6M)]9G,'+bZa$k!@H"Tnc*zzzzzzzzzzzzzzzzzzzz!!!!!
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
65.2842 385.508 mo
65.1858 383.761 65.059 382.014 64.9005 380.269 cv
66.4385 380.499 67.9911 380.62 69.5434 380.635 cv
67.8958 382.212 66.4854 383.87 65.2842 385.508 cv
level3{
gsave
clp
[-4.79008e-15 78.2279 78.2279 4.79008e-15 52.0383 321.686 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~c*RHNc*RHNc*RHNcF!WPcF!WPcF!WPcF*]QcF3cRcF3cRcF<iScFEoTcFEoTcaj)Vcaj)Vcaj)Vcas/W
cas/Wcas/Wd(B>Yd(KDZd(KDZd(KDZd(TJ[d(TJ[d(TJ[dD#Y]dD#Y]dD#Y]dD,_^dD,_^dD,_^dD5e_
dD5e_d_Ytad_Ytad_Ytad_Ytad_c%bd_c%bd_c%bd_l+cd_l+cd_u1dd_u1dd_u1de&D@fe&D@fe&D@f
eAhOheAhOheAhOheAhOheAhOheAhOheAqUieAqUieAqUieB%[jeB%[jeB%[jeB.ake]Ijle]Ijle]Rpm
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~e]Rpme]\!ne]\!nf$+0pe]e'of$=<rf$FBsf$OHtf$OHtf$XNuf@'^"f@9j$f[Ts%f[g*'f[g*'g"??*
g"HE+g=cN,g=uZ.g>)`/g>;l1gY`&3gu/55gu8;6h;\J8gu\S:h<+b<hWOq>hs(1Ahs17Bhs:=ChsLIE
hsUOFi:-dIiU[$Liq*3NiqEEQiqEEQj8/fVj8K#Zj8T)[jSo2\jSo2]jSo2]jSo2^jSo5_j8T5bj8T5b
jSoDfjSoJijSoMkjSoPljSoSnj8TSrir9T!ir9Z$ir9`'j8Tl*j8To+j8Tu/iVsi1iVso5iVsu8i;Xr<
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.326986 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.79008e-15 78.2279 78.2279 4.79008e-15 52.0383 321.686 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~bfn;Uc-=MXc-=MXc-=MYcHa_\cHa_]cd0q`cd0q`d*U.dd*U.dd*U.edF$@hdF$@hdF$@hdF$@idaHRm
e'ldpe'ldpe'ldpe'ldpeC<!teC<!teC<%!e^`4#e^`4#e^`4#e^`4#e^i=&f%/I)f@SX+f@S[-f\"j/
g"G'3g"G'3g"G'4g=k<9gY:K<gt^]?gt^]@h;-rEhVR,GhVR,GhVR,Ghr!AMi8NYRiSibSiSrkVio8tW
io9"Yj5]1[j5]1[j5]1[j5].YioB(Zj5]1[j5]1[j5]1[j5T(XiSibSiSrkVio8tWio8tVi8EPOi8EPO
~>
<~Za7!F['[3J[^NWR\@B&Z\[f8^]"5Jb]Y(ni]tM+m^:q=q^V@Ou^qdb%_83t(_SX1,_o'C1`5KU5`Pog9
`l?$<`l?$=a2c6AaN2HEaiVZIbKJ)PbKJ,Rbfn;Uc-FY]cd:%cd*U1fdF-Ike'umseCE.$f%/I)f\+s2
g"G'4gYCT>h;-rFhr!AMiSibTio9"ZjlY^gkND'nl0@R!lg*p(mI'E1n*ol;o(2JEo_%qOp@n@Yqu$El
rr2rts8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!"!WrN,!sAc3"pYD>#RLeD$47.
L%1Wm[&J>]i'GV>t()@Z%(`4,/)]Kb;*ZcCG~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E6'!WiE*!s8W-!sA`1"U,)7"
pP89#6tM?#mq"I$k*OR%1WjX%LrsZ&.fEd',)&p'bqK#~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
63.9053 387.512 mo
63.9053 380.105 li
64.2363 380.165 64.5681 380.22 64.9005 380.269 cv
65.059 382.014 65.1858 383.761 65.2842 385.508 cv
64.7901 386.181 64.3304 386.853 63.9053 387.512 cv
.790158 .745357 0 0 cmyk
f
69.5434 380.635 mo
67.9911 380.62 66.4385 380.499 64.9005 380.269 cv
64.5681 380.22 64.2363 380.165 63.9053 380.105 cv
63.9053 368.516 li
64.6484 368.583 65.3886 368.637 66.1251 368.68 cv
67.1239 368.737 68.1195 368.764 69.1099 368.764 cv
69.528 368.764 69.9451 368.76 70.3613 368.75 cv
70.3613 379.876 li
70.0821 380.127 69.8101 380.379 69.5434 380.635 cv
66.8872 368.002 mo
66.59 368.002 66.2927 368 65.9946 367.994 cv
65.302 367.981 64.6053 367.958 63.9053 367.925 cv
63.9053 343.559 li
64.3991 343.484 64.8894 343.395 65.3755 343.295 cv
66.9602 346.271 68.6229 349.205 70.3613 352.094 cv
70.3613 367.885 li
69.2127 367.961 68.0536 368.002 66.8872 368.002 cv
70.3613 348.257 mo
69.1582 346.302 67.9903 344.326 66.8584 342.329 cv
68.0897 340.572 69.2842 338.763 70.3613 336.909 cv
70.3613 348.257 li
63.9053 342.266 mo
63.9053 340.406 li
64.1798 340.964 64.4566 341.523 64.7358 342.083 cv
64.4608 342.148 64.184 342.209 63.9053 342.266 cv
66.1685 341.102 mo
65.3983 339.738 64.6432 338.356 63.9053 336.961 cv
63.9053 304.767 li
64.5118 302.725 65.0895 300.653 65.5844 298.586 cv
66.2402 295.845 66.8266 293.09 67.2343 290.311 cv
66.7334 293.067 66.0561 295.786 65.3101 298.484 cv
64.8816 300.034 64.4051 301.582 63.9053 303.115 cv
63.9053 287.08 li
65.1646 285.931 66.5797 285.219 68.1173 285.219 cv
68.7762 285.219 69.4583 285.35 70.1597 285.633 cv
70.2279 285.66 70.2955 285.69 70.3613 285.721 cv
70.3613 310.304 li
69.4071 313.825 68.4698 316.912 67.9624 318.882 cv
68.5235 317.372 69.3464 315.758 70.3613 314.232 cv
70.3613 335.028 li
70.2593 335.197 70.1569 335.364 70.0541 335.531 cv
68.871 337.454 67.541 339.316 66.1685 341.102 cv
level3{
gsave
clp
[-10.7035 103.166 -103.166 -10.7035 65.6703 276.106 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~aMn2[aMe,ZaM\&YaM\&YaMRuXahe#XaM@iVaM7cUaM.]TaM%WSaLhKQa1D<OaLV?OaLD3MaL2'Ka0bmI
a0YgH`j#LDa05OD`iT4@`N0%>`Mih;`MW\9`2!A5`1d53`1?r/_jg],_jCE(_j(3%_N=fu_2\Kq^P`'l
^4lUf]n$.`\pFDW\p48U\T7`N\S_BI[V5^A[:K=<ZsNe5ZWI2-ZW-u*Ytk?"Yt4oqYX/<iYW`$eY;lR_
Xtp%XXtKbTXXF/LXW[ZEX;h3?X;Cp;Wt>F6WXK(3WX/q2W<<P.VuR5+V>q2.U];&.U&Yu0TE#o2T)]l3
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-10.7035 103.166 -103.166 -10.7035 65.6703 276.106 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~StDXIT:hjNTq\9VUSO]^V5C,fVl6PmW2ZbqWMukrWN)tuWiN2$X/i;%X/rD(XK8M)XKAV,Xf\_-Xfeh0
Y-+t3YHP.5YHP17Yct@9YctC;ZEgdAZEggCZa7$G['[6K[C*HP\%&rX\@B)[\[f8]\[f;_]=bhj]tM.o
^:q=r^VIY$_83t)_SX1,_SX1,_SX1-_o'C0_o'C0_o'C1`5KU4`5KU4`5KU5`Pog9`l?$<`l?$<`l?$<
`l?$<a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@a2c6@aN2HDaN2HDa2c6@a2c6@a2c6@a2c6@
~>
<~zzzzz!!!$$!sAc4#RLhF$OdIT&.oQj()Ro-)]Tk>+<_sT-7C>o/MAe41,CaF2`Ni[4?Ykm5X@b+7S$-E
9hnM^;cHat<``F->[CcG@Us%^B4u!oCMds-E,p#AG'A4WH?spcIXcp#K7nu7Ll%"IN/`gWO-#HcP*;,q
QC!r*R@9V8S=Q4BT:hmPU8+KZV5:&eVl6PnWN*##XK8M*Xfek3Yct@:Z*L^C['[3I[C*EM[^NZS\@B)[
]"5Ja]=Y\e]Y(qk^:q=q^V@Ou^qdb$_83t(_SX1,_o'C0_o'C0`5KU4`Pog8~>
<~*#oq;)]BS2(D[`"'+toi&J,E]$k!FM$4."E#R:S="pG,4!s/K(zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
69.1099 368.764 mo
68.1195 368.764 67.1239 368.737 66.1251 368.68 cv
65.3886 368.637 64.6484 368.583 63.9053 368.516 cv
63.9053 367.925 li
64.6053 367.958 65.302 367.981 65.9946 367.994 cv
66.2927 368 66.59 368.002 66.8872 368.002 cv
68.0536 368.002 69.2127 367.961 70.3613 367.885 cv
70.3613 368.75 li
69.9451 368.76 69.528 368.764 69.1099 368.764 cv
70.3613 352.094 mo
68.6229 349.205 66.9602 346.271 65.3755 343.295 cv
64.8894 343.395 64.3991 343.484 63.9053 343.559 cv
63.9053 342.266 li
64.184 342.209 64.4608 342.148 64.7358 342.083 cv
64.4566 341.523 64.1798 340.964 63.9053 340.406 cv
63.9053 336.961 li
64.6432 338.356 65.3983 339.738 66.1685 341.102 cv
67.541 339.316 68.871 337.454 70.0541 335.531 cv
70.1569 335.364 70.2593 335.197 70.3613 335.028 cv
70.3613 336.909 li
69.2842 338.763 68.0897 340.572 66.8584 342.329 cv
67.9903 344.326 69.1582 346.302 70.3613 348.257 cv
70.3613 352.094 li
63.9053 304.767 mo
63.9053 303.115 li
64.4051 301.582 64.8816 300.034 65.3101 298.484 cv
66.0561 295.786 66.7334 293.067 67.2343 290.311 cv
66.8266 293.09 66.2402 295.845 65.5844 298.586 cv
65.0895 300.653 64.5118 302.725 63.9053 304.767 cv
level3{
gsave
clp
[84.2862 8.74468 -8.74468 84.2862 24.799 331.235 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~^RP9(^n(N+_4Uc._P.#1_P7)2_k[84_l!J7`Mih;`iB(>a/o=Aa0#CBaKPXEaKbdGb-V-KbI%<MbI@NP
bdd]Rc+<rUcb0;YcbBG[d(o\^dD>k`d_l+ce&;:eeAhOhe]@dkf#n$nf?=3pf?XEsf[0[!g!]p$gXQ9(
gXZ?)h:DW,hV%r0hqJ,2i8+G6iSOV8j5Bt<jPp4?jlHIBk2u^Ekii'Il0JBMlKnQOlgOlSm-t&UmI^GZ
mI^GZmJ-_^n+m"bnbrLhnc&RioD\dloD\dlp&>!op&>$pp\t<up\t@!q>UX'q#:U*q>Ud/q#:^1q>Um5
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[84.2862 8.74468 -8.74468 84.2862 24.799 331.235 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~^;%Ft^VIY#^qmk'_83t(_8=(+_SX1,_Sa:0`5T^7`Q#p;`l?$<`lH-?a2c6@a2l?Dai_cKb0%lLb0.uO
bKJ,Rbfn>VcHa_\cHab^cd0tbd*U1fdF$CjdaHUne'lgreC<%!e^`7%f%/F'f%/I)f@S[-f\"m1g=k97
g=k98gYCT?h;-oDhVR,Hhr!>Li8EPPiSrkWj5]1\jQ,C`jlPUdk3(pkkih6pl07HtlK[[#lg*m'm-O**
m-O**m-O**mHs?0n*fc8nF5r:naZ2@o()ABoCMVHo^qeJp%A%Pp@e4Rp\4IXq"XXZq"XXZq"XXZq"XXZ
~>
<~S"-">SXuFFT:hjNTq\9UU8+KYUSO`_VPg>jW2ZbrWiN2%XKAV,Xfeh1YHY79Z*L[AZa@*H['d<M\%&rX
\@B)[]"5Mc]Y(qk^:q@s^qde&_84"*_o'F2`5KX6`l?'>aN2KFb0%oNbKJ,Rc-FY]d*U1fdaHUneC<%!
e^`4$f%/F(f\+s3g=k98gtgfChVR,Hhr*GOiSrkWj5f:_jlY^gkNM-ol0@U$m-O*+mI'H4nF5r;o(2MG
o^qeJp%J.Tq>'j^qYU3hrr2ors8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E6'!s8W-"9\l3"pP;;#RC
_C$47+I$O[@O~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E3%!WiE)!WiE)!s8W-!s
8W-"9\l3"pP;;#RC_C$47.K$k*OQ~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
185.648 408.944 mo
63.9053 408.944 li
63.9053 387.512 li
64.3304 386.853 64.7901 386.181 65.2842 385.508 cv
66.4854 383.87 67.8958 382.212 69.5434 380.635 cv
69.8101 380.379 70.0821 380.127 70.3613 379.876 cv
70.3613 406.765 li
186.582 406.765 li
186.236 407.471 185.924 408.198 185.648 408.944 cv
level3{
gsave
clp
[4.3919e-15 -71.7252 71.7252 4.3919e-15 165.794 408.945 ]ct
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~)\N__*"`b_*"ie_*>/qa*t]+c+;#4d+V5:e+V>=e+V>=e+qbIf,SC[h,SL^h,n^gj-5$pk-PI*m-k[-m
.2*9n.MEEp.M<?o.h`Kp/J8Wq///Wq/e\fs0,"ot/eeis0,"ls0GG#t1)(9"1D:B$1_UK%2%gN%2A6]'
2A6]'2\Zi(3"ll(3>2u)3YW2,3ti5,4;8A-4VSJ.4VeS/4V\M.4r"Y04r+\05Sat45o1+565L466P^:7
72HR:7Mc[;7Ml^;7i2j=8J`$?8f/0@8f/0@8f/3A8f/3A9,S?B9GeBB9c+KC:)O]F:Da`F:`9uI;&L#I
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.3919e-15 -71.7252 71.7252 4.3919e-15 165.794 408.945 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~)B0V7)]K_8)]Th;*$$%@*ZlIG+!;[K+<VdL+<VdL+<_mO+X/*T,9nEX,:"N[,UF`_,pjrc-7:/g-R^Ak
-n$Mn.4H\p.4H_r.Olr!/1`>'/1`>'/M/S-/hSb//hSb//hSe10/#"50ekF=1,:XA1G^jE1c.'I2)R6K
2)R6L2E!HP2`EZT3&ilX3B9)\3]];`4$,Md4?P_g4?P_g4?P_h4Ztqk4Ztql5!M7s5X7S#5s[e'6:+"+
6UO7077BX677BX67Rfj:7n6*@8P)KF8P)KF8P)KF8P)KF8kM]J91qoN9MA,R9he>V:/4PZ:JXb^:f'tb
~>
<~&J5Te&J5Te&J5Te&J5Te&J,Kb&.fBa&.fBa&.fBa&.oKd&J5Te&J>]h&eYfi&eP]f&J>]h&eYfi&eYfi
&eYfi&eYfi&eYfi&eYfi&eYfi',)#m',(uk&eYik',)#m',)#m',)#m',)#m',(uk&eYfi&eYfi&eYfi
&eYfj',)#m',)#l&eYfj',)#m',)#m',)#m',)#n'GV>t'bqGt'GM5r'bqGu'bqH!()@Z$()@Z$()@Z$
()@Z$()@Z$(Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((`4),(`4),(Ddl((`4),(`4),(`4,.)&X;0
~>
<~&.fBa&.fBa&.fBa&.oKd&J5Te&J>]h&eYfi&eP]f&J5Te&J,Kb&.fBa&.fBb&J5Te&J5Te&J5Te&J5Te
&J5Te&J5Te&J5Te&J5Qc&.fBa&.fBa&.fBa&.fBa&.f?_%hB0]%hB0]%hB3_&J5Te&J5Te&J5Te&J5Te
&J5Te&J5Td&.fBa&.fBb&J5Te&J5Te&J5Td&.fBa&.fB`%hB0^&.fBa&.fBa&.oKd&J5Td&.fBb&J5Te
&J5Te&J5Te&J5Te&J5Te&eYfi&eYfi&J5Te&eYfi&eYfi&eYfi&J5Te&J5Te&eYfi&eYfi&eYfi&eYfi
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
224.291 412.925 mo
184.55 412.925 li
184.805 411.551 185.174 410.22 185.648 408.944 cv
185.924 408.198 186.236 407.471 186.582 406.765 cv
224.291 406.765 li
224.291 412.925 li
level3{
gsave
clp
[4.39189e-15 -71.7251 71.7251 4.39189e-15 329.589 412.925 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.39189e-15 -71.7251 71.7251 4.39189e-15 329.589 412.925 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
230.748 406.765 mo
70.3613 406.765 li
70.3613 246.378 li
230.748 246.378 li
230.748 406.765 li
.0154421 .00189212 .00241093 0 cmyk
f
167.397 246.378 mo
70.3613 246.378 li
70.3613 223.783 li
70.3613 217.327 li
128.53 217.327 li
172.578 217.327 li
173.862 217.327 li
170.257 226.409 168.016 236.18 167.397 246.378 cv
level3{
gsave
clp
[52.6761 91.2377 -91.2377 52.6761 124.216 186.234 ]ct
/10 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~^l8<o_2eQr_N4`t_N=fu_NOs"_it-$_j(3%_j19&`0UH(`0^N)`L6c,`L?i-`gm)0`h!/1`h*52a.WJ5
a.`P6a.iV7a.r\8aJAk:aJT"<aJ](=af,7?af5=@af>CAb,bRCb,kXDb-(dFbHLsHbHV$IbHh0KbHq6L
bd@ENbdIKObdRQPc+*fSc+*fScFNuUcFa,WcFj2XcFs8YcbBG[cbTS]cb]Y^d),h`d)5nad)>tbd)H%c
d)Q+ddDu:fdE)@gdE;LidEDRjd`halda%mnda.soda8$pdaA*qdaJ0re("Eue("Eue(+L!e(=X#eCag%
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[52.6761 91.2377 -91.2377 52.6761 124.216 186.234 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~^VIY#^qmk'_83t(_83t(_8=(+_SX1,_SX1,_Sa:/_o'C0_o0L3`5KU4`5T^7`Pog8`Pog8`Q#p;`l?$<
`l?$<`l?$<`l?'>a2c6@a2c6@a2c9BaN2HDaN2HDaN2KFaiVZHaiVZHaiV]Jb0%lLb0%lLb0%lLb0%oN
bKJ)PbKJ)PbKJ)Qbfn;Tbfn;Uc-=MXc-=MXc-=MXc-=MYcHa_\cHa_\cHa_]cd0q`cd0q`cd0q`cd0q`
cd0q`d*U.dd*U.dd*U.dd*U.ddF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdaHRldaHRldaHRldaHRle'ldp
~>
<~N/`gWNfT6^O-#HbOHGZgP*;)nPE_;rPa.N!Q'R`%QC!r)Q^F/.R@9S5R[]e:S=Q4ASXuFEStDXJTV8'Q
TqS3TU8"EXUSFW\Unji`VP^8hVl-JlW2Q\pWMuntWiE,#X/i>'XK8P+Y-+t3YHP17YctC;ZEggCZa7$G
['[3J[C*EN[^NWR\%&rX\@B&Z\[f8^]">Se]Y(nj]tM+n^:q=r^VIY$_83t)_SX1-_o'C1`5KU5`Pog9
`l?$<a2c6@aN2HDaiV]JbKJ)Pbfn;Tc-=PZcd0q`d*U.ddF$@hdaHRle'lgreC<!te^`4#f%/I)f\"j/
~>
0 0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
93.29 265.506 mo
123.864 265.506 li
125.963 265.506 127.665 267.207 127.665 269.307 cv
127.665 299.881 li
127.665 301.98 125.963 303.682 123.864 303.682 cv
93.29 303.682 li
91.1904 303.682 89.4888 301.98 89.4888 299.881 cv
89.4888 269.307 li
89.4888 267.207 91.1904 265.506 93.29 265.506 cv
cp
.0968338 .0740063 0 0 cmyk
f
135.267 266.006 mo
133.447 266.006 131.966 267.486 131.966 269.307 cv
131.966 299.881 li
131.966 301.701 133.447 303.182 135.267 303.182 cv
165.841 303.182 li
167.662 303.182 169.143 301.701 169.143 299.881 cv
169.143 269.307 li
169.143 267.486 167.662 266.006 165.841 266.006 cv
135.267 266.006 li
165.841 304.182 mo
135.267 304.182 li
132.895 304.182 130.966 302.252 130.966 299.881 cv
130.966 269.307 li
130.966 266.936 132.895 265.006 135.267 265.006 cv
165.841 265.006 li
168.213 265.006 170.143 266.936 170.143 269.307 cv
170.143 299.881 li
170.143 302.252 168.213 304.182 165.841 304.182 cv
f
177.245 265.506 mo
207.819 265.506 li
209.918 265.506 211.62 267.207 211.62 269.307 cv
211.62 299.881 li
211.62 301.98 209.918 303.682 207.819 303.682 cv
177.245 303.682 li
175.146 303.682 173.443 301.98 173.443 299.881 cv
173.443 269.307 li
173.443 267.207 175.146 265.506 177.245 265.506 cv
f
93.29 307.983 mo
91.4697 307.983 89.9888 309.464 89.9888 311.284 cv
89.9888 341.858 li
89.9888 343.679 91.4697 345.159 93.29 345.159 cv
123.864 345.159 li
125.684 345.159 127.165 343.679 127.165 341.858 cv
127.165 311.284 li
127.165 309.464 125.684 307.983 123.864 307.983 cv
93.29 307.983 li
cp
123.864 346.159 mo
93.29 346.159 li
90.9185 346.159 88.9888 344.229 88.9888 341.858 cv
88.9888 311.284 li
88.9888 308.913 90.9185 306.983 93.29 306.983 cv
123.864 306.983 li
126.236 306.983 128.165 308.913 128.165 311.284 cv
128.165 341.858 li
128.165 344.229 126.236 346.159 123.864 346.159 cv
cp
f
135.267 307.483 mo
165.841 307.483 li
167.941 307.483 169.643 309.185 169.643 311.284 cv
169.643 341.858 li
169.643 343.957 167.941 345.659 165.841 345.659 cv
135.267 345.659 li
133.168 345.659 131.466 343.957 131.466 341.858 cv
131.466 311.284 li
131.466 309.185 133.168 307.483 135.267 307.483 cv
cp
f
177.245 307.983 mo
175.425 307.983 173.944 309.464 173.944 311.284 cv
173.944 341.858 li
173.944 343.679 175.425 345.159 177.245 345.159 cv
207.819 345.159 li
209.639 345.159 211.12 343.679 211.12 341.858 cv
211.12 311.284 li
211.12 309.464 209.639 307.983 207.819 307.983 cv
177.245 307.983 li
207.819 346.159 mo
177.245 346.159 li
174.873 346.159 172.944 344.229 172.944 341.858 cv
172.944 311.284 li
172.944 308.913 174.873 306.983 177.245 306.983 cv
207.819 306.983 li
210.19 306.983 212.12 308.913 212.12 311.284 cv
212.12 341.858 li
212.12 344.229 210.19 346.159 207.819 346.159 cv
f
123.864 349.46 mo
93.29 349.46 li
91.1904 349.46 89.4888 351.162 89.4888 353.262 cv
89.4888 383.836 li
89.4888 385.935 91.1904 387.637 93.29 387.637 cv
123.864 387.637 li
125.963 387.637 127.665 385.935 127.665 383.836 cv
127.665 353.262 li
127.665 351.162 125.963 349.46 123.864 349.46 cv
cp
123.864 352.46 mo
124.306 352.46 124.665 352.819 124.665 353.262 cv
124.665 383.836 li
124.665 384.277 124.306 384.637 123.864 384.637 cv
93.29 384.637 li
92.8481 384.637 92.4888 384.277 92.4888 383.836 cv
92.4888 353.262 li
92.4888 352.819 92.8481 352.46 93.29 352.46 cv
123.864 352.46 li
f
135.267 349.96 mo
133.447 349.96 131.966 351.441 131.966 353.262 cv
131.966 383.836 li
131.966 385.656 133.447 387.137 135.267 387.137 cv
165.841 387.137 li
167.662 387.137 169.143 385.656 169.143 383.836 cv
169.143 353.262 li
169.143 351.441 167.662 349.96 165.841 349.96 cv
135.267 349.96 li
cp
165.841 388.137 mo
135.267 388.137 li
132.896 388.137 130.966 386.207 130.966 383.836 cv
130.966 353.262 li
130.966 350.89 132.896 348.96 135.267 348.96 cv
165.841 348.96 li
168.213 348.96 170.143 350.89 170.143 353.262 cv
170.143 383.836 li
170.143 386.207 168.213 388.137 165.841 388.137 cv
cp
f
177.245 349.46 mo
207.819 349.46 li
209.918 349.46 211.62 351.162 211.62 353.262 cv
211.62 383.836 li
211.62 385.935 209.918 387.637 207.819 387.637 cv
177.245 387.637 li
175.146 387.637 173.443 385.935 173.443 383.836 cv
173.443 353.262 li
173.443 351.162 175.146 349.46 177.245 349.46 cv
cp
f
205.768 231.853 mo
205.768 235.512 208.735 238.479 212.395 238.479 cv
216.054 238.479 219.021 235.512 219.021 231.853 cv
219.021 228.193 216.054 225.226 212.395 225.226 cv
208.735 225.226 205.768 228.193 205.768 231.853 cv
.937713 .967346 .0686656 .00674449 cmyk
f
212.395 205.124 mo
210.513 205.124 208.988 206.648 208.988 208.53 cv
208.988 231.853 li
208.988 233.734 210.513 235.259 212.395 235.259 cv
214.276 235.259 215.801 233.734 215.801 231.853 cv
215.801 208.53 li
215.801 206.648 214.276 205.124 212.395 205.124 cv
level3{
gsave
clp
[6.8133 0 0 6.8133 208.988 220.191 ]ct
/11 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!52G6!5;M7!5DP7!5V\9!5__9!5he:!5qh:!6%n;!68"<!6A%<!6J+=!6S.=!6\4>!6e7>!6n=?!7"@?
!7+F@!74I@!7=OA!7FRA!7OXB!7aaC!7jdC!7sgC!8'mD!80sE!8:!E!8C$E!8U0G!8^3G!8^3G!8g6G
!8p<H!9$BI!9-HJ!TQTK!ol]L"6;lN"6DoN"Qi)P"Qr,P"mA8Q"mJ>R#3nJS#4"PT#OF_V#jaeV#jjkW
$1:%Y$1C(Y$Lg7[$Lg4Z$h6C\%.ZR^%Iu[_%J)^_%eMma&+r'c&G80d&b\?f&b\?f')+Nh'DOZi'DX`j
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.8133 0 0 6.8133 208.988 220.191 ]ct
clp
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!"!<E3&!WiE)!WiE*!s8W-!s8W."9\i1"9\i2"U,&5
"U,&6"pP8:#6tJ=#6tJ>#RC\A#RC\A#mgnE#mgnE$47+I$O[=M$k*OQ$k*OQ%1NaU%LrsY%hB0]&.fBa
&.fBa&J5Te&eYfi&eYfi~>
<~]Y2"l]tV4p^;%Fu^qmk'_8=(+_Sa:/_o0L3`5T^8`lH-?a2l?CaN;QGai_cKb0.uObKS2Sbg"DWc-FV[
cHab^cd0tbd*U1fdF$CjdaHUneC<%!e^`7%f%/I)f@S[-f\"m1g"G*5g=k<9gt^`Ah;-oCh;-rEhVR/I
hr!>Li8EPPiSibTio8tWio8tXj5]1\jQ,C`jlPUdk2tghkND$lkih6pl07HtlK[[#lg*m&lg*m'm-O*+
mHs<.mdBN2n*f`6n*f`6nF5r:naZ/>naZ/>o()ABoCMSFo^qeJo^qeJp%A"Np%A"Np@e4Rp\4FVq"XXZ
~>
<~<`W7%<`W7%<`N."<E3%!<E)ps<)cgr<)Z^o;c?Un;c6Lk;Gg:g;,L1f;,C(c:f'tb:esk_:JXb^:JOY[
:/4PZ:/4MX9he>V9he;T9MA,R9MA)P91qlL8kMZH8P)KF8P)KF8P)HD84Z6@7n6'>7n6$<7Rfj:7Rfg8
77BX677BX677BX677BX56psF26psF26psF16UO4.6UO4-6:+")5s[e&5s[e%5X7S"5X7S"5X7S!5<h@s
5<h@s5<h@s5!D.o5!D.o4Ztqk4Ztqk4Ztqk4Ztqk4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g4$,Mc
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /11 /Gradient get_res exec grestore
}if
np
82.0879 231.853 mo
82.0879 235.512 85.0547 238.479 88.7139 238.479 cv
92.374 238.479 95.3403 235.512 95.3403 231.853 cv
95.3403 228.193 92.374 225.226 88.7139 225.226 cv
85.0547 225.226 82.0879 228.193 82.0879 231.853 cv
cp
.937713 .967346 .0686656 .00674449 cmyk
f
88.7139 205.124 mo
86.8325 205.124 85.3076 206.648 85.3076 208.53 cv
85.3076 231.853 li
85.3076 233.734 86.8325 235.259 88.7139 235.259 cv
90.5957 235.259 92.1206 233.734 92.1206 231.853 cv
92.1206 208.53 li
92.1206 206.648 90.5957 205.124 88.7139 205.124 cv
cp
level3{
gsave
clp
[6.8134 0 0 6.8134 85.3074 220.191 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.8134 0 0 6.8134 85.3074 220.191 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
113.008 231.853 mo
113.008 235.512 115.975 238.479 119.634 238.479 cv
123.294 238.479 126.261 235.512 126.261 231.853 cv
126.261 228.193 123.294 225.226 119.634 225.226 cv
115.975 225.226 113.008 228.193 113.008 231.853 cv
cp
.937713 .967346 .0686656 .00674449 cmyk
f
119.634 205.124 mo
117.753 205.124 116.228 206.648 116.228 208.53 cv
116.228 231.853 li
116.228 233.734 117.753 235.259 119.634 235.259 cv
121.516 235.259 123.041 233.734 123.041 231.853 cv
123.041 208.53 li
123.041 206.648 121.516 205.124 119.634 205.124 cv
cp
level3{
gsave
clp
[6.8133 0 0 6.8133 116.228 220.191 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.8133 0 0 6.8133 116.228 220.191 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
143.928 231.853 mo
143.928 235.512 146.895 238.479 150.554 238.479 cv
154.214 238.479 157.181 235.512 157.181 231.853 cv
157.181 228.193 154.214 225.226 150.554 225.226 cv
146.895 225.226 143.928 228.193 143.928 231.853 cv
cp
.937713 .967346 .0686656 .00674449 cmyk
f
150.554 205.124 mo
148.673 205.124 147.147 206.648 147.147 208.53 cv
147.147 231.853 li
147.147 233.734 148.673 235.259 150.554 235.259 cv
152.436 235.259 153.961 233.734 153.961 231.853 cv
153.961 208.53 li
153.961 206.648 152.436 205.124 150.554 205.124 cv
cp
level3{
gsave
clp
[6.8133 0 0 6.8133 147.148 220.191 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.8133 0 0 6.8133 147.148 220.191 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
174.848 231.853 mo
174.848 235.512 177.815 238.479 181.475 238.479 cv
185.134 238.479 188.101 235.512 188.101 231.853 cv
188.101 228.193 185.134 225.226 181.475 225.226 cv
177.815 225.226 174.848 228.193 174.848 231.853 cv
.937713 .967346 .0686656 .00674449 cmyk
f
178.089 208.146 mo
178.191 207.241 178.647 206.444 179.315 205.895 cv
178.897 206.639 178.488 207.39 178.089 208.146 cv
level3{
gsave
clp
[6.8133 0 0 6.8133 178.068 220.191 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.8133 0 0 6.8133 178.068 220.191 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
121.277 359.748 mo
119.213 357.685 li
118.714 357.186 117.906 357.186 117.407 357.685 cv
104.162 370.929 li
99.751 366.489 li
99.5103 366.247 99.188 366.112 98.8467 366.111 cv
98.5054 366.111 98.1826 366.244 97.9414 366.485 cv
95.8774 368.549 li
95.3784 369.048 95.3774 369.854 95.875 370.354 cv
103.253 377.769 li
103.494 378.01 103.816 378.145 104.157 378.145 cv
104.499 378.146 104.821 378.012 105.062 377.771 cv
121.277 361.555 li
121.515 361.317 121.651 360.988 121.651 360.651 cv
121.651 360.315 121.515 359.986 121.277 359.748 cv
cp
level3{
gsave
clp
[26.1489 0 0 26.1489 95.5026 367.728 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[26.1489 0 0 26.1489 95.5026 367.728 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
451.289 420.187 mo
303.31 420.187 li
301.313 420.187 299.679 418.553 299.679 416.556 cv
299.679 414.559 301.313 412.925 303.31 412.925 cv
451.289 412.925 li
453.286 412.925 454.92 414.559 454.92 416.556 cv
454.92 418.553 453.286 420.187 451.289 420.187 cv
cp
.153964 .0136416 .00540169 0 cmyk
f
220.66 424.073 mo
147.828 424.073 li
145.831 424.073 144.197 422.439 144.197 420.442 cv
144.197 418.446 145.831 416.812 147.828 416.812 cv
220.66 416.812 li
222.657 416.812 224.291 418.446 224.291 420.442 cv
224.291 422.439 222.657 424.073 220.66 424.073 cv
cp
f
280.623 345.082 mo
280.632 344.888 280.637 344.693 280.64 344.497 cv
280.702 339.516 276.786 338.235 272.743 338.235 cv
270.602 338.235 268.425 338.594 266.784 338.953 cv
265.142 339.312 264.035 339.671 264.034 339.671 cv
264.034 339.671 265.641 338.612 267.98 336.847 cv
269.303 336.902 270.634 336.93 271.97 336.93 cv
289.056 336.93 305.1 332.383 318.954 324.437 cv
319.366 325.226 319.791 326.027 320.228 326.848 cv
317.511 328.972 314.678 330.951 311.736 332.774 cv
310.36 332.783 308.885 332.979 307.307 333.384 cv
305.71 333.793 304.172 334.729 303.415 336.193 cv
303.185 336.637 303.035 337.11 302.948 337.597 cv
295.938 340.974 288.455 343.511 280.623 345.082 cv
level3{
gsave
clp
[7.2709e-15 118.743 -118.743 7.2709e-15 246.696 292.087 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.2709e-15 118.743 -118.743 7.2709e-15 246.696 292.087 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
261.967 346.926 mo
257.372 346.926 252.857 346.598 248.435 345.962 cv
250.104 342.373 251.693 338.763 253.231 335.069 cv
258.028 336.035 262.954 336.638 267.98 336.847 cv
265.641 338.612 264.034 339.671 264.034 339.671 cv
264.035 339.671 265.142 339.312 266.784 338.953 cv
268.425 338.594 270.602 338.235 272.743 338.235 cv
276.786 338.235 280.702 339.516 280.64 344.497 cv
280.637 344.693 280.632 344.888 280.623 345.082 cv
278.686 345.47 276.722 345.8 274.744 346.068 cv
274.865 345.982 274.987 345.896 275.108 345.81 cv
274.975 345.898 274.842 345.986 274.708 346.073 cv
270.539 346.635 266.288 346.926 261.967 346.926 cv
246.994 345.744 mo
243.873 345.246 240.8 344.595 237.788 343.8 cv
237.052 342.475 236.346 341.121 235.683 339.762 cv
234.505 337.349 233.439 334.857 232.484 332.338 cv
231.88 330.743 231.309 329.136 230.803 327.511 cv
237.495 330.753 244.627 333.231 252.078 334.829 cv
250.52 338.503 248.815 342.161 246.994 345.744 cv
236.763 343.523 mo
234.729 342.961 232.724 342.333 230.748 341.642 cv
230.748 327.712 li
231.186 329.306 231.685 330.888 232.215 332.462 cv
233.083 335.034 234.063 337.59 235.16 340.079 cv
235.667 341.232 236.203 342.384 236.763 343.523 cv
level3{
gsave
clp
[10.7035 103.166 103.166 -10.7035 243.933 287.387 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.7035 103.166 103.166 -10.7035 243.933 287.387 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
274.708 346.073 mo
274.842 345.986 274.975 345.898 275.108 345.81 cv
274.987 345.896 274.865 345.982 274.744 346.068 cv
274.732 346.069 274.721 346.071 274.708 346.073 cv
248.435 345.962 mo
247.953 345.893 247.473 345.82 246.994 345.744 cv
248.815 342.161 250.52 338.503 252.078 334.829 cv
252.462 334.912 252.845 334.991 253.231 335.069 cv
251.693 338.763 250.104 342.373 248.435 345.962 cv
237.788 343.8 mo
237.446 343.709 237.103 343.617 236.763 343.523 cv
236.203 342.384 235.667 341.232 235.16 340.079 cv
234.063 337.59 233.083 335.034 232.215 332.462 cv
231.685 330.888 231.186 329.306 230.748 327.712 cv
230.748 327.485 li
230.766 327.494 230.784 327.502 230.803 327.511 cv
231.309 329.136 231.88 330.743 232.484 332.338 cv
233.439 334.857 234.505 337.349 235.683 339.762 cv
236.346 341.121 237.052 342.475 237.788 343.8 cv
level3{
gsave
clp
[-84.2863 8.74469 8.74469 84.2863 284.805 342.516 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-84.2863 8.74469 8.74469 84.2863 284.805 342.516 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
302.948 337.597 mo
303.035 337.11 303.185 336.637 303.415 336.193 cv
304.172 334.729 305.71 333.793 307.307 333.384 cv
308.885 332.979 310.36 332.783 311.736 332.774 cv
308.903 334.53 305.969 336.142 302.948 337.597 cv
level3{
gsave
clp
[2.42522e-15 39.6068 -39.6068 2.42522e-15 315.959 332.774 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.42522e-15 39.6068 -39.6068 2.42522e-15 315.959 332.774 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
320.228 326.848 mo
319.791 326.027 319.366 325.226 318.954 324.437 cv
323.004 322.115 326.866 319.502 330.513 316.628 cv
330.637 316.797 330.759 316.967 330.88 317.138 cv
327.581 320.635 324.02 323.883 320.228 326.848 cv
331.42 316.561 mo
331.314 316.427 331.208 316.293 331.1 316.161 cv
331.991 315.447 332.87 314.717 333.735 313.972 cv
332.98 314.847 332.205 315.714 331.42 316.561 cv
level3{
gsave
clp
[-4.30599e-15 70.3221 70.3221 4.30599e-15 332.492 302.059 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.30599e-15 70.3221 70.3221 4.30599e-15 332.492 302.059 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
330.88 317.138 mo
330.759 316.967 330.637 316.797 330.513 316.628 cv
330.711 316.472 330.904 316.318 331.1 316.161 cv
331.208 316.293 331.314 316.427 331.42 316.561 cv
331.24 316.754 331.061 316.946 330.88 317.138 cv
.790158 .745357 0 0 cmyk
f
230.748 341.642 mo
224.182 339.344 217.94 336.34 212.12 332.725 cv
212.12 315.582 li
217.818 320.238 224.063 324.241 230.748 327.485 cv
230.748 327.712 li
230.748 341.642 li
211.12 332.096 mo
201.135 325.72 192.418 317.526 185.441 307.983 cv
203.86 307.983 li
206.159 310.362 208.585 312.625 211.12 314.754 cv
211.12 332.096 li
202.907 306.983 mo
184.719 306.983 li
183.948 305.9 183.199 304.798 182.473 303.682 cv
199.948 303.682 li
200.909 304.806 201.895 305.906 202.907 306.983 cv
.104707 .0691234 .0661631 0 cmyk
f
178.068 217.327 mo
173.862 217.327 li
175.111 214.179 176.522 211.118 178.089 208.146 cv
178.075 208.272 178.068 208.4 178.068 208.53 cv
178.068 217.327 li
.237369 .0791638 .0603952 0 cmyk
f
173.443 285.96 mo
172.151 282.586 171.046 279.116 170.143 275.57 cv
170.143 269.307 li
170.143 267.798 169.362 266.469 168.183 265.701 cv
167.549 261.285 167.221 256.768 167.221 252.18 cv
167.221 250.231 167.28 248.297 167.397 246.378 cv
177.312 246.378 li
177.6 252.947 178.561 259.347 180.125 265.506 cv
177.245 265.506 li
175.146 265.506 173.443 267.207 173.443 269.307 cv
173.443 285.96 li
169.143 271.216 mo
168.874 269.904 168.631 268.576 168.418 267.245 cv
168.871 267.81 169.143 268.527 169.143 269.307 cv
169.143 271.216 li
.104707 .0691234 .0661631 0 cmyk
f
177.312 246.378 mo
167.397 246.378 li
168.016 236.18 170.257 226.409 173.862 217.327 cv
178.068 217.327 li
178.068 226.168 li
176.139 227.326 174.848 229.439 174.848 231.853 cv
174.848 233.956 175.829 235.831 177.358 237.045 cv
177.267 238.745 177.22 240.458 177.22 242.18 cv
177.22 243.586 177.251 244.987 177.312 246.378 cv
level3{
gsave
clp
[52.6761 91.2377 -91.2377 52.6761 124.216 186.234 ]ct
/12 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~aHll,ad<&.adN20b+&G3bFJV5bF\b7bFeh8bb5":bG"t:bbG.<c(tC?c)(I@c)1OAcD^dDc`-sFd&[3I
d&[3Id&d9Jd&m?Kd'!ELdBETNdB`fQdBilRd^9&Td^B,Ud^K2Ve$oAXe%#GYe%,MZe@P\\e@bh^e@kn_
e\M4cf"qCef#%Iff#%Iff#.Ogf#7Uhf#Iajf>mplf?"!mfZF0ofZX<qfZaBrg!0Qtg!B^!g<fm#g<os$
g<os$g=60'g=?6(gXcE*gXuQ,gY)W-gtVl0h;/,3h;824h;A85h;J>6h;\J8hW+Y:hW=e<hW=e<hrat>
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[52.6761 91.2377 -91.2377 52.6761 124.216 186.234 ]ct
clp
/12 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~a2l?CaN2HDaN;QGai_cKb0%lLb0%lLb0.uObKJ)PbKJ)PbKS2Sbfn;Tbfn;Tbg"DWc-FV[cHjh_cd0q`
cd0q`cd0q`cd0q`cd0tbd*U.dd*U.dd*U1fdF$@hdF$@hdF$CjdaHRldaHRldaHUne'ldpe'ldpe'lgr
eC<!ue^`4#e^`4#e^`4#e^`4#e^`4#e^`4$f%/F'f%/F(f@SX+f@SX+f@SX,f\"j/f\"j0g"G'3g"G'3
g"G'3g"G'3g"G'3g=k97g=k97g=k97gY:K;gt^]?gt^]?gt^]?gt^]?gt^]?h;-oCh;-oCh;-oChVR,G
~>
<~QC!r)Q^F/.R@9S6S"-"=S=Q4BStDXIT:hjMTV8'QTq\9UU8+KZUnsoaV5C,eVPg>jW2ZbqWN)u!X/i;%
X/i>'XK8P+Xf\b/Y-+t3YHP18ZEggCZa7$G['[6K[C*HO[^NZS\$rlW\@B)[\[f;_]"5Mc]Y(qk]tM.o
^VIY$_83t)_SX1,_SX1-_o'C1`5KU5`Q#p<a2c6AaN2HEaiVZIb0.uPbfn;Uc-=MYcHjh`d*U.edF$@h
dF$@hdaQ^qe^`4#f%/F'f@S[-g"G'3g=k<9gt^`AhVR,Ghr!>Ki8EPOiSieUj5]1[jQ,FajlPUck2tgg
~>
0 0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /12 /Gradient get_res exec grestore
}if
np
170.143 275.57 mo
169.775 274.13 169.443 272.682 169.143 271.216 cv
169.143 269.307 li
169.143 268.527 168.871 267.81 168.418 267.245 cv
168.335 266.729 168.257 266.219 168.183 265.701 cv
169.362 266.469 170.143 267.798 170.143 269.307 cv
170.143 275.57 li
.184451 .141268 .0232547 0 cmyk
f
199.948 303.682 mo
182.473 303.682 li
178.874 298.145 175.837 292.211 173.443 285.96 cv
173.443 269.307 li
173.443 267.207 175.146 265.506 177.245 265.506 cv
180.125 265.506 li
183.756 279.797 190.644 292.801 199.948 303.682 cv
f
212.12 332.725 mo
211.784 332.517 211.454 332.309 211.12 332.096 cv
211.12 314.754 li
211.451 315.033 211.785 315.309 212.12 315.582 cv
212.12 332.725 li
203.86 307.983 mo
185.441 307.983 li
185.199 307.653 184.957 307.317 184.719 306.983 cv
202.907 306.983 li
203.223 307.32 203.539 307.651 203.86 307.983 cv
f
184.2 206.485 mo
183.578 205.658 182.589 205.124 181.475 205.124 cv
180.655 205.124 179.902 205.413 179.315 205.895 cv
184.751 196.225 191.834 187.602 200.183 180.405 cv
193.535 188.12 188.106 196.914 184.2 206.485 cv
.237369 .0791638 .0603952 0 cmyk
f
177.358 237.045 mo
175.829 235.831 174.848 233.956 174.848 231.853 cv
174.848 229.439 176.139 227.326 178.068 226.168 cv
178.068 229.481 li
177.733 231.973 177.494 234.496 177.358 237.045 cv
.965179 .992065 .152132 .0435492 cmyk
f
178.068 229.481 mo
178.068 226.168 li
178.068 217.327 li
178.068 208.53 li
178.068 208.4 178.075 208.272 178.089 208.146 cv
178.488 207.39 178.897 206.639 179.315 205.895 cv
179.902 205.413 180.655 205.124 181.475 205.124 cv
182.589 205.124 183.578 205.658 184.2 206.485 cv
181.235 213.748 179.147 221.456 178.068 229.481 cv
level3{
gsave
clp
[6.8133 0 0 6.8133 178.068 220.191 ]ct
/13 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~%*!#^%EE2`%EN5`%`rAa%a&Da&'JYe&'S\e&^G"h&C4qg'$t4j&^b.i&^k1i&_(:j'%CCk'%LOn'@p[o
'@pXn("Zpq("csq(>3-s(>E6t(YiBu(u8R"(u8X$)W"m&)W+s')rP*()rY-(*91?*)rt9))s(?*)s1B*
*9LT/*9UW.*U$c/*U-i0+7!/3+7!,2+RE;4+RN>4+miG5+mrS8,48\9,k"t<,k5(>-1P.>-1Y1>-hCF@
-hCF@-hLLA-hUXD.J6gE.J?mF.eZsF.ed$G/,30H/,30H/brEJ/c&KK0)AZN0)J`O0DefO0DnlP0`>#R
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.8133 0 0 6.8133 178.068 220.191 ]ct
clp
/13 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~$OdFP$k*OQ$k3XT%1NaU%1WjX%LrsY%M'']&.fBa&.fBb&J5Te&J,Kb&.fBa&.oKd&J5Te&J>]h&eYfi
&eYik'GM5q'GM8s'bqGu'bqK"()@]&(Ddl((Ddo*)&X;0)&X>2)B'M4)B'P6)]K_8)]K\6)B'M4)B'P6
)]K_8)]K_9*#oq<*#oq=*?H7C*Zc@E+!2RH+!2RI+<VdL+<VdM+X&!Q+sS<W,9nEY,U=W\,U=W],pjrc
-71&d-71&d-71&d-RU;j-n$Jl.4H\p.4H\p.Olnt.Olnt.k</%/1`>'/M/P+/M/P+/hSb//hSb/0/"t3
~>
<~`Q#p;`lH-?a2l?CaN;QGai_cKb0.uObKS2Tc-FV[cHjh_cd:%cd*^7gdF-Ile'ldpe'umseCE+"e^`4#
e^`7%f%/I)f@S[-f\"m1g=k<9gY:N=gt^]?gt^`Ah;-rEhVR/Ihr!AMi8ESQio9"Yj5]4]jQ,FajlPUc
jlPUdk2tghkND$lkih6pl0@R!lK[[#lg*m'm-O**m-O*+mHs<.mHs</mdBN3n*oi9nF5r;naZ/?o()AB
o()ABoCMSFo^qeJo^qeJp%A"Np%A"Np@e4Rp\4FVp\4FVq"XXZq>'j^q>'j^qYL'bqYL'bqtp9fr;?Kj
~>
<~Bk_9qBk_9qBkV0nBP1sjB4kjjBP;'mBP1sjB4bafAn>ObAS#FaARo=^A7K+Z@q&nV@UinYA7T4]A7K+Z
@q/tW@U`eU@U`bS@:<SQ@:<PO?sm>K?XI2K@:<SQ@:<PO?smAM?sm>K?XI,G?=$oC?!U]?>[1N=>[1N=
?!^iD?=$rD?!U`@>[1N=>[1N<>?b<8>$>*5>$>*4=]nm2>$G38>?b<9>?b<9>?b<8>$>*4=]nm0=BJ[,
='&I)='&I)=BJ^/=]nm1=BJ[-=BJ[-='&I)='&I)<`W7%<`W7%<E3%!<`W:'='&I)='&I)<`W7%<`W7%
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /13 /Gradient get_res exec grestore
}if
np
430.286 399.264 mo
433.064 405.144 434.203 409.484 434.203 409.484 cv
434.203 409.484 409.834 415.142 407.1 412.542 cv
404.378 409.942 419.062 402.132 419.062 402.132 cv
419.062 402.132 425.466 402.243 430.286 399.264 cv
cp
.968536 .803983 .453803 .460548 cmyk
f
352.266 406.765 mo
353.897 413.656 352.852 418.015 352.852 418.015 cv
352.852 418.015 326.889 419.059 324.564 415.672 cv
322.251 412.287 339.659 407.283 339.659 407.283 cv
339.659 407.283 346.457 408.849 352.266 406.765 cv
cp
f
418.805 304.769 mo
419.72 304.612 420.635 304.445 421.561 304.256 cv
418.37 322.376 411.229 339.536 409.276 347.76 cv
406.487 359.497 414.409 375.766 422.766 386.768 cv
426.035 391.063 428.501 395.492 430.286 399.264 cv
425.466 402.243 419.062 402.132 419.062 402.132 cv
419.062 402.132 407 392.948 395.797 377.919 cv
387.797 367.196 385.912 355.313 385.465 349.802 cv
389.058 345.483 392.975 341.188 397.214 336.992 cv
411.329 323.012 416.763 311.051 418.805 304.769 cv
cp
level3{
gsave
clp
[5.06396e-15 -82.7008 82.7008 5.06396e-15 407.876 432.96 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.06396e-15 -82.7008 82.7008 5.06396e-15 407.876 432.96 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
418.805 304.769 mo
416.763 311.051 411.329 323.012 397.214 336.992 cv
392.975 341.188 389.058 345.483 385.465 349.802 cv
366.497 372.508 357.403 396.117 352.65 408.603 cv
345.297 408.446 339.16 407.241 339.16 407.241 cv
345.598 360.802 374.084 316.351 382.754 303.73 cv
389.203 305.159 403.217 307.424 418.805 304.769 cv
cp
level3{
gsave
clp
[79.6445 0 0 79.6445 339.16 356.167 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[79.6445 0 0 79.6445 339.16 356.167 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
380.667 224.31 mo
378.492 226.932 375.814 231.25 373.381 238.257 cv
372.254 241.504 371.105 244.583 369.934 247.407 cv
358.843 247.407 li
358.843 232.623 li
367.725 231.54 376.16 227.077 380.667 224.31 cv
cp
level3{
gsave
clp
[6.61662 17.3159 -17.3159 6.61662 365.13 223.754 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.61662 17.3159 -17.3159 6.61662 365.13 223.754 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
271.97 336.93 mo
270.634 336.93 269.303 336.902 267.98 336.847 cv
262.954 336.638 258.028 336.035 253.231 335.069 cv
252.845 334.991 252.462 334.912 252.078 334.829 cv
244.627 333.231 237.495 330.753 230.803 327.511 cv
230.784 327.502 230.766 327.494 230.748 327.485 cv
224.063 324.241 217.818 320.238 212.12 315.582 cv
211.785 315.309 211.451 315.033 211.12 314.754 cv
208.585 312.625 206.159 310.362 203.86 307.983 cv
203.539 307.651 203.223 307.32 202.907 306.983 cv
201.895 305.906 200.909 304.806 199.948 303.682 cv
190.644 292.801 183.756 279.797 180.125 265.506 cv
178.561 259.347 177.6 252.947 177.312 246.378 cv
177.251 244.987 177.22 243.586 177.22 242.18 cv
177.22 240.458 177.267 238.745 177.358 237.045 cv
177.494 234.496 177.733 231.973 178.068 229.481 cv
179.147 221.456 181.235 213.748 184.2 206.485 cv
188.106 196.914 193.535 188.12 200.183 180.405 cv
211.231 167.585 225.645 157.745 242.041 152.273 cv
243.028 151.943 244.022 151.63 245.024 151.332 cv
250.303 149.764 255.775 148.643 261.392 148.017 cv
264.866 147.629 268.395 147.43 271.97 147.43 cv
279.957 147.43 287.719 148.425 295.134 150.295 cv
300.595 151.672 305.863 153.523 310.903 155.805 cv
323.835 161.659 335.235 170.34 344.298 181.049 cv
355.043 193.744 362.511 209.287 365.392 226.375 cv
366.258 231.515 366.71 236.798 366.71 242.18 cv
366.71 246.997 366.348 251.731 365.652 256.356 cv
365.651 256.358 365.651 256.359 365.65 256.36 cv
362.902 261.114 360.081 264 357.21 264 cv
356.875 264 356.537 263.961 356.2 263.88 cv
355.883 263.801 355.556 263.712 355.219 263.613 cv
356.978 256.762 357.914 249.579 357.914 242.179 cv
357.914 194.713 319.434 156.233 271.967 156.233 cv
224.501 156.233 186.021 194.713 186.021 242.179 cv
186.021 289.646 224.501 328.125 271.967 328.125 cv
305.67 328.125 334.842 308.725 348.927 280.484 cv
352.244 281.373 355.408 281.451 358.11 281.62 cv
355.541 287.209 352.443 292.508 348.882 297.45 cv
346.075 301.346 342.98 305.021 339.628 308.443 cv
337.743 310.368 335.777 312.212 333.735 313.972 cv
332.87 314.717 331.991 315.447 331.1 316.161 cv
330.904 316.318 330.711 316.472 330.513 316.628 cv
326.866 319.502 323.004 322.115 318.954 324.437 cv
305.1 332.383 289.056 336.93 271.97 336.93 cv
level3{
gsave
clp
[1.16035e-14 189.5 -189.5 1.16035e-14 271.965 147.43 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.16035e-14 189.5 -189.5 1.16035e-14 271.965 147.43 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
357.914 242.179 mo
357.914 289.646 319.434 328.125 271.967 328.125 cv
224.501 328.125 186.021 289.646 186.021 242.179 cv
186.021 194.713 224.501 156.233 271.967 156.233 cv
319.434 156.233 357.914 194.713 357.914 242.179 cv
.500664 .449622 0 0 cmyk
f
354.28 242.179 mo
354.28 287.64 317.427 324.492 271.967 324.492 cv
226.508 324.492 189.655 287.64 189.655 242.179 cv
189.655 196.72 226.508 159.867 271.967 159.867 cv
317.427 159.867 354.28 196.72 354.28 242.179 cv
.0154421 .00189212 .00241093 0 cmyk
f
277.398 242.179 mo
277.398 245.179 274.967 247.61 271.967 247.61 cv
268.968 247.61 266.537 245.179 266.537 242.179 cv
266.537 239.18 268.968 236.749 271.967 236.749 cv
274.967 236.749 277.398 239.18 277.398 242.179 cv
cp
.937713 .967346 .0686656 .00674449 cmyk
f
272.887 244.679 mo
271.506 244.679 270.387 243.56 270.387 242.179 cv
270.387 183.7 li
270.387 182.319 271.506 181.2 272.887 181.2 cv
274.268 181.2 275.387 182.319 275.387 183.7 cv
275.387 242.179 li
275.387 243.56 274.268 244.679 272.887 244.679 cv
cp
f
272.887 244.679 mo
227.742 244.679 li
226.361 244.679 225.242 243.56 225.242 242.179 cv
225.242 240.798 226.361 239.679 227.742 239.679 cv
272.887 239.679 li
274.268 239.679 275.387 240.798 275.387 242.179 cv
275.387 243.56 274.268 244.679 272.887 244.679 cv
cp
f
272.887 172.73 mo
272.335 172.73 271.887 172.283 271.887 171.73 cv
271.887 165.254 li
271.887 164.702 272.335 164.254 272.887 164.254 cv
273.439 164.254 273.887 164.702 273.887 165.254 cv
273.887 171.73 li
273.887 172.283 273.439 172.73 272.887 172.73 cv
cp
.616052 .56286 0 0 cmyk
f
237.541 181.709 mo
237.195 181.709 236.859 181.53 236.673 181.209 cv
233.435 175.6 li
233.159 175.122 233.323 174.51 233.801 174.234 cv
234.278 173.958 234.891 174.122 235.167 174.6 cv
238.406 180.209 li
238.682 180.688 238.518 181.299 238.04 181.575 cv
237.882 181.666 237.71 181.709 237.541 181.709 cv
cp
f
211.416 207.158 mo
211.246 207.158 211.074 207.115 210.917 207.024 cv
205.308 203.787 li
204.83 203.51 204.666 202.899 204.942 202.42 cv
205.218 201.942 205.829 201.778 206.308 202.054 cv
211.917 205.292 li
212.395 205.568 212.559 206.18 212.283 206.658 cv
212.097 206.979 211.761 207.158 211.416 207.158 cv
cp
f
201.518 242.26 mo
195.042 242.26 li
194.49 242.26 194.042 241.812 194.042 241.26 cv
194.042 240.708 194.49 240.26 195.042 240.26 cv
201.518 240.26 li
202.07 240.26 202.518 240.708 202.518 241.26 cv
202.518 241.812 202.07 242.26 201.518 242.26 cv
cp
f
204.889 280.846 mo
204.543 280.846 204.208 280.667 204.022 280.346 cv
203.746 279.867 203.91 279.256 204.388 278.979 cv
209.997 275.741 li
210.474 275.465 211.086 275.628 211.363 276.107 cv
211.639 276.586 211.475 277.197 210.997 277.474 cv
205.388 280.712 li
205.231 280.803 205.059 280.846 204.889 280.846 cv
cp
f
232.707 309.339 mo
232.538 309.339 232.365 309.296 232.208 309.205 cv
231.729 308.929 231.566 308.317 231.842 307.839 cv
235.08 302.23 li
235.356 301.752 235.968 301.588 236.446 301.864 cv
236.925 302.141 237.088 302.752 236.813 303.23 cv
233.574 308.839 li
233.389 309.16 233.053 309.339 232.707 309.339 cv
cp
f
271.048 320.105 mo
270.496 320.105 270.048 319.658 270.048 319.105 cv
270.048 312.629 li
270.048 312.076 270.496 311.629 271.048 311.629 cv
271.6 311.629 272.048 312.076 272.048 312.629 cv
272.048 319.105 li
272.048 319.658 271.6 320.105 271.048 320.105 cv
cp
f
309.635 310.259 mo
309.289 310.259 308.953 310.08 308.768 309.759 cv
305.529 304.15 li
305.253 303.672 305.417 303.061 305.896 302.784 cv
306.372 302.507 306.985 302.672 307.262 303.15 cv
310.5 308.759 li
310.776 309.237 310.612 309.849 310.134 310.125 cv
309.977 310.216 309.804 310.259 309.635 310.259 cv
cp
f
338.126 282.438 mo
337.957 282.438 337.785 282.396 337.627 282.305 cv
332.019 279.067 li
331.541 278.791 331.376 278.18 331.652 277.701 cv
331.928 277.224 332.539 277.058 333.019 277.335 cv
338.627 280.572 li
339.105 280.849 339.269 281.46 338.993 281.938 cv
338.808 282.259 338.472 282.438 338.126 282.438 cv
cp
f
348.893 244.1 mo
342.417 244.1 li
341.865 244.1 341.417 243.652 341.417 243.1 cv
341.417 242.547 341.865 242.1 342.417 242.1 cv
348.893 242.1 li
349.445 242.1 349.893 242.547 349.893 243.1 cv
349.893 243.652 349.445 244.1 348.893 244.1 cv
cp
f
333.439 208.751 mo
333.094 208.751 332.758 208.572 332.572 208.251 cv
332.296 207.773 332.46 207.162 332.938 206.885 cv
338.547 203.647 li
339.026 203.371 339.637 203.535 339.913 204.014 cv
340.189 204.492 340.025 205.104 339.547 205.38 cv
333.938 208.618 li
333.781 208.708 333.609 208.751 333.439 208.751 cv
cp
f
307.988 182.628 mo
307.818 182.628 307.646 182.585 307.489 182.495 cv
307.01 182.218 306.847 181.606 307.123 181.128 cv
310.361 175.52 li
310.637 175.042 311.249 174.876 311.727 175.154 cv
312.206 175.43 312.369 176.042 312.093 176.52 cv
308.855 182.128 li
308.669 182.449 308.333 182.628 307.988 182.628 cv
cp
f
358.11 281.62 mo
355.408 281.451 352.244 281.373 348.927 280.484 cv
349.271 279.795 349.604 279.103 349.93 278.404 cv
352.455 279.241 355.109 279.682 357.753 279.682 cv
358.162 279.682 358.572 279.672 358.98 279.65 cv
358.982 279.65 358.984 279.65 358.986 279.65 cv
358.701 280.311 358.409 280.968 358.11 281.62 cv
358.11 281.62 li
level3{
gsave
clp
[1.16035e-14 189.5 -189.5 1.16035e-14 271.965 147.43 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.16035e-14 189.5 -189.5 1.16035e-14 271.965 147.43 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
348.927 280.484 mo
347.791 280.18 346.638 279.781 345.479 279.251 cv
345.853 278.512 346.216 277.766 346.567 277.013 cv
347.645 277.562 348.773 278.02 349.92 278.4 cv
349.923 278.401 349.926 278.402 349.93 278.404 cv
349.604 279.103 349.271 279.795 348.927 280.484 cv
.56051 .509117 0 0 cmyk
f
345.479 279.251 mo
343.407 278.303 341.317 276.937 339.282 274.944 cv
331.062 266.899 331.408 263.123 325.778 255.953 cv
320.147 248.783 317.24 247.32 318.61 238 cv
322.31 239.86 li
337.907 261.06 li
333.427 265.69 li
337.298 270.406 li
337.719 269.941 li
338.901 271.238 340.146 272.476 341.44 273.6 cv
342.98 274.95 344.71 276.09 346.56 277.01 cv
346.562 277.011 346.565 277.012 346.567 277.013 cv
346.216 277.766 345.853 278.512 345.479 279.251 cv
.104707 .0691234 .0661631 0 cmyk
f
403.017 311.809 mo
393.814 311.809 386.19 310.493 381.906 309.543 cv
379.496 309.014 378.146 308.594 378.146 308.594 cv
379.002 304.881 379.705 300.51 380.234 296.1 cv
380.707 292.158 381.041 288.185 381.222 284.62 cv
381.394 281.223 381.428 278.196 381.31 275.92 cv
396.53 266.66 391.01 244.58 391.01 244.58 cv
391.01 244.58 385.09 254.92 379.9 263.82 cv
379.9 263.82 li
377.87 266.95 375.65 270.06 373.41 272.69 cv
371.448 274.995 369.124 276.689 366.605 277.831 cv
364.197 278.924 361.61 279.512 358.986 279.65 cv
358.986 279.65 li
358.984 279.65 358.982 279.65 358.98 279.65 cv
358.572 279.672 358.162 279.682 357.753 279.682 cv
355.109 279.682 352.455 279.241 349.93 278.404 cv
349.926 278.402 349.923 278.401 349.92 278.4 cv
348.773 278.02 347.645 277.562 346.567 277.013 cv
346.565 277.012 346.562 277.011 346.56 277.01 cv
344.71 276.09 342.98 274.95 341.44 273.6 cv
340.146 272.476 338.901 271.238 337.719 269.941 cv
346.698 260 li
346.698 260 li
337.719 269.94 li
339.199 271.497 li
347.615 260.514 li
349.047 261.291 350.441 261.93 351.76 262.45 cv
351.761 262.451 351.763 262.451 351.765 262.452 cv
352.993 262.931 354.151 263.321 355.21 263.61 cv
355.213 263.611 355.216 263.612 355.219 263.613 cv
355.556 263.712 355.883 263.801 356.2 263.88 cv
356.537 263.961 356.875 264 357.21 264 cv
360.081 264 362.902 261.114 365.65 256.36 cv
365.651 256.359 365.651 256.358 365.652 256.356 cv
367.102 253.846 368.531 250.818 369.93 247.41 cv
371.11 244.58 372.25 241.5 373.38 238.26 cv
375.81 231.25 378.49 226.93 380.67 224.31 cv
383.3 221.15 385.23 220.43 385.23 220.43 cv
385.23 220.43 387.3 219.82 389.73 219.1 cv
390.79 218.79 li
393.83 217.88 397.08 216.92 397.45 216.81 cv
397.49 216.8 li
400.87 220.51 406.78 223.23 412.07 230.03 cv
420.27 240.59 420.12 256.28 422.77 281.2 cv
422.88 282.251 422.978 283.413 423.063 284.655 cv
423.575 292.219 423.559 302.763 422.399 309.402 cv
422.022 309.48 421.369 309.663 420.666 309.864 cv
419.638 310.157 418.502 310.488 417.956 310.583 cv
412.725 311.473 407.668 311.809 403.017 311.809 cv
level3{
gsave
clp
[5.81765e-15 95.0094 -95.0094 5.81765e-15 379.257 216.8 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.81765e-15 95.0094 -95.0094 5.81765e-15 379.257 216.8 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
381.31 275.92 mo
381.31 275.92 li
381.05 270.79 380.43 266.64 379.9 263.82 cv
385.09 254.92 391.01 244.58 391.01 244.58 cv
391.01 244.58 396.53 266.66 381.31 275.92 cv
level3{
gsave
clp
[5.81765e-15 95.0094 -95.0094 5.81765e-15 379.257 216.8 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.81765e-15 95.0094 -95.0094 5.81765e-15 379.257 216.8 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
397.45 216.81 mo
396.73 217.02 385.23 220.43 385.23 220.43 cv
383.9 217.7 li
382.9 215.63 li
380.8 216.88 378.22 216.97 378.22 216.97 cv
372.22 211.48 371.71 203.47 371.81 199.91 cv
371.81 199.85 371.87 199.79 371.98 199.73 cv
372.7 199.33 375.47 198.92 375.77 198.85 cv
377.66 198.41 379.59 198.32 381.53 198.32 cv
383.04 198.31 384.8 198.4 386.21 199.07 cv
387.41 199.65 388 200.98 388.68 202.07 cv
390.3 204.66 391.74 207.29 393.24 209.95 cv
393.91 211.14 394.82 212.15 395.35 213.37 cv
395.53 213.77 396.89 216.81 397.45 216.81 cv
cp
0 .253727 .273594 0 cmyk
f
343.668 258.063 mo
339.618 260.539 336.516 264.79 335.133 266.899 cv
329.754 260.148 326.217 253.131 326.217 253.131 cv
326.217 253.131 322.022 249.515 319.802 246.012 cv
317.592 242.52 318.173 234.24 321.029 233.828 cv
323.885 233.415 330.011 241.705 330.011 241.705 cv
330.011 241.705 329.721 236.505 330.301 236.338 cv
330.881 236.159 332.868 237.733 334.207 240.589 cv
335.545 243.445 333.336 247.496 333.336 247.496 cv
336.46 252.104 340.076 255.54 343.668 258.063 cv
cp
f
383.633 202.711 mo
382.925 202.699 382.349 203.125 382.248 203.945 cv
382.172 204.56 382.94 206.307 381.685 206.128 cv
380.768 205.998 380.407 204.227 379.905 203.617 cv
378.975 202.488 377.928 202.36 376.653 202.433 cv
375.838 202.479 375.653 202.452 375.174 201.779 cv
374.803 201.258 374.542 200.333 374.021 199.975 cv
373.355 199.517 372.303 199.903 371.578 199.946 cv
370.297 200.023 369.017 199.504 367.902 198.908 cv
364.731 197.21 363.416 191.957 366.813 189.668 cv
368.496 188.534 370.598 188.829 372.215 189.88 cv
373.218 190.532 374.254 190.812 375.434 190.234 cv
376.212 189.854 376.815 189.286 377.646 188.983 cv
378.726 188.589 379.438 188.703 380.383 189.353 cv
381.442 190.082 382.208 190.827 383.562 190.39 cv
385.543 189.751 387.456 188.973 388.824 190.972 cv
389.321 191.699 389.722 192.451 390.513 192.909 cv
391.174 193.292 392 193.314 392.693 193.662 cv
393.588 194.112 394.504 194.989 394.949 195.881 cv
395.799 197.586 395.467 200.13 395.311 201.992 cv
395.117 204.302 394.899 206.609 394.76 208.923 cv
394.682 210.273 394.793 211.445 395.072 212.494 cv
392.941 212.382 387.98 209.345 386.307 206.405 cv
385.659 205.265 385.726 203.313 384.222 202.816 cv
384.021 202.749 383.822 202.715 383.633 202.711 cv
cp
.968536 .803983 .453803 .460548 cmyk
f
383.259 205.955 mo
383.719 205.557 383.703 205.357 383.243 204.953 cv
382.873 204.626 382.705 204.057 383.293 203.753 cv
383.967 203.406 384.624 204.292 384.808 204.838 cv
385.082 205.654 384.96 206.25 384.104 206.533 cv
383.73 206.656 383.034 206.489 383.259 205.955 cv
cp
.0205692 .330327 .347143 0 cmyk
f
385.828 205.124 mo
386.048 206.321 385.727 207.49 384.646 207.725 cv
383.564 207.959 385.655 209.283 386.839 208.703 cv
386.839 208.703 386.428 207.896 386.238 207.108 cv
386.048 206.321 385.828 205.124 385.828 205.124 cv
cp
f
337.298 270.406 mo
333.427 265.69 li
337.907 261.06 li
342.417 256.399 li
347.153 259.496 li
346.698 260 li
337.719 269.941 li
337.298 270.406 li
level3{
gsave
clp
[8.57718e-16 14.0076 -14.0076 8.57718e-16 340.29 261.837 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.57718e-16 14.0076 -14.0076 8.57718e-16 340.29 261.837 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
383.9 217.7 mo
382.9 215.63 li
380.8 216.88 378.22 216.97 378.22 216.97 cv
378.22 216.97 383.39 214.59 384.34 213.74 cv
385.3 212.9 385.66 212.02 385.97 211.91 cv
386.26 211.82 385.71 216.21 383.9 217.7 cv
cp
.0205692 .330327 .347143 0 cmyk
f
347.615 260.514 mo
347.311 260.349 347.005 260.178 346.698 260 cv
346.698 260 li
347.615 260.514 li
.104707 .0691234 .0661631 0 cmyk
f
339.199 271.497 mo
337.719 269.94 li
346.698 260 li
347.005 260.178 347.311 260.349 347.615 260.514 cv
339.199 271.497 li
level3{
gsave
clp
[5.81765e-15 95.0094 -95.0094 5.81765e-15 379.257 216.8 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.81765e-15 95.0094 -95.0094 5.81765e-15 379.257 216.8 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
382.81 221.464 mo
383.544 218.412 li
396.449 214.517 li
398.378 217.7 li
382.81 221.464 li
cp
level3{
gsave
clp
[4.25363e-16 6.9467 -6.9467 4.25363e-16 390.594 214.517 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.25363e-16 6.9467 -6.9467 4.25363e-16 390.594 214.517 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
198.832 166.027 mo
140.453 166.027 li
140.453 132.806 li
198.832 132.806 li
198.832 166.027 li
cp
.500664 .449622 0 0 cmyk
f
140.453 166.027 mo
169.643 143.446 li
198.832 166.027 li
140.453 166.027 li
cp
.599573 .520989 0 0 cmyk
f
198.832 132.806 mo
169.643 155.529 li
140.453 132.806 li
198.832 132.806 li
cp
.426825 .366217 0 0 cmyk
f
90.6865 193.069 mo
109.671 193.069 li
120.017 180.006 li
120.017 153.798 li
90.6865 153.798 li
90.6865 193.069 li
cp
110.396 196.069 mo
89.1865 196.069 li
88.3579 196.069 87.6865 195.397 87.6865 194.569 cv
87.6865 152.298 li
87.6865 151.47 88.3579 150.798 89.1865 150.798 cv
121.517 150.798 li
122.345 150.798 123.017 151.47 123.017 152.298 cv
123.017 180.529 li
123.017 180.867 122.902 181.195 122.692 181.46 cv
111.572 195.5 li
111.288 195.86 110.854 196.069 110.396 196.069 cv
cp
.153964 .0136416 .00540169 0 cmyk
f
111.896 182.029 mo
111.896 190.259 li
118.415 182.029 li
111.896 182.029 li
cp
110.396 196.069 mo
110.231 196.069 110.065 196.042 109.903 195.986 cv
109.3 195.776 108.896 195.208 108.896 194.569 cv
108.896 180.529 li
108.896 179.701 109.568 179.029 110.396 179.029 cv
121.517 179.029 li
122.092 179.029 122.617 179.358 122.867 179.875 cv
123.118 180.394 123.05 181.009 122.692 181.46 cv
111.572 195.5 li
111.282 195.867 110.846 196.069 110.396 196.069 cv
cp
f
115.957 161.353 mo
95.0967 161.353 li
95.0967 158.353 li
115.957 158.353 li
115.957 161.353 li
cp
f
115.957 167.071 mo
95.0967 167.071 li
95.0967 164.071 li
115.957 164.071 li
115.957 167.071 li
cp
f
111.624 172.79 mo
95.0967 172.79 li
95.0967 169.79 li
111.624 169.79 li
111.624 172.79 li
cp
f
443.792 256.612 mo
443 259.42 440.44 261.252 437.663 261.253 cv
437.088 261.253 436.505 261.175 435.923 261.01 cv
433.116 260.218 431.283 257.658 431.283 254.881 cv
431.283 254.307 431.361 253.724 431.525 253.142 cv
432.318 250.333 434.877 248.501 437.655 248.501 cv
438.229 248.501 438.812 248.579 439.394 248.744 cv
442.202 249.536 444.034 252.096 444.035 254.873 cv
444.035 255.447 443.957 256.03 443.792 256.612 cv
cp
435.046 264.109 mo
435.046 264.109 li
435.12 263.85 li
435.046 264.109 li
cp
448.177 254.245 mo
448.082 252.648 447.623 251.115 446.86 249.748 cv
448.165 249.021 li
447.511 247.847 446.662 246.783 445.645 245.879 cv
444.652 246.997 li
443.504 245.977 442.121 245.188 440.545 244.738 cv
440.952 243.308 li
440.934 243.303 li
439.841 242.994 438.738 242.846 437.653 242.846 cv
437.417 242.846 437.182 242.853 436.948 242.867 cv
437.036 244.358 li
435.439 244.452 433.905 244.91 432.537 245.671 cv
431.811 244.366 li
430.637 245.019 429.572 245.867 428.667 246.883 cv
429.785 247.877 li
428.764 249.024 427.974 250.407 427.523 251.982 cv
426.093 251.574 li
426.085 251.602 li
425.776 252.694 425.627 253.797 425.628 254.882 cv
425.627 255.115 425.635 255.348 425.648 255.578 cv
427.139 255.491 li
427.232 257.088 427.688 258.623 428.449 259.991 cv
427.143 260.716 li
427.795 261.891 428.643 262.956 429.658 263.861 cv
430.653 262.745 li
431.799 263.767 433.182 264.558 434.756 265.01 cv
434.346 266.439 li
434.384 266.45 li
435.476 266.76 436.579 266.907 437.665 266.907 cv
437.907 266.907 438.149 266.9 438.389 266.886 cv
438.299 265.395 li
439.896 265.298 441.429 264.838 442.795 264.074 cv
443.523 265.378 li
444.696 264.724 445.76 263.873 446.663 262.855 cv
445.544 261.863 li
446.563 260.715 447.352 259.331 447.8 257.755 cv
449.23 258.161 li
449.232 258.151 li
449.542 257.06 449.69 255.956 449.689 254.871 cv
449.689 254.632 449.683 254.394 449.668 254.156 cv
448.177 254.245 li
cp
f
467.129 244.584 mo
467.129 244.584 li
cp
f
458.169 256.367 mo
457.715 256.367 457.254 256.306 456.792 256.175 cv
454.571 255.549 453.122 253.521 453.121 251.325 cv
453.121 250.872 453.183 250.41 453.313 249.949 cv
453.939 247.727 455.966 246.278 458.163 246.277 cv
458.616 246.277 459.078 246.338 459.539 246.469 cv
461.76 247.095 463.21 249.122 463.211 251.318 cv
463.211 251.772 463.149 252.233 463.019 252.695 cv
462.393 254.917 460.366 256.366 458.169 256.367 cv
cp
466.485 249.704 mo
465.492 249.897 li
465.341 249.125 465.074 248.387 464.696 247.706 cv
465.58 247.217 li
464.941 246.064 464.035 245.058 462.915 244.301 cv
462.352 245.135 li
461.719 244.707 461.012 244.366 460.239 244.142 cv
460.517 243.18 li
460.473 243.168 li
459.704 242.95 458.927 242.846 458.162 242.846 cv
457.623 242.846 457.09 242.897 456.57 242.998 cv
456.761 243.991 li
455.988 244.139 455.25 244.405 454.567 244.78 cv
454.081 243.897 li
452.926 244.532 451.918 245.436 451.158 246.554 cv
451.989 247.119 li
451.559 247.75 451.219 248.457 450.993 249.229 cv
450.031 248.949 li
450.012 249.015 li
449.794 249.784 449.689 250.561 449.689 251.326 cv
449.689 251.857 449.74 252.382 449.837 252.895 cv
450.83 252.707 li
450.976 253.48 451.24 254.22 451.613 254.903 cv
450.73 255.387 li
450.729 255.387 li
451.362 256.543 452.263 257.554 453.378 258.316 cv
453.945 257.489 li
454.575 257.92 455.283 258.26 456.054 258.487 cv
455.77 259.45 li
455.858 259.477 li
456.627 259.693 457.405 259.798 458.169 259.798 cv
458.725 259.798 459.272 259.743 459.807 259.638 cv
459.61 258.644 li
460.382 258.49 461.119 258.221 461.799 257.842 cv
462.291 258.725 li
463.442 258.083 464.445 257.174 465.2 256.052 cv
464.363 255.49 li
464.79 254.856 465.131 254.15 465.353 253.377 cv
466.313 253.651 li
466.32 253.629 li
466.538 252.86 466.642 252.083 466.642 251.318 cv
466.642 250.771 466.588 250.23 466.485 249.704 cv
cp
f
267.918 88.0713 mo
260.338 88.0713 254.172 94.2383 254.172 101.818 cv
254.172 109.398 260.338 115.564 267.918 115.564 cv
275.499 115.564 281.665 109.398 281.665 101.818 cv
281.665 94.2383 275.499 88.0713 267.918 88.0713 cv
cp
267.918 118.564 mo
258.685 118.564 251.172 111.052 251.172 101.818 cv
251.172 92.584 258.685 85.0713 267.918 85.0713 cv
277.152 85.0713 284.665 92.584 284.665 101.818 cv
284.665 111.052 277.152 118.564 267.918 118.564 cv
cp
f
263.54 109.181 mo
263.17 109.181 262.8 109.045 262.51 108.771 cv
261.908 108.201 261.881 107.252 262.45 106.65 cv
267.101 101.73 li
267.101 91.2275 li
267.101 90.3994 267.772 89.7275 268.601 89.7275 cv
269.429 89.7275 270.101 90.3994 270.101 91.2275 cv
270.101 102.327 li
270.101 102.71 269.954 103.079 269.69 103.357 cv
264.63 108.711 li
264.335 109.023 263.938 109.181 263.54 109.181 cv
cp
f
221.565 122.096 mo
218.545 122.096 216.095 119.646 216.095 116.626 cv
216.095 113.606 218.545 111.156 221.565 111.156 cv
224.595 111.156 227.045 113.606 227.045 116.626 cv
227.045 119.646 224.595 122.096 221.565 122.096 cv
cp
221.565 106.266 mo
215.855 106.266 211.215 110.906 211.215 116.626 cv
211.215 126.896 221.565 139.426 221.565 139.426 cv
221.565 139.426 231.925 126.896 231.925 116.626 cv
231.925 110.906 227.285 106.266 221.565 106.266 cv
cp
0 .765194 .334752 0 cmyk
f
441.237 213.076 mo
430.111 196.387 li
430.111 173.972 li
430.73 173.972 431.231 173.47 431.231 172.851 cv
431.231 172.232 430.73 171.73 430.111 171.73 cv
421.145 171.73 li
420.526 171.73 420.024 172.232 420.024 172.851 cv
420.024 173.47 420.526 173.972 421.145 173.972 cv
421.145 196.387 li
410.019 213.076 li
409.025 214.566 410.093 216.562 411.884 216.562 cv
439.372 216.562 li
441.162 216.562 442.23 214.566 441.237 213.076 cv
cp
.153964 .0136416 .00540169 0 cmyk
f
417.861 205.354 mo
412.568 213.293 li
412.275 213.732 412.59 214.32 413.117 214.32 cv
438.139 214.32 li
438.666 214.32 438.98 213.732 438.688 213.293 cv
433.395 205.354 li
417.861 205.354 li
cp
.0154421 .00189212 .00241093 0 cmyk
f
132.461 143.632 mo
74.6328 143.632 li
74.6328 100.559 li
132.461 100.559 li
132.461 143.632 li
cp
level3{
gsave
clp
[33.1084 57.3454 -57.3454 33.1084 86.993 93.4231 ]ct
/14 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~"=h7g">%@h">.Ch">@Li">IOi"#@Oi"#RXj"#[^k"#mgl"$!jl!]dgl!^!sn!^+!n!^4'o!^F0p!^X<r
!^a?r!^sHs!CaBr!CsKs!D'Qt!D9Zu!DBZt!)9]u!)B`u!)Kg!!)]s#!)g!#!*$*$!*--$!*?6%!*H9%
!*Q<%!*cE&!*lH&!*uK&!+2T'!+DZ'!+M]'!+V`'!+hi(!+ql(!,.u)!,8#)!,A&)!,J,*!,\2*!,n;+
!-";*!-4D+!-=G+!-FJ+!-XS,!-aV,!-jY,!.'_,!.9h-!.Bk-!.Tt.!.]t-!.p(.!/$(-!/-+-!/?1-
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[33.1084 57.3454 -57.3454 33.1084 86.993 93.4231 ]ct
clp
/14 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s/N*!WiE)!WiE)!WiE)!WiE)!W`<&!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E0#zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
<~.4Qet.kE5&/1iG+/h\k20/,(70etL?1GgpF1c7-K2E*QR2`NcV3&ru[3]fDb4$5Vf4?Yhk5!M7s5X@\%
5s[h(6UO706psI47Rfm<7n6*@8P)NH8kM`L9MA/T9heAX:/4S\:f("d;,L4h;c?Xp<)cjt<`W:'='&L+
=BJ[.=^#!5>?b<:>[1N>?!^iE?XR8M@:<SR@U`eV@q9+]AS#FbAnPaiBP;'nBk_9rC2.L!CM[g(D/O60
Df9Q4E,]f:EcQ2@F)uDDFEDYJG'8%PGB\7TG^+LZH?spbI!g<hI=6QnIt)rtJ:N3%JqAT+K7ef/KS5&5
~>
<~_83t(_8*k%^q[Y!^V7Fr^:h4n]tD"j]Xtef]=Y\e]=PSb]",A^\[f8]\[f8]\[]/Z\@B&Y\@8rV\$riU
\$rfS[^NTO[C*BK['[0GZa7!EZa6sCZ*CO;Yct@9Yct=7YHP.5YHP.5YHP+3Y-+n/Xf\\+XK8J'X/i8#
WiE(uWMukqW2QYmVl-GiVP^5eV50o^USFTYU8"BUTqS0QTV.sMT:_aISt;OESXl=AS=H+>S=?":R[T\5
R@0G0Q^=&*QBmi&Q'IW"Pa%DsPEV2oP*1ukOcb`eO,o?_NfK-[NK&pWN/W[QMMd:KM2@%ELPLY?L5(D9
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /14 /Gradient get_res exec grestore
}if
np
93.2544 112.118 mo
126.242 112.118 li
126.242 109.118 li
93.2544 109.118 li
.0154421 .00189212 .00241093 0 cmyk
f
93.2544 118.679 mo
126.242 118.679 li
126.242 115.679 li
93.2544 115.679 li
f
78.3906 113.781 mo
82.3433 118.099 li
88.8804 110.312 li
86.5825 108.382 li
82.2456 113.549 li
80.603 111.755 li
78.3906 113.781 li
cp
f
93.2544 125.24 mo
126.242 125.24 li
126.242 122.24 li
93.2544 122.24 li
f
93.2544 131.801 mo
112.897 131.801 li
112.897 128.801 li
93.2544 128.801 li
f
265.21 376.544 mo
264.897 376.464 264.568 376.385 264.223 376.307 cv
264.739 371.849 262.157 367.923 255.655 367.216 cv
255.515 367.055 255.373 366.896 255.23 366.738 cv
260.556 365.851 266.251 363.861 270.897 360.736 cv
270.843 360.798 270.789 360.86 270.735 360.923 cv
267.324 364.904 266.064 370.296 267.285 375.4 cv
266.58 375.755 265.888 376.136 265.21 376.544 cv
level3{
gsave
clp
[7.2709e-15 118.743 -118.743 7.2709e-15 246.696 292.087 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.2709e-15 118.743 -118.743 7.2709e-15 246.696 292.087 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
264.223 376.307 mo
263.225 376.082 262.095 375.871 260.855 375.711 cv
259.597 372.59 257.832 369.72 255.655 367.216 cv
262.157 367.923 264.739 371.849 264.223 376.307 cv
255.23 366.738 mo
251.762 362.917 247.31 359.995 242.222 358.395 cv
242.198 358.388 242.175 358.381 242.151 358.373 cv
242.858 357.115 243.55 355.85 244.228 354.576 cv
245.999 354.942 247.827 355.147 249.662 355.147 cv
250.201 355.147 250.741 355.129 251.279 355.093 cv
253.935 354.913 256.68 354.395 259.355 353.597 cv
262.036 352.797 264.726 351.723 267.356 350.424 cv
268.699 349.761 270.035 349.042 271.355 348.258 cv
271.355 360.241 li
271.199 360.403 271.047 360.568 270.897 360.736 cv
266.251 363.861 260.556 365.851 255.23 366.738 cv
240.273 357.845 mo
237.946 357.273 235.584 356.994 233.234 356.994 cv
232.403 356.994 231.573 357.029 230.748 357.098 cv
230.748 346.936 li
238.535 346.936 li
238.622 347.093 238.708 347.249 238.795 347.405 cv
239.984 349.535 241.341 351.606 242.745 353.61 cv
241.939 355.032 241.115 356.444 240.273 357.845 cv
250.756 354.076 mo
248.751 354.076 246.763 353.812 244.868 353.364 cv
245.939 351.217 246.974 349.079 247.98 346.936 cv
271.355 346.936 li
271.355 348.076 li
270.014 348.81 268.66 349.477 267.304 350.087 cv
264.669 351.271 261.987 352.226 259.334 352.909 cv
256.687 353.592 253.989 353.992 251.409 354.066 cv
251.191 354.073 250.974 354.076 250.756 354.076 cv
243.435 352.383 mo
242.092 350.636 240.79 348.815 239.625 346.936 cv
246.382 346.936 li
245.429 348.776 244.445 350.594 243.435 352.383 cv
level3{
gsave
clp
[10.7035 103.166 103.166 -10.7035 243.933 287.387 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.7035 103.166 103.166 -10.7035 243.933 287.387 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
242.151 358.373 mo
241.529 358.175 240.901 357.999 240.273 357.845 cv
241.115 356.444 241.939 355.032 242.745 353.61 cv
241.341 351.606 239.984 349.535 238.795 347.405 cv
238.708 347.249 238.622 347.093 238.535 346.936 cv
239.625 346.936 li
240.79 348.815 242.092 350.636 243.435 352.383 cv
244.445 350.594 245.429 348.776 246.382 346.936 cv
247.98 346.936 li
246.974 349.079 245.939 351.217 244.868 353.364 cv
246.763 353.812 248.751 354.076 250.756 354.076 cv
250.974 354.076 251.191 354.073 251.409 354.066 cv
253.989 353.992 256.687 353.592 259.334 352.909 cv
261.987 352.226 264.669 351.271 267.304 350.087 cv
268.66 349.477 270.014 348.81 271.355 348.076 cv
271.355 348.258 li
270.035 349.042 268.699 349.761 267.356 350.424 cv
264.726 351.723 262.036 352.797 259.355 353.597 cv
256.68 354.395 253.935 354.913 251.279 355.093 cv
250.741 355.129 250.201 355.147 249.662 355.147 cv
247.827 355.147 245.999 354.942 244.228 354.576 cv
243.55 355.85 242.858 357.115 242.151 358.373 cv
level3{
gsave
clp
[-84.2863 8.74469 8.74469 84.2863 284.805 342.516 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-84.2863 8.74469 8.74469 84.2863 284.805 342.516 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
230.748 387.372 mo
230.748 357.098 li
231.573 357.029 232.403 356.994 233.234 356.994 cv
235.584 356.994 237.946 357.273 240.273 357.845 cv
240.901 357.999 241.529 358.175 242.151 358.373 cv
242.175 358.381 242.198 358.388 242.222 358.395 cv
247.31 359.995 251.762 362.917 255.23 366.738 cv
255.373 366.896 255.515 367.055 255.655 367.216 cv
257.832 369.72 259.597 372.59 260.855 375.711 cv
259.461 375.531 257.928 375.415 256.287 375.415 cv
252.92 375.415 249.1 375.904 245.098 377.331 cv
238.759 379.581 234.104 383.409 230.748 387.372 cv
267.873 377.331 mo
267.224 377.112 266.323 376.827 265.21 376.544 cv
265.888 376.136 266.58 375.755 267.285 375.4 cv
267.441 376.05 267.636 376.695 267.873 377.331 cv
level3{
gsave
clp
[4.3919e-15 -71.7252 71.7252 4.3919e-15 165.794 408.945 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.3919e-15 -71.7252 71.7252 4.3919e-15 165.794 408.945 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
271.355 390.009 mo
230.748 390.009 li
230.748 387.372 li
234.104 383.409 238.759 379.581 245.098 377.331 cv
249.1 375.904 252.92 375.415 256.287 375.415 cv
257.928 375.415 259.461 375.531 260.855 375.711 cv
262.095 375.871 263.225 376.082 264.223 376.307 cv
264.568 376.385 264.897 376.464 265.21 376.544 cv
266.323 376.827 267.224 377.112 267.873 377.331 cv
267.636 376.695 267.441 376.05 267.285 375.4 cv
266.064 370.296 267.324 364.904 270.735 360.923 cv
270.789 360.86 270.843 360.798 270.897 360.736 cv
271.047 360.568 271.199 360.403 271.355 360.241 cv
271.355 390.009 li
level3{
gsave
clp
[4.39189e-15 -71.7251 71.7251 4.39189e-15 329.589 412.925 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.39189e-15 -71.7251 71.7251 4.39189e-15 329.589 412.925 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
230.748 390.009 mo
213.526 390.009 li
213.526 346.936 li
230.748 346.936 li
230.748 357.098 li
230.748 387.372 li
230.748 390.009 li
.104707 .0691234 .0661631 0 cmyk
f
275.61 385.753 mo
217.782 385.753 li
217.782 342.68 li
275.61 342.68 li
275.61 385.753 li
cp
level3{
gsave
clp
[33.1084 57.3454 -57.3454 33.1084 230.142 335.544 ]ct
/15 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~J9(\jJ91bkJTLklJoq%nK6I:qK6R@rKm3RtL3Wb!L3`h"LO0"$LjT1&M1#@(MLGO*Mgk^,N.:m.Ne%01
O+I?3O+RE4OG*Z7ObNi9P(s#;PDB2=P_fA?Q&5PAQ&>VBQ](nER#V.HR?%=JR?.CKRZRRMS<<jPS<EpQ
SWj*SSs99USsB?VT9fNXTU5]ZTpYl\U7)&^U72,_UR_AbUR_AbUn.PdUn7VeV4[egVP*tiVkO.kVkX4l
W2'CnWMKRpWhoarWi#gsX/>ptX/H!uXJl1"XJl1"Xf;@$XfDF%Y,_O&YH.^(YH7d)YcRm*Yc[s+Z*+--
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[33.1084 57.3454 -57.3454 33.1084 230.142 335.544 ]ct
clp
/15 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~It)rtIt3'"J:W9&JV&K*JqAT+JqJ]/KS>,6KnY57Knb>:L51P>LPUbBLl$tFM2I1JMMmCNMi<USNK0$Z
NfK-[NfK0]O,oBaOH>TeOcbfiP*2#mPEV5qPa%DsPa%GuQBml(Q^=),R$a8.R$a;0R@0M4S"#n:S"#q<
S=H+?SXl=BSXl=CSt;OGT:_aKTV.sOTqS0RTqS0SU8"BVU8"BWUSFTZUSFT[Unjf_V5:#cVP^5fVP^5g
Vl-GjW2QYnWMukrWMukrWiE)!WiE)!X/i;%X/i;%XK8M)XK8M)Xf\_-Y-+q1Y-+q1YHP.5YHP.5Yct@9
~>
<~EcZ;CF)uDDF*)MGFEM_LG'A.SGB\7TGBe@WG^4R[H$Xd_H@(!cH[L3gI!pEkI=?WoIXcisIt3'"J:W9&
JUrE)JqAW-KS5&5KnY89L5(J=LPL\ALkpnEM2@+IMMd=MMi3OQNK&sYNfK0]O,oBaOH>TeOcbfiP*2#m
PEV2pPa%DtQ'IW#QBmi'Q^=&+R$a8/R@0J3R[T\7S"-"=S=H+?SXl=CSt;OGT:_aKTV.sOTqS0SU8"BW
USFTZUnjf^V5:#bVP^5fVP^5fVl-GjW2QYnW2QYnWMukrWiE)!WiE)!X/i;%XK8M)XK8M)Xf\_-Y-+q1
~>
0 0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /15 /Gradient get_res exec grestore
}if
np
236.403 354.238 mo
269.391 354.238 li
269.391 351.238 li
236.403 351.238 li
.0154421 .00189212 .00241093 0 cmyk
f
236.403 360.8 mo
269.391 360.8 li
269.391 357.8 li
236.403 357.8 li
f
221.539 355.902 mo
225.492 360.219 li
232.029 352.432 li
229.731 350.503 li
225.395 355.67 li
223.752 353.876 li
221.539 355.902 li
cp
f
236.403 367.36 mo
269.391 367.36 li
269.391 364.36 li
236.403 364.36 li
f
236.403 373.921 mo
256.046 373.921 li
256.046 370.921 li
236.403 370.921 li
f
181.106 100.662 mo
181.106 104.926 177.649 108.382 173.385 108.382 cv
169.121 108.382 165.664 104.926 165.664 100.662 cv
165.664 96.397 169.121 92.9404 173.385 92.9404 cv
177.649 92.9404 181.106 96.397 181.106 100.662 cv
cp
.153964 .0136416 .00540169 0 cmyk
f
465.887 284.019 mo
465.887 288.282 462.43 291.739 458.166 291.739 cv
453.901 291.739 450.445 288.282 450.445 284.019 cv
450.445 279.754 453.901 276.297 458.166 276.297 cv
462.43 276.297 465.887 279.754 465.887 284.019 cv
cp
f
55.7485 196.525 mo
55.7485 198.828 53.8823 200.694 51.5801 200.694 cv
49.2778 200.694 47.4116 198.828 47.4116 196.525 cv
47.4116 194.223 49.2778 192.357 51.5801 192.357 cv
53.8823 192.357 55.7485 194.223 55.7485 196.525 cv
cp
f
413.807 123.74 mo
413.807 126.042 411.94 127.908 409.638 127.908 cv
407.336 127.908 405.47 126.042 405.47 123.74 cv
405.47 121.438 407.336 119.571 409.638 119.571 cv
411.94 119.571 413.807 121.438 413.807 123.74 cv
cp
f
362.921 169.921 mo
373.25 169.921 li
374.846 169.921 376.139 168.628 376.139 167.032 cv
376.139 165.472 li
360.032 165.472 li
360.032 167.032 li
360.032 168.628 361.325 169.921 362.921 169.921 cv
cp
level3{
gsave
clp
[16.1075 0 0 16.1075 360.032 167.697 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[16.1075 0 0 16.1075 360.032 167.697 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
379.226 144.188 mo
380.734 141.496 382.853 139.089 385.51 137.114 cv
392.997 131.584 397.45 122.75 397.45 113.485 cv
397.45 97.29 384.271 84.1113 368.093 84.1113 cv
366.98 84.1113 365.867 84.1831 364.754 84.2905 cv
351.449 85.7627 340.586 96.4639 338.952 109.751 cv
337.624 120.47 342.22 131.028 350.928 137.312 cv
353.478 139.143 355.543 141.496 356.979 144.188 cv
level3{
gsave
clp
[42.6932 0 0 42.6932 357.626 108.533 ]ct
/16 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~"=h7g">%@h">.Ch">@Li">IOi"#@Oi"#RXj"#[^k"#mgl"$!jl!]dgl!^!sn!^+!n!^4'o!^F0p!^X<r
!^a?r!^sHs!CaBr!CsKs!D'Qt!D9Zu!DBZt!)9]u!)B`u!)Kg!!)]s#!)g!#!*$*$!*--$!*?6%!*H9%
!*Q<%!*cE&!*lH&!*uK&!+2T'!+DZ'!+M]'!+V`'!+hi(!+ql(!,.u)!,8#)!,A&)!,J,*!,\2*!,n;+
!-";*!-4D+!-=G+!-FJ+!-XS,!-aV,!-jY,!.'_,!.9h-!.Bk-!.Tt.!.]t-!.p(.!/$(-!/-+-!/?1-
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[42.6932 0 0 42.6932 357.626 108.533 ]ct
clp
/16 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s/N*!WiE)!WiE)!WiE)!WiE)!W`<&!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E0#zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
<~.4Qet.kE5&/1iG+/h\k20/,(70etL?1GgpF1c7-K2E*QR2`NcV3&ru[3]fDb4$5Vf4?Yhk5!M7s5X@\%
5s[h(6UO706psI47Rfm<7n6*@8P)NH8kM`L9MA/T9heAX:/4S\:f("d;,L4h;c?Xp<)cjt<`W:'='&L+
=BJ[.=^#!5>?b<:>[1N>?!^iE?XR8M@:<SR@U`eV@q9+]AS#FbAnPaiBP;'nBk_9rC2.L!CM[g(D/O60
Df9Q4E,]f:EcQ2@F)uDDFEDYJG'8%PGB\7TG^+LZH?spbI!g<hI=6QnIt)rtJ:N3%JqAT+K7ef/KS5&5
~>
<~_83t(_8*k%^q[Y!^V7Fr^:h4n]tD"j]Xtef]=Y\e]=PSb]",A^\[f8]\[f8]\[]/Z\@B&Y\@8rV\$riU
\$rfS[^NTO[C*BK['[0GZa7!EZa6sCZ*CO;Yct@9Yct=7YHP.5YHP.5YHP+3Y-+n/Xf\\+XK8J'X/i8#
WiE(uWMukqW2QYmVl-GiVP^5eV50o^USFTYU8"BUTqS0QTV.sMT:_aISt;OESXl=AS=H+>S=?":R[T\5
R@0G0Q^=&*QBmi&Q'IW"Pa%DsPEV2oP*1ukOcb`eO,o?_NfK-[NK&pWN/W[QMMd:KM2@%ELPLY?L5(D9
~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /16 /Gradient get_res exec grestore
}if
np
370.22 144.502 mo
376.233 124.043 li
376.635 122.678 375.151 121.531 373.931 122.263 cv
368.093 125.763 li
362.237 122.261 li
361.016 121.531 359.534 122.679 359.937 124.043 cv
365.967 144.503 li
366.141 145.092 366.759 145.43 367.349 145.256 cv
367.938 145.082 368.275 144.463 368.101 143.875 cv
362.55 125.04 li
368.094 128.356 li
373.621 125.043 li
368.085 143.875 li
367.912 144.464 368.25 145.083 368.839 145.256 cv
369.429 145.429 370.047 145.092 370.22 144.502 cv
cp
0 .493324 .647425 0 cmyk
f
378.382 165.896 mo
357.789 165.896 li
355.481 165.896 353.61 164.025 353.61 161.718 cv
353.61 144.184 li
382.561 144.184 li
382.561 161.718 li
382.561 164.025 380.69 165.896 378.382 165.896 cv
cp
level3{
gsave
clp
[28.9502 0 0 28.9502 353.61 155.04 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[28.9502 0 0 28.9502 353.61 155.04 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
353.049 146.591 mo
353.049 149.094 li
383.122 149.094 li
383.122 146.591 li
353.049 146.591 li
cp
353.049 153.457 mo
383.122 153.457 li
383.122 150.954 li
353.049 150.954 li
353.049 153.457 li
cp
353.049 162.183 mo
383.122 162.183 li
383.122 159.68 li
353.049 159.68 li
353.049 162.183 li
cp
353.049 157.82 mo
383.122 157.82 li
383.122 155.317 li
353.049 155.317 li
353.049 157.82 li
cp
level3{
gsave
clp
[30.0729 0 0 30.0729 353.049 154.387 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[30.0729 0 0 30.0729 353.049 154.387 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
186.7 334.164 mo
181.789 334.164 li
181.789 326.357 li
186.7 326.357 li
186.7 334.164 li
cp
.770871 .747158 .181369 .033051 cmyk
f
191.507 327.877 mo
176.98 327.877 li
175.4 327.877 174.118 326.596 174.118 325.015 cv
174.118 324.528 li
174.118 322.947 175.4 321.665 176.98 321.665 cv
191.507 321.665 li
193.088 321.665 194.37 322.947 194.37 324.528 cv
194.37 325.015 li
194.37 326.596 193.088 327.877 191.507 327.877 cv
cp
f
188.147 337.254 mo
180.341 337.254 li
180.341 329.447 li
188.147 329.447 li
188.147 337.254 li
cp
.0158694 .165713 .759853 0 cmyk
f
228.644 375.778 mo
228.644 400.299 208.765 420.178 184.244 420.178 cv
159.723 420.178 139.845 400.299 139.845 375.778 cv
139.845 351.257 159.723 331.378 184.244 331.378 cv
208.765 331.378 228.644 351.257 228.644 375.778 cv
cp
level3{
gsave
clp
[44.4068 76.9149 -76.9149 44.4068 162.041 337.32 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[44.4068 76.9149 -76.9149 44.4068 162.041 337.32 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
221.554 375.778 mo
221.554 396.384 204.85 413.088 184.244 413.088 cv
163.638 413.088 146.934 396.384 146.934 375.778 cv
146.934 355.172 163.638 338.468 184.244 338.468 cv
204.85 338.468 221.554 355.172 221.554 375.778 cv
cp
.283848 .27393 0 0 cmyk
f
219.785 375.778 mo
219.785 395.406 203.873 411.318 184.244 411.318 cv
164.615 411.318 148.703 395.406 148.703 375.778 cv
148.703 356.149 164.615 340.237 184.244 340.237 cv
203.873 340.237 219.785 356.149 219.785 375.778 cv
cp
.0154421 .00189212 .00241093 0 cmyk
f
189.611 375.778 mo
189.611 378.742 187.208 381.145 184.244 381.145 cv
181.28 381.145 178.877 378.742 178.877 375.778 cv
178.877 372.813 181.28 370.411 184.244 370.411 cv
187.208 370.411 189.611 372.813 189.611 375.778 cv
cp
.770871 .747158 .181369 .033051 cmyk
f
184.38 379.193 mo
184.108 379.193 li
183.154 379.193 182.374 378.413 182.374 377.459 cv
182.374 350.678 li
182.374 349.724 183.154 348.943 184.108 348.943 cv
184.38 348.943 li
185.334 348.943 186.114 349.724 186.114 350.678 cv
186.114 377.459 li
186.114 378.413 185.334 379.193 184.38 379.193 cv
cp
f
186.236 344.312 mo
186.236 345.411 185.344 346.303 184.244 346.303 cv
183.144 346.303 182.252 345.411 182.252 344.312 cv
182.252 343.211 183.144 342.319 184.244 342.319 cv
185.344 342.319 186.236 343.211 186.236 344.312 cv
cp
.283848 .27393 0 0 cmyk
f
186.236 407.244 mo
186.236 408.345 185.344 409.236 184.244 409.236 cv
183.144 409.236 182.252 408.345 182.252 407.244 cv
182.252 406.145 183.144 405.253 184.244 405.253 cv
185.344 405.253 186.236 406.145 186.236 407.244 cv
cp
f
152.778 373.786 mo
153.878 373.786 154.77 374.678 154.77 375.778 cv
154.77 376.878 153.878 377.77 152.778 377.77 cv
151.678 377.77 150.786 376.878 150.786 375.778 cv
150.786 374.678 151.678 373.786 152.778 373.786 cv
cp
f
215.71 373.786 mo
216.811 373.786 217.703 374.678 217.703 375.778 cv
217.703 376.878 216.811 377.77 215.71 377.77 cv
214.61 377.77 213.719 376.878 213.719 375.778 cv
213.719 374.678 214.61 373.786 215.71 373.786 cv
cp
f
260.104 467.948 mo
259.672 468.392 259.301 468.88 258.996 469.401 cv
258.53 469.161 li
258.463 468.863 258.181 468.658 257.872 468.694 cv
257.541 468.733 257.304 469.033 257.343 469.364 cv
257.382 469.695 257.682 469.932 258.013 469.894 cv
258.196 469.841 li
258.647 470.075 li
258.396 470.629 258.215 471.214 258.108 471.819 cv
258.854 471.95 li
259.085 470.645 259.705 469.444 260.646 468.478 cv
260.104 467.948 li
cp
.35877 .201297 .147463 0 cmyk
f
265.592 465.646 mo
265.421 465.646 265.251 465.652 265.082 465.664 cv
265.008 465.037 li
265.196 464.889 265.304 464.648 265.274 464.393 cv
265.228 464 264.872 463.719 264.479 463.765 cv
264.086 463.812 263.805 464.167 263.851 464.561 cv
263.881 464.814 264.041 465.021 264.255 465.124 cv
264.329 465.748 li
263.615 465.864 262.926 466.08 262.27 466.395 cv
262.596 467.078 li
263.53 466.631 264.538 466.404 265.592 466.404 cv
266.088 466.404 266.584 466.458 267.067 466.563 cv
267.228 465.821 li
266.692 465.705 266.142 465.646 265.592 465.646 cv
cp
f
272.194 468.194 mo
272.525 468.153 272.76 467.853 272.72 467.521 cv
272.679 467.19 272.378 466.955 272.047 466.996 cv
271.738 467.034 271.512 467.3 271.518 467.604 cv
271.102 467.968 li
270.684 467.538 270.212 467.155 269.694 466.829 cv
269.29 467.47 li
270.424 468.185 271.31 469.196 271.853 470.396 cv
272.543 470.083 li
272.293 469.528 271.976 469.011 271.602 468.538 cv
272.004 468.187 li
272.194 468.194 li
cp
f
265.044 475.855 mo
264.658 475.878 264.269 475.89 263.887 475.89 cv
263.007 475.89 262.154 475.829 261.409 475.711 cv
261.018 475.648 260.563 475.556 260.138 475.419 cv
261.185 477.279 263.208 478.544 265.527 478.544 cv
268.382 478.544 270.789 476.628 271.477 474.04 cv
270.795 474.489 269.971 474.865 269.018 475.162 cv
267.839 475.53 266.463 475.77 265.044 475.855 cv
cp
f
268.17 472.77 mo
267.42 472.77 266.81 472.159 266.81 471.409 cv
266.81 470.659 267.42 470.049 268.17 470.049 cv
268.92 470.049 269.53 470.659 269.53 471.409 cv
269.53 472.159 268.92 472.77 268.17 472.77 cv
cp
263.433 473.678 mo
262.413 473.678 261.583 472.848 261.583 471.828 cv
261.583 470.808 262.413 469.979 263.433 469.979 cv
264.452 469.979 265.282 470.808 265.282 471.828 cv
265.282 472.848 264.452 473.678 263.433 473.678 cv
cp
265.592 467.163 mo
262.239 467.163 259.512 469.829 259.512 473.106 cv
259.512 473.532 259.558 473.955 259.649 474.368 cv
260.323 474.851 262.355 475.258 264.997 475.099 cv
267.876 474.926 270.293 474.142 271.669 472.94 cv
271.664 472.745 271.648 472.55 271.624 472.358 cv
271.244 469.396 268.65 467.163 265.592 467.163 cv
cp
f
281.595 469.03 mo
281.3 468.914 280.79 468.721 280.213 468.793 cv
279.662 468.861 279.369 469.133 279.369 469.799 cv
279.369 470.665 li
281.597 470.665 li
281.597 472.383 li
279.369 472.383 li
279.369 477.837 li
277.438 477.837 li
277.438 472.383 li
276.098 472.383 li
276.098 470.665 li
277.438 470.665 li
277.438 469.777 li
277.438 468.097 278.333 466.994 280.006 466.994 cv
280.648 466.994 281.163 467.116 281.596 467.303 cv
281.595 469.03 li
cp
f
286.298 472.362 mo
286.121 472.332 285.94 472.315 285.771 472.315 cv
284.876 472.315 284.262 472.863 284.262 473.93 cv
284.262 477.837 li
282.33 477.837 li
282.33 470.665 li
284.203 470.665 li
284.203 471.45 li
284.654 470.776 285.342 470.473 286.223 470.473 cv
286.638 470.473 287.071 470.601 287.317 470.81 cv
286.298 472.362 li
cp
f
288.851 473.574 mo
292.026 473.574 li
291.848 472.656 291.293 472.138 290.464 472.138 cv
289.554 472.138 289.021 472.686 288.851 473.574 cv
cp
293.965 474.24 mo
293.965 474.462 293.95 474.729 293.928 474.892 cv
288.843 474.892 li
289.05 475.928 289.776 476.379 290.686 476.379 cv
291.308 476.379 291.981 476.128 292.5 475.69 cv
293.632 476.935 li
292.818 477.682 291.782 478.022 290.575 478.022 cv
288.377 478.022 286.853 476.527 286.853 474.27 cv
286.853 472.013 288.333 470.473 290.479 470.473 cv
292.544 470.473 293.958 472.005 293.965 474.24 cv
cp
f
296.504 473.574 mo
299.679 473.574 li
299.501 472.656 298.946 472.138 298.118 472.138 cv
297.207 472.138 296.674 472.686 296.504 473.574 cv
cp
301.618 474.24 mo
301.618 474.462 301.604 474.729 301.582 474.892 cv
296.497 474.892 li
296.704 475.928 297.429 476.379 298.339 476.379 cv
298.961 476.379 299.635 476.128 300.153 475.69 cv
301.285 476.935 li
300.471 477.682 299.435 478.022 298.229 478.022 cv
296.03 478.022 294.506 476.527 294.506 474.27 cv
294.506 472.013 295.986 470.473 298.132 470.473 cv
300.197 470.473 301.611 472.005 301.618 474.24 cv
cp
f
304.287 474.248 mo
304.287 475.38 305.035 476.224 306.13 476.224 cv
307.27 476.224 307.98 475.343 307.98 474.248 cv
307.98 473.152 307.27 472.271 306.13 472.271 cv
305.035 472.271 304.287 473.115 304.287 474.248 cv
cp
309.964 474.248 mo
309.964 476.401 308.469 478.022 306.493 478.022 cv
305.53 478.022 304.85 477.645 304.383 477.09 cv
304.383 480.798 li
302.459 480.798 li
302.459 470.665 li
304.346 470.665 li
304.346 471.457 li
304.813 470.872 305.501 470.473 306.485 470.473 cv
308.469 470.473 309.964 472.094 309.964 474.248 cv
cp
f
312.809 477.837 mo
310.876 477.837 li
310.876 470.665 li
312.809 470.665 li
312.809 477.837 li
cp
313.067 468.319 mo
313.067 469.015 312.527 469.548 311.832 469.548 cv
311.136 469.548 310.603 469.015 310.603 468.319 cv
310.603 467.623 311.136 467.075 311.832 467.075 cv
312.527 467.075 313.067 467.623 313.067 468.319 cv
cp
f
316.032 473.219 mo
318.734 470.665 li
321.102 470.665 li
317.624 474.04 li
321.125 477.837 li
318.749 477.837 li
316.032 474.936 li
316.032 477.837 li
314.101 477.837 li
314.101 467.18 li
316.032 467.18 li
316.032 473.219 li
cp
f
184.412 475.854 mo
184.412 472.646 li
184.017 472.03 183.167 471.503 182.288 471.503 cv
180.868 471.503 180.018 472.675 180.018 474.242 cv
180.018 475.81 180.868 476.967 182.288 476.967 cv
183.167 476.967 184.017 476.469 184.412 475.854 cv
cp
184.412 477.772 mo
184.412 476.718 li
183.885 477.436 183.021 477.948 182.025 477.948 cv
180.179 477.948 178.875 476.542 178.875 474.242 cv
178.875 471.986 180.165 470.521 182.025 470.521 cv
182.977 470.521 183.841 470.99 184.412 471.767 cv
184.412 468.002 li
185.511 468.002 li
185.511 477.772 li
184.412 477.772 li
cp
f
190.403 471.43 mo
188.895 471.43 188.147 472.704 188.089 473.788 cv
192.732 473.788 li
192.718 472.733 192.015 471.43 190.403 471.43 cv
cp
186.932 474.228 mo
186.932 472.177 188.396 470.521 190.418 470.521 cv
192.557 470.521 193.816 472.191 193.816 474.315 cv
193.816 474.594 li
188.089 474.594 li
188.177 475.927 189.114 477.04 190.638 477.04 cv
191.443 477.04 192.264 476.718 192.82 476.146 cv
193.347 476.864 li
192.645 477.567 191.692 477.948 190.535 477.948 cv
188.44 477.948 186.932 476.439 186.932 474.228 cv
cp
f
194.607 476.835 mo
195.178 476.044 li
195.647 476.586 196.541 477.055 197.507 477.055 cv
198.591 477.055 199.177 476.542 199.177 475.839 cv
199.177 474.125 194.797 475.18 194.797 472.558 cv
194.797 471.459 195.75 470.521 197.434 470.521 cv
198.635 470.521 199.485 470.976 200.056 471.547 cv
199.543 472.309 li
199.119 471.796 198.342 471.415 197.434 471.415 cv
196.467 471.415 195.867 471.898 195.867 472.528 cv
195.867 474.081 200.246 473.056 200.246 475.81 cv
200.246 476.996 199.294 477.948 197.463 477.948 cv
196.306 477.948 195.325 477.597 194.607 476.835 cv
cp
f
201.667 477.772 mo
201.667 470.697 li
202.766 470.697 li
202.766 477.772 li
201.667 477.772 li
cp
201.477 468.954 mo
201.477 468.544 201.814 468.207 202.209 468.207 cv
202.619 468.207 202.956 468.544 202.956 468.954 cv
202.956 469.364 202.619 469.687 202.209 469.687 cv
201.814 469.687 201.477 469.364 201.477 468.954 cv
cp
f
209.708 475.736 mo
209.708 472.646 li
209.328 472.03 208.478 471.503 207.599 471.503 cv
206.178 471.503 205.329 472.631 205.329 474.198 cv
205.329 475.751 206.178 476.894 207.599 476.894 cv
208.478 476.894 209.328 476.352 209.708 475.736 cv
cp
204.582 479.589 mo
205.138 478.769 li
205.724 479.472 206.428 479.735 207.438 479.735 cv
208.61 479.735 209.708 479.164 209.708 477.611 cv
209.708 476.601 li
209.196 477.318 208.332 477.86 207.335 477.86 cv
205.49 477.86 204.186 476.483 204.186 474.198 cv
204.186 471.928 205.475 470.521 207.335 470.521 cv
208.288 470.521 209.137 470.99 209.708 471.767 cv
209.708 470.697 li
210.807 470.697 li
210.807 477.567 li
210.807 479.911 209.167 480.644 207.438 480.644 cv
206.237 480.644 205.417 480.409 204.582 479.589 cv
cp
f
217.413 477.772 mo
217.413 473.144 li
217.413 471.898 216.783 471.503 215.832 471.503 cv
214.967 471.503 214.146 472.03 213.737 472.602 cv
213.737 477.772 li
212.638 477.772 li
212.638 470.697 li
213.737 470.697 li
213.737 471.723 li
214.235 471.137 215.201 470.521 216.256 470.521 cv
217.735 470.521 218.512 471.269 218.512 472.807 cv
218.512 477.772 li
217.413 477.772 li
cp
f
223.404 471.43 mo
221.896 471.43 221.148 472.704 221.09 473.788 cv
225.733 473.788 li
225.718 472.733 225.015 471.43 223.404 471.43 cv
cp
219.933 474.228 mo
219.933 472.177 221.397 470.521 223.418 470.521 cv
225.557 470.521 226.817 472.191 226.817 474.315 cv
226.817 474.594 li
221.09 474.594 li
221.178 475.927 222.115 477.04 223.638 477.04 cv
224.444 477.04 225.264 476.718 225.821 476.146 cv
226.348 476.864 li
225.645 477.567 224.693 477.948 223.536 477.948 cv
221.441 477.948 219.933 476.439 219.933 474.228 cv
cp
f
233.35 475.854 mo
233.35 472.646 li
232.954 472.03 232.105 471.503 231.226 471.503 cv
229.805 471.503 228.956 472.675 228.956 474.242 cv
228.956 475.81 229.805 476.967 231.226 476.967 cv
232.105 476.967 232.954 476.469 233.35 475.854 cv
cp
233.35 477.772 mo
233.35 476.718 li
232.823 477.436 231.958 477.948 230.962 477.948 cv
229.117 477.948 227.813 476.542 227.813 474.242 cv
227.813 471.986 229.102 470.521 230.962 470.521 cv
231.914 470.521 232.779 470.99 233.35 471.767 cv
233.35 468.002 li
234.448 468.002 li
234.448 477.772 li
233.35 477.772 li
cp
f
242.9 476.967 mo
244.335 476.967 245.185 475.81 245.185 474.242 cv
245.185 472.675 244.335 471.503 242.9 471.503 cv
242.036 471.503 241.171 472.03 240.791 472.646 cv
240.791 475.854 li
241.171 476.469 242.036 476.967 242.9 476.967 cv
cp
239.692 477.772 mo
239.692 468.002 li
240.791 468.002 li
240.791 471.767 li
241.362 470.99 242.211 470.521 243.178 470.521 cv
245.024 470.521 246.328 471.986 246.328 474.242 cv
246.328 476.542 245.024 477.948 243.178 477.948 cv
242.182 477.948 241.318 477.436 240.791 476.718 cv
240.791 477.772 li
239.692 477.772 li
cp
f
247.528 479.545 mo
247.689 479.618 247.954 479.662 248.129 479.662 cv
248.612 479.662 248.935 479.501 249.184 478.915 cv
249.652 477.846 li
246.693 470.697 li
247.88 470.697 li
250.238 476.498 li
252.582 470.697 li
253.783 470.697 li
250.238 479.208 li
249.813 480.233 249.096 480.629 248.158 480.644 cv
247.924 480.644 247.558 480.6 247.353 480.541 cv
247.528 479.545 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 /13 /14 /15 /16 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 23.0.2%%For: (Ayib) ()%%Title: (Time management & Relaxing at home concept-3 up-01.eps)%%CreationDate: 26/08/19 3.31 PM%%Canvassize: 16383%AI9_DataStream%Gb",KpKlk%qs\q7g]N?\LgYN@>=&>%.+i<c!0Im&E;$p@a7%a>B-r=_TOISrM?i=NC`q2u?=ksL6tE(MY3>8AD#A37Qlmh)R,D'j%8FmgK@u3GrZE'U3h=ms!7_.F)g:b.5PdPBfD);^.],jZG<8556[0Cj)i3h-P)F&go;_9p0&S[;Sbj%nSCR?]](F5t*JUSlD8%Gf^%/'%Th8MetN/B=NXkssOjGo-=/DUC?<R=F"-_(Ptof7W>(J7pS"U[&$N4Q+g:c\O\P_?Iu<Ur_I%!e,b0OWYO-%n:K`[$ok=R;,MV%g@m=K<7C'<<3ssm%l^Lde68E?g=%`r"Hl<]_$!,us1D_*\cAso7$^=:G_$,U":LR'<F^PMm2oX2Yo_]Ne;@jApl`j-62q)o+;sCm%qR#[\op_CqhU[$-;%EOM=pR2F.U!MN]Buq!(#oT:Eq!dC.&plRlN+taAfm]I!-1O/JfLdT2+1Hu)W7Ed[>W$.Sn3MJ!#h#oK4L-V%@:k`8'Nd+]$?uh/#^;dnahan*2<kHij7L[h0L@#qKKV'_Rbh@`$,AYVEYcc<VHt-:S>Usjomu'm$D)aAo?WjZ^u"BkD&XM2C$?iQ%k7Gb1!XtQ4=40PGOe<*>ADi;&0N6H!=ng]eHj?,73u/D&qr=p^[IlHC1N8<A#`ndn+)^16UYja?=,fIEWYd$6Gc8*ZTQMoDDoRB+%r0qHpIMcZ!^@"uXFW_o#<U[l_m'>!bHKG!:VtR=/hsH+umMR?*?6shoHA4)O%jZA8U8aFZ<;>n4H,$t=;f/S44$<ffs1fWi:hNQG%m\#G@n*9im's.h9$lW<aB%m8u9r"HmI^eUUh]FP0l"Pme3rf)-&"'j/keI`=PN(C*Sm+D"rNfKZRX2I)p?_`(%g:M-9s*okgXCNM%>ppr^0S?[an(*+[_e9Ok*P1@l`VpbTMX#\N1%Mh?qkOZ;ol250'h1[pj_2'tU1:`N`f1'ZB4[%/g2-%3;si*-o!i,Jgipg1hOBO!%!)Z[1=1[fRf%34>8-)l.q'LGB;pdnq9b?kSlP+fHTT]oZd[R#*GusYsf`,?QYP5C)Nf7!Dq..<.?0u<-fU\H7[mTj$m$60H,n^6A%#g."F_9/0\70d&+*fM.U5D%24TJaJ,*=GR9*Gd;JPUh=>^d]HKUbd29HENnh`)%Vt(<S59<<CI"_E_Ps@U3tkiLpNp&YVb*aLF32%0K2E,.*c2R/`+6.'.L/>!2=G+TeK<q1md?E&TA>U88/qKqGSqQ>nAH3k(D@X!B`Y`9%MW4-(?&5A;87R)(*75\."uATSOI7,6Re,%9I<Ct+gY.6cE^S*b@dZQN5itOZIqLopE'Tqpm;$[Eeb>CRUDem"@i`N84\CBfZfK\8^7H(A:PeBTkn*fE"G8?,T_gF<Z2(Yd%3#l%Nu_H7Z%W]Br7E3P/`PD,GtYrdPfK*^TO<:`R\la>:]P_Ipm;,#a)[2n984WV&YTJ,GUOOG(((-I2+E'@'L3e/%?O^*"9toc1_^gb%"@XR>-p/1R$4DQ=K#U5rd2u0cM%TgjLLi:O74.'q?s`sRLd27I;hTdTk_&)P-]J="XYE'`MaSn]aae3)5t3/^<<8n]"6jA^MCFo4%Tk$HpOd8;e6j0LP62Zl1U&f-EL.;#:!Mps;V#Y0@!H\YRqLnrE6NL/>S-;WOQ=X3^79P^tR?Ldh/e."gAO=O3):0RA8X:VnPQZi0%3/Ig-d""_D!758q$u!Mb.#X6:MLl+"PK3eWBtuM2OCgf#-j$+S'9#&r-;o#IHK/>23ChaGF_<-cD]/Oq'l*f!+H/nU:I\&edMW??%0SF[=3Z8>-TV94'Qi_dg!mm*hrmFmlB5kteJk21S"+VO%H6uH[!jhA)$c@Lh9g_,X/$]6"ZQ./?>gU8W&>Cs`-3H^_%1F]e8+RiA%/;OoJ/4K]'ZZHD9FW+j:d3:0h4O)8i!(;o<_^%[*,t,R8eLg\CYUh*I.+Cp'S3RZ7as7hN;&!83U-R'LN^?l<,cDgh'tGFpJM'@V%cj.LUO+5Z7gdQ9,(_K3E4=bH*BSFtp2UFn>RJ3@'9dMesi&js5m4Rl:GTPjke=Hb:o;Xe[58)b=5!1h"m2fY_=`M+oa"QuOd4c4r%)?tIDPiL0h]=%]B"0WHDC]K6uNhq4n`tgp+C'n*moS6B_W%onu=<`hPOOuF!Yd@RHl>]3s(PKWm#B+r1ZK$(Xqgc<hn2g]E[`5j!%f_L'4/9X7>"+jbh#+Q7cL*0!>cO*eecO%P7&i_.WX=\Z!dE?!9R^Ijr'#T8SMI:[RCon[-`WiYh3qA+kdJkIma@K>fpj[[&]811q%)K::N_hR7mJZ@!>E05'n<!ZAdTH7P,!X=4r^`];s"Au?.:]rJ'omAZ-r;k=J(b7@BqFL"3(gfC+rZ!fr/B/uqblBL%,doR5C^r3;%;k1o8*7&UE$\6Z5kt&$9=_R&,Gp."7at#/;HQhL)m4NrAY(CMmKWQedm45KE'V5uA\0X;8aCC)aVMItR$ncg69H!TF%EcI7+\bU[%DSiqGSu$_6)/5,<dYUPH-WgDK9p.tqE5>YVA%]\Wo<+2+6gBgMGokK:,a0K`j\D!J8b*j!>G//kOW14eI])QiRdRiE<a/`R=EChf%\3ckP`r>=agtpOaQFcX5i+^4:a(gH^hK\P',V\FrnB*L#&HIMR!Ili>B0:.'#b37E%q\(\&AXPf!"Umd?58!'A`-htaY]<+#-.b*%qjhG/q[?@E!K[EgU]MqM16Mj,7Y'jP+@eObPQWU3(-FMoe.<-!-3;_1^mcRbVr`Hh6pUkXWIVE$_#L)ojfec)Lj3lu,k,O_:jE3=%O;.Ic2#'q(Rmkq?a^B;r3@bg;E4rE3j/@K7%9QqoXd>TOOi:WA2\Il<DV1nt:6I$bfgscAb$arQI=e=_hQ;I%AF/3I3EdI`o(W3.%4C8+*j9m/m&H'BF#/Kc?'`/O`8)ujCs2tG#_Hn)H!KOM*>k%Mu;?2'=Q<Rr]Acqc9C"A7)T\3'Y63I's(!?KNm".>ZN$[YZoBDK*%kY2T<)Qi1:&K'cJq`jasZ1K/kU(?`Q111aC#S"RR,4HGte0O8A/8/aN+p%"BADo)qSAt3ZE#_>UKo?G&'X2^7qBKt/,@TttF>&?#%$3c2;4:YJ,'VaO47)k@F'n;<O=o@jLm[nS\0\RC\Y%;FJ"`0i7Cmq?\$,$CY`Ej3EYKU4e=5`K0bCB!bdNsHZ&d"`"3.V6=77.2O%JiB&#T0gA[=2H9uR7A%&'<DrP\--b`L/Td]9&oi+^i)1HG!(H>!9V/XHiT.=7,_:23',@E\Rk:.'T[Irf`-MJkO>"hXI0'[3fSh$%8*DqRc=/I_FrE#N$QN2\=R6/!(]o]7i3ConUeqGk$ip_,EMSVc2ro>Er#f%N=@skJ]SI.BfH.'SUTujj@X4oNO9("Lf1!roDJIm#%C.PM&.U['QmOE"MA8%$bMS7NT/,(l[Pq:MCi1u4^o^Q$HE7eH+EQX'6/J8%%&NV4sgb_JY6@'CZ!D%c46K?1l#YisR&qH=1TgN!F%NK^%RjPutr66lX]^Oe$ZfKOsokT/3_N"/bVa:'Q,_'*'I6ed@81,G5Q_9mW1RhisVcs+M#?q<938e13`AN)B)V6FfgD(#Yb#KokG%2U[Fp13R,lI$IgqmFZ#-YF5dUe10F13Hg#)MK="^k?*klBWM<`N]/P!kN`sD)s#6L]e4e56b_!8)ZcU/)Z2).X)`S;bG33FY_N')%jA#0Q2hb'n!3al(R1_bAAE6Db;@!g\L>r?D5:(qQ,*.Ta(1fU7Q%E/#`6?81VNW^GAR++"E>S,p+Fif-<!E./&p>\)Jsb:br?0W_%3!K*!d]Q-U,*l`DG/]k$dT*GaXBIV8i&"K:8?jYsblX_VCG=+?[`5V[.FLj[,MBLp*`LM$MDD=;7XiGR.[-%gs+[e!D&$0Q^n7)G%b>MId^PmFcD(j(?dDDj`SC53q)(0I0I^A$[XFIK5[fS^g]!*eRg*M9[:<&#2ND5!><Em!<!qRTcaG=6CM=]A%XkSCOO1A4,%NhUp%E"2!oI]L""-?96&?6%J"&4,!3*_VVHLUq#tLi\Y\iup\L]V4>'[E"+aJcr]9.Zk8tOgG:B^uE$d8Pt#Z'5`.1+O\228"'TRcsm`2%J)&MFKs*Tp2LOUVdWC-7'Q4IU5oDL<9H=89,$m+16WHpXauQ_A!.prP's;#r9"H/rLD?n(WS##oe8$R"]'DQ*g5g=:fFS8A&aqYp%@0Qpk[D<bcXKfh#T\%c:q[;Mg7<rNuIgZ[7p"UTfL/1<dreYh_Am$D;:Yf030`G!r'9[W.\ND>1.\4V?9BTGf4#UL!DFc!@*%Jg%%iOpP!j[KS=<#DYElSYp?XGHKZ8f(>]^*%r%Z!?jc:'.s?-lU3B;B1hB+XQk9o]9a,L;Eg"UgS=9J5:"K`tN`;6V+E/&93bp[*G<:%oLE)?@`Ko<pslEd>jliXa_GA6b0G^&6O=372Z`(o[Kuu\)V\XmJTk&/@$_#`nUOcg-A[3h%">FgfcaiQqaWeX<&ci"0+@ZnBe1>D%GO#:TrEDiCd`S07nUhQ<Un(JMRmOG*#2Y@UA7s`Ec8ebqRNEY+i/%pXcbbFCZnVgmUlhJ_KF#R$hUtq\JT_%%G#bd7dY9U2;dh=o%d.U@lJG3"kYC/-0e,<K']Bd%XIYZs"L0H26%nFW_+l)R33(.r,jKuPu0=ep)k\_odY$/WsPe_ShB?&fn5hX,9T^B-.-]B)VV/\I8%n3kc,9Pm5K<a7d-><D@4Nj/$qj_d_q[jG3spQVYCpG+=Oaf1T"V.\[Y2hAg!%GDDF2a]!<)hbU&_TF/[GhW=W2`tX?<X0N2E=hX-%#1iK2g`6i,GE'g<\d]([CYFQ&qnTiT%(pB8"'FkK3OjX:pSQmRZ&RAj%h-0fnr_<1\3\C_bS^OEhG@jHQlDj`]Fb[7H%mn"&4N6_%He15C#^H09Zn)RX_Vp(Z-^`3:Bl#AlP;J9TBeZD.D/Y;-d]RYPUEjM1G0t^6[XVm"`Nf,5*3t>5XW0E3klr)"*/!E[&okCE"PfOn%PBIQKp'hN#*H^j>nBX^>.S^aqN:Fc^b?b(7Cq-RsT-9sUgZ^9X>!-T(on`<Vr5?!fHi(rT!%T?c7<*LUe<aPZd4U`ZZWCpI4_SOu%7n702k0_FUO`n!olfc'giLOJMX^Os7o&%lM;sD.X(UC^]/+(=VUN+BM87YsVK(W)NA=qHJeUhcqM'iTcP'<Q*'TJkn4qnCQBP.ep%+.>U0HRS5eUQs_.fnVfU`6pCl8s(5j!Fus:VZYG-)PdokBUS,>rfNM?\T(dWIN=:;?Y<m5&'DmecFA`q1TpXP^6SDaEOF6nguPQ:%jN4B]c`1Sr[bf-*nodbCAQ<`'Wo-"4KNA:Q:6*.O#Ped/"q]nrXPD^Obc0LTl'Ui%B]es3%-kTi*IY>REiSKiU^Uqfc%(rj1SC8-%!>XAuW+9I)L\%.\>PZSgD1g;h8DE/4MR#"&8K]:pUX5QS,3Cg^SU]).\&p]dA#"Nc3;U[R+D;c*Xh]p##%=$U&A4dUfuHAfGo=9$%QmSX3f'Wqs6FNua5RiOX,08DPJ'Oo,mtf8&ZFc`?`1I?\*?*Q,^^5G7?1,*:HL59M`En4`h8NZ4=dQCA!m4fl[8q=s!IGCp0Ap$j%f>usf43QFJqAKC<ZXJ+]K?W0pYP3?uhWo9TB5aC?:^DOJ,Ck1C&O0%-%pO0OUbU'/F?mc]PK89)0R-)(r(J8lM--#)-Q)M@kQB!G%9+W(u"FsoKNhYkM+Ne(_A='FS_C./Wp'Ei;q!B.%9WlChGPDpM&9I_4\*nD85/Fs_1#)O>r/KUc6NT,?&&GG:p>+CnA+-.s1C,Ca%0\Aj)AJ,1dC#8Um\6"i!S6Z]O^)Nt\m2\1)cn6;aB\OnR;da9#Nb!)%ZjjZ\F6E&$:<q_Il#,d.f.>>NHf8F11*^A'"UK=1kG1FI%:['i#5=nXgkl!8[^ZM.PmRQ7?<j[Wb64[.Joq4i:5dDMRBK]J6b8^X=+p0#@?n7>DD#f>C!6VYWoY9<tIjXL7:Ep%I]#\@2JF[X\%(4ECSG?d0HBms.XZU6@9jj`72<P[`PLO#EO(2',f^nVlcdLle6V=!b`guT=ri7Y%d?k+iB3(mEbMi9@40RmK9]R$f"38<d^8OrT]%f[pc8!M/BoipJ?RNpRKu(MbNKh?Z[*qoSBgQa/,O<XL]oQ`Rmt_(']#,[`9p3.HnUm%lP']l\=^JYD_4[G6rdS%BZb?B.5DaucXt%_b[Ru5-4$3SE_Y3fh8$ad[%M[_HHZ.!qm[4#Kjk-\'?)Y(4/+UhJ[-Dd4LM]Ye9o5_kQ2)TYQX.2"^sGq"`Mb?RYDi/(gZB@.#r3%f+FQdlZ0cIlWsa<UM8fJ7.P:HH*FYF"[)[La$329\9i7eB>kQD\L\2,^kEh\/>UnVi]31`XOJ`;o7F<eJn$'r"i]F=3?c?<Xk$Nl%7ggML3F`1^;s8lajJt9Q);:`L\d]N08^M.iaV3D,?MepeW\F_sOb@kXE08?/c(8MOf%eI,H=6.*kj[6'B]r@AbNKWhebo6oNDqV.%^K.ZM[h<GZBBl=B:[?#PX+<.M1t@^,jgs<MQs(HbVh/]2i53&!cq!OP3Y,^X&1&O*i7`H\0>ihSkd=\8Y5"(3lru@IpNB!d0VWl,%&pRG!$\s:/>k4E#jqk*KV?f@!bVt&>D*Aq=O9XT1qk7);Fl./k[D+OdF\T'iHbMddWdd!%db^bKm*sQUdP#-W"_taR%]]-ZT_Kn[%:Z$9il0+#6Vu'KD,iogEm=+Asgf+7#r+csaP7OR.gF2^d?MPT^0n?HcCSLtMr<#%/k2X!28[*Z;/#cf+CMGMNX^1YHb9O,Q*5Z%>%/GY"He@PUUJ+`&*rtLjs9gGZ>(G`%j:Ulp7IXCYH)j;AI`B>i/<qH^S@)d*ri.EIW0`#Bab?:adq6k-Whk\ZST>5@5c#3T=dEtXq%B:-El))V-:MEu0qA)i;77"(g!i)BTcpmaR`ZL^$;JR\\p;clu*C+qLU!TtWa49YTNKn.B0"<7NbN.lerM)Z"H^Kq303sd^(!(T<O%Zj<mNWZVr!@mf_1A&*?u30++'1#P.ur**EhTY=&582B'T1n"K?)%)@6m2rH5W2gZna#@*FRmqqBD2;/+p>=8PZfd)>%f<iNMPC'E%j7f9B&Jo^3I5l23+,?$oJ'EoK,S)&rp:FU9D9MD=jB$H-I</]5^GW0A8lE*$m:s?/M=?K>6cHgSYC&h1?lH.1/(/p!fl$NESg8]Q%RuUP;2cV[*^Q-^mgAV9<Fi0:7BVu"hD7$o<of%C@2#M;8d1f@PmnA$#eD=Q_(*<sCmsRLX^0+IZ>+r#UrT=uP)gs\b9bc<Tf@cGZ%gO4S$hp%I3IG(7A!,C&UV+;oK&qk1'qm@(Y&:%"Ob:hbWr;$h(aD#&XfAl)0iele+^"kc?-8"h5Eg9hE[Y]dJ@[K=IkaS$j.DblG%<qUgBU\n/mj;TbMHki4!e9gt=khf)`I*3g:hgo.P^Z75M:B3d?oj5>.p&("cQ?:s4#&.g8pX'q1I.Q/U*9uWInk0)U:3t=r#kOlM%!UUs?qO<l!fnlK%:[cV%#5LeGCDt(NpNMJ.0hMB$4Q[TDrhW"fjEm]]r_$%ZORk&)1U4nKD&?"#e?iSs'E;E`J(55IqR6:%HtT$_%/'7=*pE+f;8/8h;qHmp*V6#2s&lnjnkVI;eRIkot#<M.Ln)#`ZeN_AK2U"qPBGrbc3q2Hg/`5t&VR]J!niG%qUG6h\2V2ZX_-aqJ%S?ns>'&R?ZlZZ4Prg@S;/bVa[5HEO_I;^O(T+UQ2^s>1h^pa?8bqfDnrZ-Y00h!1-6GV4'k?m%#q<#4jYtVKOC4kS/JXWaBmC(Rs%BMGTk9dKJEiJ4bpRIB75hZ`Rn_iL.bG;_n6ShC%,3mTa!]$if:nk"n)9VK><r&-8/@P]Os8C>&?VHVPS>.]!SG%T&IQ$fJCAjqok%<9VL!lMjQQU]/6pMsFt!k`k#+9607E0?!Y.IuN\ms*,GWG6[.;W4k*7XRXAeY^K*Nk;uU!.r*E11Yjj3:<F:!o>NS[J&_?nHJkhp%?e]8k:)KtlEkg.SJ,RiK%W@OA-a9RYLX7u)Q&=GIs-WpJ\&$+gV`0+(5Mr`R6]/4JRT!oqX8^.(DW=qGHKaK"IuGQ?9>'4a*tG8g%jjQ$`42o3@[WY["B_gQ:M^s9><IDth`W'(E<o":AV5^p]eb?s0A[PZ)1Aj@5i+_]NZ&<NMQ-aj_rNAjs[6J*mAt"_$<P@(UAp\ps%dioI5Xgb1s(B2`<.^OR$?2=A7Rh=f;B"h@qjIaP+,pb=IgLgAUH8j_?1G1UAJ%aiKeJ%P61Gc=50ni*slF(E@ETRY^Vtn?#n$6r1%r9ZDfHlnpB4$oBqNAFM3n1VOr`kU0MME..$NAK\l`gO%!O+,uG1ZX$sj,AIJRhaI4di2rBo8PQ4ZuK[bl1s<Wcp-R8MB;PZQ\]6d%qp,tPS<bTgM3KfD=Q'r5dcSK8h%NFnLDGAX*hPNLDf]Hb[.gNW")/gSb=[/g9s!7CJGAS[dZFLIo7,\CT"0=AV;JenI[fZ4):<B:%H$-:Ik5$Z>_@L_^mG"U!%FOi1C:CbJ2V2hFC:CbF2V2h&U>=tGgK_Adeo'>UUW;U7a1n%*o*tW4Z>r$*X+YO;RR2i*s0<43#(A0m%F!:*<Zq^a,hj_kAYg93!Drtd(iU5?JkZ))b$M4,oZt@%Ord:7(H-C3(#J]ku1jZd.<V?'t01Y\QhWnii:RU4P#u?HiLMqY(cHMii%j3o3rqLL`(s&2;!rn/p[%Q`Fb00Jj4>s@^n(G\OY-mD3fn4<cA?OEsprtO5oI^^[-9W_m=Vp,/S#MFJ>=/n*rlc<`#.=mNhP<WWd%i*3l!F;c4uO$58edC]C;<laDj%!'dG8)@lS4&!V1?X.X.S)8$7Z2Ng:kgU,tJ!+P;42Nl0HK!U!481g/n#IrEhaD5SQ_)30S>r6N%HEZ2RHN"YrltO*]S[u"R&;KWgLW2D\lK(2"9*=b1.^p3*k"BKBGP:NO!MR8b.@m$kO5I7[o;<.L@ik77kP=uGI/S?GqX\fA0$`(@%kNgIcp#l/Io6gN4^U!i$J%*M#X?U4X%';cn6u"2AD8,-p?ZVgB3R?<Is.+8L(ZrR0Re)k<:0."%[GTN_7N3>q[X[-&Wnl:O^KPBR%0\+k46Z#",[%CO.C&IH.?W4/YHZ22H7d$iK#'%$'LI5d^d!%9Phe>`:mirIWIC#r>[HW?\\C"C@^\MZ%/Ot)XJt&[rjsdf)9BZ(/%fJB.TS%n!-Sqm1o%m!]H26EDNO%`2t*RJRkl6"hqC;#k2<DnRN[bk;SSgWaa$+`@OJ:d58Ykh"2om?/?ZdYu1SbaGRAXm\+ZmL0g%.R3*1nS-Yu7E9,%6Y*/\H1-]$KdhecdkHCUi'3+cBOuu5bfp)J&<TYKNI'FM',DRcKlZIKgZsTd?sVWGJnI;"j^<B5[*G"59hh<]%rf,^_4IJ!$k00#Lo46,s\E:o'Gqs"P;"J5C^T$m'lGcHYfU3bMe!VS)N-R0kT$3UjABnhTk3o`3kmM("$?i4-];_cJ*:*V/BO<p`%s3:jkr9_PT5=o)(nF7Jm]pDgnpX6CSV\m/0)`%>`.PO)UitHRkZs2t4r377@%tU)ibOO*_q%"OinOY)"gRW4>X`*^Zc0,"8X-kZ6%^D54GFV?f#g$5W+d.tdaIt[B\[D)62XaXb$T0%gHF/mc?lfb65?*+r.rnHl^qMkdspccc7IW3,iZ7*'XYeTYYJQCXTWnom!s8)p/%1TK!.ejDhZ[E;I-2Cf-O5H0%F3#G`q?<`7N8IM%rpA7Y)#er$4ZU31!#St,]EB\!2DKb5!&)t<J&=4NmLgN@=mtuLM-h?.$7nJI)%9sc!gAVqLfG3t?GM"V?V?(5FNSQl%+P6QNqYimaA-N(Kl5Nh9lc]2nQH2;"tIBhI#IgGZ<a/gZps.l*]5<`<[bgRZk:pnWu+5_f*%oCU'>:Oi:tOp3<SmAX$#Zhob5f`$s0C%kgZjdu=p'[IbGRs[2@gI@m7pWDs#HG&bfWa4,D;ZJf,k2SDd-%2C-;c:52f$n%&>.a.Y%/KJQui;f0lkD<dsGc7&\#Xn::d/?0p@Q!icR5<8];sNggd/1+22a9tTf:APK1etg0cX6MVTRGG`Q_q"4Z[VfbOnAT]Un6Q&l5<s`%rMl;UbC<KE.t9N<o5h0a"8.N6@a.\IqMSJrXk5R*r?c4:),)n_iOF>V(OU[$b(&B/P^+2@/`.a-hh*gsl"#tPG'hT5J7s]2TFHkX%j#bTdcG2V#rtP=<]?kqDaI'/=]E[l3="oGK^4al9Ab4^n0mZ$YUd&,$p`rpaQ=I^E\8<8jcD/1)=`ie'i&h@:7tL7[E5nV;h_++T%$N.J4T^Peck#('gMZS;?D]T%AJG/qcZH^;&Go/LO"6X+NeFWGn@:4\W#D08u#dW>?&=`fr)%$L"%AQfW<W@7)b=7'3k_X3s#Ca]L%.=?n@Z[4%<2g^n;<6s.AaBSORqh0t)!MeOJh>O6If_?/hqeeI^?TTq%UGmNqo:kq]Oo&l,>]K'Mo]r?N>&L-fek\b*/aL*BlVf'd%]=jh2s1(V2p;]C63Xls>7AdAHB!Wj_hqtS3a),2=*duAIn=L]_o[R<3e\u0NVSAnKS)O)\qEDF*Id_")B]GGgqtI`ngO4J/E]QWq%.'$:V%RY(s*4-g\.F'Y]g@)OIpb2gl#Y1A4307(QEHbI-nTTj#I;bhEp<BU@eu"Y9iC71Fs1\$60I6%Td-<9teXp;NbH:g'jQ1b2%JYk<`b>c#p:Q#a=$g[3+4O*)n\6=cMh2&s_eeeA7B`X*f(Ck<Z3.nr;DpER`g7.nFa(T6eG^ln9IU2]oRHr?Tmd#UK8+<]MOOLs+%HL;2jG@tm_4jC[<^Z@W'SYs6b4;D[<5.f\#2mu2j!SUU69&F^'@(q^"C[-YOhTMtrHQg>o.>DcO=jOP^e*o"NNR(^8;bar,DeW._%dU8A_h6^nK0>AXp4#,--Vl#gLa=f,1n*Js%!lB>!5i+L]bR4\>2kb:+qYP5[FmJ:!Mp8Be-X+jR$L,:9"nf(&k8*]jBnQGY"eD2`%p&(YLhoIVM`[(A,o9_\LR(pd^G)nobp?1B14\fY`ijnOS9#'7e>*oad1WsDmje->^r='FH-V#a'](17lbUc<3oK)HakB_`5?,g0\%^\@sK?hlY.:A%DA"e16ljF^7CU>ksn:H&1W%S6D]L3U.f'M3\A1IY'QrNjfVhso5u5?-]*-fnt53"D/u7W^)._h3E9%QM26'Djq:%!rfn@T5P#5?k))lRCl["&Z#Fc@F(YMr]Ah^<\3ZTHf0]8=&mMhlK5S!L])Y54$1X5<7(Bn<_k;)[>X8^91*P[SBuNQ^RFop,i+XN%\'&EjVc8h,O9j.bD'mpf2hUHdcB[.CEh!!K)c^i>KMGMqRVKH=p&DIYYJ^;E"=q=e*IYHTnPA?4PL"T;Ep<nak*_FJ:)U\`:MMff%\o*n+E9R%\k,b@(Aoo!UhjD=M]YZ-Bm?,=sVHn1KAVGSBd4^R$7QV,di'Vl)f$CX&e(`^uJ`@6O,?T0\bs$NHi:f,5U/JrYBgLG=%GO*'i[B8":1O*A0@#f0_$X,L<C9snk/0/NX//h!!%6j[NqO$#QZ!c"K%*X06.fV7p'4qGIT/<sC[2Xj0Jg<Y?J#H2p(79Sog7i^[%14'1H9R/S$G0i-r[.+ro_<<Jt>m26l%ubN;gjfO7TXQsVc)F#4:BH193iH;_nAACZ891Fi&J4FY3M'Y=#$oRW8$HsKdiq/S>9qHl%/Gb'r8<sqZ"j;_<.k*1)rc@`G^?ibV1]6kI&/%)4hVJp^$N,9o(;PQ'!c*&@3cM'R>=F4,!Hde).'GP:?;JHMj\#RUc\O\P@MhL2%`%^Z`r!!r]5r(!0:GI0B#49#c'.8qD?"iq5^B11F#P.!.k_`^+'=RBnh]nk=1-3Mu\!'IXet^:>O!+38'cm5G@,Zmp"88I!T&BmC%WlUi<K:0f$?p^p'HY%Z,<sJCk#,?FP'APMBSY-OHApMmb82;A`;]',$B.+PgR1qZ4UCd4%+AaoS(#$5a(c^9G(d=>A,Ztt,;\[7]%J2XT8,:#8^pl@aiEKn7A+=%igSjE<1498rb+XrNs.=2&X'[Qgo)M"Q-RnP$No-B<na3tH=PpBb/*53O,_nuXHM\M"sTa80F__Nbd%$?jH0$2q_Wj@tdY5B1^oRLtP\\3XqOpesYS:A]Zm;t%9d&j-\VAke;["Y=U,`S$'d_?Um/.)5u5KkGQC9r%\:&bSp\?kXeY,<uNt%ib/O'YU%ItrUE-1&mo#aG"Lj.8jj[T!pYm+SI+=]oRK2VU,-2EoHkskpid2I%Q6Uqg@OHO:;A^F8:_p<.0P7CW*reg7@6Ahi&_Xm%!r=#6N#C*Hkk7UV%#asi=[3A_Q/Xb)e"12dN$+Ro];+c]Bbmp>O6K\a\n)%;_"\"O&37t&*!eaf,a&aQ'(s6eSjg_4BYXk-"(.&P%QZr>'-is&HP@W$>(]mg*a6Z*C7%j>hUr\\n!gnSU&7Hj!mZqq*KmD#JC.!&qBS.e]1hJhZ6f[SShI$MS-LOsr#[S@s0C/7'F/4LV%8g#"0,!:]QKuiHhMfXQ<_t\K4*TM63!=ghtUaRuB7]+6]N$SkE_c+38/tPL(?qc?_dilhiQ<jdO+CJB7'LVHB"9n"Z5lCruT`g9M%Y</PM%LE0C*hk^s(rqL9>qi^/3Kt,<P+qFL-IFf]G<,k-V_B,VN_/"^`JUJAT*)$*A((4'$p>S%c'k*Pd2Tp!;);I.V-/B4Z&0bT%$Q/pHYW#u>EIpWSng#DD]!0i&<id:h@&-%4%4DSWS-=M>;>VVP/->,UQ3X6/@&!5q`[U.c0%-=Ql0Xg(HA4n(L1(=%MnpB/&>UFP%(I0Kk6uP)u.1R:6XLE_78C:>q'K%sK\A4c'8qP/oqnTP4^fpMPqfeIGUC5B:&24ZH1bK>rFSHV.Lc&aWAPnWo\Y:XhFf:+/N9ub:%92[%>'$!In@2qE1((0A.#3:<?rQ6C$)*MN+*/5R:Y>.kM-5M69i'=.Bd"%EmdNWOP`1_pQ?B/;'#I4Iqn^q7@Q5uV=[tc=69E^rl%KKMg5,`PYmcnp;"Lj"H9*hKC^0A,mOVSF<dEp!Z3Lo$4VTns&@[\r(&X&O\i;[6Q08s"-7%E_ZsBXZ8<K36W#UBiQ*&4tI<%4TCA%3DbsC)hH^%O>RLdV@'$IhO`Jn@K@*W,aoI=%X<aln2r8q3uE'i>N]SLM043rBcR%<E(.HHr@8s-=88=W!ocOoX73Gq17G/2s5s\)%LOYi@\NO$5./-s(1b*69%7D8hSF7#*TPr[$#^d_)7pb)CQt1`I:7C/1GO[?Y59^#e4MI*'M*+7og>0f!<3r'O]orqV]'/nVKR-B;%^n"&@khD&*Verdu+,FVLjbEKcH[5-4S=6LN$Wfo<UK:ie5%"KT-tp;(%)i&4H#*FQjSqS@]TiMU4SjY:8#qGp)#mmAI^5W5qq[jk%qHK[X93Q01+5al-Wr?/sn+#@_=%-7LAFi()r3G?iQ\tq%1&k7Nnf=O5>Q+)GXmmcs6+<h[B3c;U%V3Ij:'S"7oKZ1oC=V0tWRpX^%ft144h<&d$Ee:*Si7aTr^&dEsI'N-Q6NXO^H[u%@/,6XPGCd"LIX-J/RXIa(]+?t[5FL7cp0F&7q>odBQSA,8b?8WIZI*Sl52FqF%:&=3*['ZE.!U&WAk99i`4MhgpgYdjX4I'pHgEWhppKPHiX_Tcjp-R^$!kYg0P!M%)!FAL8'?i@c&%/iX#4n_CeU#%tN("4Y?eQ0G%7p<AC4B&jTc.%7%2+>i)<XY?5C2q\jFo&dqg(60r`_GktD:eW!9ag*C:;8Si5A_;Zaja8rPefT<CL:R>9CNY=#C2O@`"U?6HFnsR%&j>P>2:H?pS,j>;gM*ZPO&WGo,?ZdK,ssO?B\dVA[iVn:.*,%o*g;k.d>>n-e!`_cbSh;D,EF`<_1_>ad`*Z\"U>se7m"is_/]\P%]$?fR>#QsGS.l#"\q6K?4+>HB:(<.elQ4*P2!YcL%&seLn2lkdA?]Z\Na05$f5tWtDU"=p/M+k;_W7`HTMlY+LLKo1]215!R$I)1%%EsE+%*X4.?r?f.0:8a&4gh(EopuUQajC1W%d`\#>&F;7Fpn."LCm%dO6.FZkbo5C@Z9+Nbh2QD&,r]Zd?>fN<1EaJI(LDo2c?]Q%FrRTIOS49(^Lt%XW!urnKXW#V@bXaSFFFu:9s4]3DEVG7093mU2VLX2@=VV7ciV.i%Xq+ZTB$neeha<Cm&1rO9O5?^DlQ/SA),"E%:b6?WK>'14L%772LK+ut*-h3C"a+!*3l,:=h^Sg(g(j")n/9I3L[gb`9QU[p;F<I[i+(/7qU@c_N`OjkJ07=.fAku>'.]ugAokam%,l:WU1t_I%=,a><hIUUd:Sh9egSCk%naEDf<re>D:&l9a4`f\E'h!V#US@*QSDkr[H)"th5bQ6jZp=1WPbr\cT?o0mm8!?1RY/.+%XM@W#/$A0*/2<h>=H8st2Qt?PBP$pl@$*q[/ThHFCD6EA9i#m`Jj!sZ,2t4sm0<oToa[h($g([kOB'Jme?1h'RS8r%`8%Q+LRir3%>h^RI,jaJn"+n0S4'^<'ONC>XR\O7b`YkqNq-VJ@^UtnH%i5#4%Tnj2&9"]YT)>@O*E.G6Q#]gP.P_L;0*ZkJj3^l8F+tZne%U]u%;".<Y7r+,7?'9LbJ1[u8E\]+SoJ[A`\rIiqm\\jlJitf,YGXUfB")Ck%4=p@G0>.\X6lK"KLr1e]dUuJM'V'MAfK0)[bkm^7e6\c%$>^&n`uE:^J-[-^?*soS%h0'VjJI#^%`sC8J03%k;nP!$[u2ZHLIQ]Yie[!8"S[jf1TK:*@,IC>E!6V40HlbP37**a1\\]1=F;gE%e.BHL)dH1)HghJEoE?b>$am*\l[X2?)L,2XnkHNo?0GSMEd*TXnLC,M^@UE7^he>:orYb/*E`++p;)AA&P1;V+60"1#S)0R8aa85%&@(aNO?N87I3SXp0a&h/5q<mk>E9(Aj)<EJm(YVu<]@YZ1r67JRF7:f\JY,urc#LF:%iP\^Z#`0T_rd7l=(`SN%,oN,p"F)O$cX!%_&UmHaNlsR`=b:I#9c8<VBN/\32g=b<:8<=\?gor)f4MH#c00K?sQhe9N&eL-R^\h>;@OKnMVdSoaZ5VBOU(R&.@#r13O%S&7H$U%0QE29p]kaADK/6b%_R@$Me->Dl`YYQg;<%0og\#JDBU:8-5FsUHNL6]."Xq]If7E\$]Fm*o_3i>,Je$^*&'P&SZWRN2%>r8RF^U]%]AD2U1EGC0cX]r;?5Wf/d)rQ5'O3^XH:,/snfK+lKQ,)amV9@C-Ucf`JQRmAOU4HqTLLo@*,RMp&fJpS$W@RI[<d>(C%EpP'BU89%K/fi\4_5%sO27LFFD[-*>^JA$8^,"cZg#D;NlUWMXYSVYBn:FRNTdIkWniEd.015D@_V!qG%V@;2IC1?d7Pb\AnG+#nDbZ:=he%U%U*iM:5c!3%"+$&:h^Im"X%%'dR_4::8M_j\]p=P?a!_<tCu_YSWO3Yd&eZ+X>"r2$5.8d$Z$K&#)r8p,it+B/H,$B\j'_uU:<)Lj%br^'ZB_U.@FgO'T[WYG/26L9=X<\r;#AI"A9?X@GEV?'$Rbc(NUCOotEndk@,V^))<],^(P',[C!LM5ITDuP+LZs(RjGi+QEe(ck%C?OD*bGN[4>>VQJ)--VeZ41?NCN8n*Wo^+GCjEpiZ)$T7gYsK4-M?Aef+NPF`?.;/^9uQ8L&XnZN(7R/dsK=g>$1Z@hSq(7GnmuE%\mbSa$U=u+P<TIONbE6AW#!Z%^.l\+f%"R'GF8m4<e#$]$n5)H3iGU(&rs$D9f<6]Z4E@<JmU<ZeGjYVjP)rihB6VUjD.8#RU\2B%=FRTg7#>.RK1Urk37j$g7Idm#Z'Tc0E_?$<h]rBUm57b-..,pVfXc(d\[sfq%2hPCS"sQ/9T=eEo?p=iJq2Tt.S..?K19A(!dMcF%s7aI_XSEQ51q;)4Mk72n%7[eR39"D.Yf2]&9oc&j2i0Zf[aokZC]d_FnhP.8"AsZ4X&7RTB5QL)N_n-e<;Q&_ke9>)>bPt-Am;4\%[1d1;:u9DN,6$.O7s]KN=29=P%_DiWCK:9!nf%_<lI\Ce6aUj[Q!6huq/3h_m@NG#i*IbTOWqglW8s?+j[\$K9TR:8lYrLX<hNQ4%rG9-?H3P+D?JTU%E>10g/@A>t2IZ*aD(tH;kk/BXVT6;%W+oTA0A=N.Nq];'o"?eS$=eDbq:&VV0K^gk+NDTs>Li&eqCiuQ?lA.@%8[uL(&&5^MQ7#[LpHW1[NdL#c43oI+e:--pU<tL9N`e6pAAgRp'U)1,[uIkUHPbqT*o7t<7\(l_EZ;$B\)mFp;=8us$K_dkBI-dW%),s<.T5b)JN-6tP9I@;%SqXg9*3+SOIa^KoiF6#oIA^3hUdN/Ql.Gk7-;1F/_0:SK@2^TV2uA2Q-(Nh;Z`CN8;[9olhK)7>=2C2(%L71M>0BQDW]^mt=qVbgdEp@qem0P\kZ]PH)G2Ck61V?>3<oVNtLbrXU]r<tAI:KD/Y?b7%3-iGL(p&Y)NBnmFW4-cDcTVVIFE";@%'72%'k[!e"=-(`+:>X&C>(*2D:,-VK'[J,f'QIc(_!sU'XjQ"ZQo#DfJp3p2>7Jnn1'#7+eZnlf?Y+?'@>^)>FdOgYNA6CNWDl^o%d>gI1FI9G!IHsMMk4!g@\&#,Ai4AGg=*GqfXV>S"'[$'er4`(G]&)/8Q*lf]0pP``k,)C^*eb-he8ZmI?4rqXB(p+SrFDfRlIhrE%?c'p-^Re`R*Hlo1q@s@VSs3&bAU,F5MXE,#+p*+Y3VbQ-6O@(6a#r0&iF:2&?],PH?YdMIj:jcnKUf]Mjm[Y`lKCFDF)h3mK8\i&%r&+(FhF!^jjV7\Ddm@dgI6Fhb(N7I^k\D&cQ%W)I!uK>geG"\CjI`Jl(#),`Mh+E:3@V)Ioa7_+E0cD=NbQ",4[uP0Bt[_U6XT@O%=XA?Zke]c?`-8P%c$VfacdC?4k%X--MCqm'&6YF$QV@;l_]ltA34:]ST1rDU2h,g+>c4/B'o@Y2L=2EOo\oKN/[$Jk;XpS&a_'TK%$?.$!c]f3sDjBVYDF?MKdgm:,(n#IgJrq.A_P'#em*S=fZ?WuV4C+%]^O@bW(<mk[gXg4G0l_V/AO6]KXkqch47ke;pKtZhM%T:'%X#BKK)E66.T"Bn-TI.=%n/Qqr5=0/\Gosh,5'VUM)nJsl@3&5.j:UhHSIK2S@r@E)$ek`2GFTq"o(C7qFB7($Ou$l^#0eNaXM$a7%Q*&&<B$%PdaiSb^PMB9DXR<`+l`u;2#/-T.T:p]si)c3_02fulos5Uj]b?Df-sreCc/&&;k3.o^H.ahAn]YG8R%kJpj^5dR)Z'c5%pf>`%D%*iHf;6@L:-5T0._S*#Dr#7V's5*mB5X_PH"[*N\Zp<SNAGtJQ967Wbu&5Z]6f\i&Z^?Ei&Y*H8j:;WKQqgDlrEbF!ti)S%e"l(P)_(=T>.7*sApKGr2oL%g*XenC0_1n\(&FVM>g?0rS4&g&peH.G,RK=gJl5=ud>E<nZo(HRMjD+3&,uuj@q6bt#.H_%:t^7,%Kp547Gh,QD6JMB#1sZ>p<j@qeKi%.2l6WgC0!8S'a)m"R[_tZ(dC4'QC'_a2mP<1KmrW%s!Sp?jh@;,k(7+C?6fD&,34)5q9;)V%%U:[dX_?00ZY7nHCFLuf;MId,aB]UA%%)l!YjO!22_aPtnQ['&e98QbaXep#kLfXL37!<i-7#-,I+hE0KL"N5]r=HFVIL,K)UDX\f%Np)RlATgH,kFmZ-Wf.E1$>hD$ntE1frKGV%`F^^/djF)uH$r*fV/O84U!/\1(s:uJG!`g'c<Y,PU_=4Y,l1F&:lRSlNjn&R:k"8U%$_<S/4]L&q@RB7reTpAQs1AoS10-3)S&`c7N,j,bcA*H9Rs1R(,.eaC?(;WrQ)i2>W*7k8%+Pfp(MYK5]:mgPoh3@c8`i>mji`ue%DjB$^#jnViKlBOG>$-s*9+0/DebMNo]hL%'\riloi^ccqd,\%S&6WD5fCp)7j5oJkC;#&)YdLQM/F8bU0+7%@=^`KNE54$kh=!3;%%e"R:(/?>LbedNS[(UG8]-o::'@>'re6H+#/;,&\8hCmjRbFMPoQ05h(%0j1FRm9iN7(ookJ@T1F"t>GCtHQZ]lY,e'Y)sQ8RDj6%G);67KpLF%D`jkriLR=<S$6qGIhLTi&D?R3ARdNd^H6#D`TPK6pc9C!%c<28Ks7"Ic*15![)1/=_/g_3DP*ckiU2k.>?j/@XtD?1%VJD+[LKo7i80'fGZD$m@U3QG-ZFG&(#q`"hEd;YkQ4f*GnOn&qCpgmcGaVg_/`*U8j;6A>nEj]Xkb,ZBGj=u=42"lS&k_gU"-L[Q%ea[&nhI"!TON2)t_Y'^LAE.oK.j>YW66oVsX[eB]2IhjNTA59.0D)Ck&'`*eV"1U.Olsc_I&'[m\!B>qQ!%:.<)/dC9<HJP__7gO%f(7tidZ,qK"-KE"GB'j/FOb%X'phr[QYoQ>V'VDRRAH@lhCc4$bN)Pc&\D:Sl<Yg''AD0j137H->Y^iemZur:K3@%m.9)W)G?`hF%Q[6$Fr6VVh/Q]LKpi>\>mr>nif\$K-\%K*dMC,C`<Kn0-p#tPEd#2MAWN54pBZ4Yi?!*!@h5TLLA\W:'D9;ttmE#S@Z"7&ga4A]/%I#L9Pgkor5FH`ubMpdUHPDr3$C-R+aHSRnm0n$).UVpK-!kT(B?K*KWV;(JHGH\Z\D!s-=Q!J]5><,tEe<Of:HWV^Se[q*$IXeuX%1ELJpYupBW:'npM4LMdtMCVIj21E3<1ujom=(Y]CkXORX7m\uf><(XFOk&Z*=C.i0HcN0+$0-1de'70Y-fo5jp%gjJYEkgEb\F3.%\4eH\MiC+KZ5$1)lNo!`*PYi+%[pBBEP^MZM5Ru/UI6>P<_r@'2afDRh]=)SV,B+[;t%LMab,N8Ab+i"@kjr(SF7eoqsEP"_EPZ<%Q8grVXU17H]9_mR5-1<VpZT#SoDOG%?po2*-3$dcU/>WWT[1Lb@[gB(`-s?]-8'&U,uH_"=eZAcP**HA@3@n"a0@LBZOj1$HRa#'%Sf9d\QH6F![Wh<Z<9-K7-u*f`:2Ll:-?YE!\>HE0OuWld8tL>h$np'aV9l)"-MBj*fr&mPccc4X]stR>59JGZB&W<6#Xk&f?96AJ%DX^<CrcNU>\QW/&1"u;0Qg)qV>rLPAl*94o^VK![km2XMFqS<.M&O4EXKM'Jb)3jV$09PfQ^-/0>k+obaH`4A-MJ]j0C^Q:%*+:2%8f$brmc!)]^Y#8!I)RpCphg8gQD9X:@:OMj,93Lj7_%,D*=M_[cEe?OfqCf+433?NdR?Ygc."\j-Z'IV?.`7b?dZ&Qf@R>:+jaBH%\b0a?hHAHgRn=fd>!-I:.41V/VA*UPRjoo^LT/GXrc5$:&sjP*1sBk(Un@=>I(d2%TaH"KNL/qTdq3(d3k`)3;Mf63X7c&Gj2L#o%AnRa4[oRPTk16D-]&,P4=P;GT]K$&YDft]tdWQgsDJX53S+kYbS\tB6RU&q%c&O:AXI\G'FsNYchC1i;Tq+fVd?-a+pC2s[DfmL-%\ZSMj[EGTB]WB]Gjc.9d/=uQ>nj/$bjTdd^Q9/\=*f-VUa")78U(4Z\KjJ[^>qP.jPf9\P7H%%&]?:+E19'&9eg70aFB$>_/T'_i%=]gMlcL4(t7UKk8B9t9D]@k\;?-F@*NUpuNUt<kFemk102Bb3Dp0u&r9("l@50CRWA*,Be*i+"F]\1rNWb8b`>:[tPhJ2RgCJTi,%T(gNKbNZ]Q0k]ppqUG'7Q55ML(Q.n_rVD5VFV$^Hm2g*#4Brjk-nKtae9csJ_7VteI&,ggjKPj>XW5nFDP)u!AE`#d9:+*t`H.S2%HBqL'j#CDH+%ol$p@sd[+!7sMmZ`pr;)WQk4:p#am6Z<qj<`8Wc;SjCSDW)8lfT@:&&$H=IC4PSA;u;l'/:C36r'e&/p8"9b7eOC%oJ:u?+foOQ[>rT-$Z"JEGp0Y?<[p5%`&bla_Hjf&'Xp#Yq=WrCZ.>tAc<&.)iH+hg@/^##Y]G,.(/p2#p0j/t33$m;>u[.Gc^-As%^]YjJ;QY7oGp>]m0$WZ^k).p,J%dt#7oNKs`_lOmrj9aR/,/5'lhamY\-]-\ok(md\:%:\>rQY)RFpIM=m`BI*mh<MgWDltlRoVK%%c*s+qT[i%WO$^h\kap^,58(sp!Wg7C#SR<-oUl+7chJt-_[$pK?gZj5:4_&1QQl[P(,#ie`0F[B!;6!DNg'XLYH-<?/-sdWS9KN%Qg2gj^7b2onu&>6=[$3(W*JCVk"=m>/0+C:!g.Ms9AYtoK0?WZXk''oVe*`HZn?6+)RE5D>(6'4esbjQ=d@il.9B:tYPQd=Fbd-I%'YRR0.4dX5)I4ReVbc'HH@Du=;/\?d;ePN-.K/mdrDmhY++j7_biR#pc\8uUla]sKgMD[=bt@"_On_E?\YD&A18dJ1\kd(CKr`d*%CM0EhC->DHrUt82>]+2?ah)_ANS$'gq..h(hk_ucH>./i6P1^):;65me1osVrBTF4GhQV60)*j!1INTJF!l6_@6Uj`\S`rr(%!S:%<[dA'6-3@,m@]%Q`kptKP$u"kKi_8;S)TtE\Bn8<QZ]fpG##X]Fd,RY3Ri:?G^]:3F3/*#D*<#ppS*Y+s!e(g4%n2?Z%k\b2k&Q/%Z96dgn)UYFg5R49e]*f[nih^]ZE^;0o<_Rcm@uu=9%Hb=TQOkAe$G2\_^Va:UD,hqDL'Y`De0NJm?=C$pr;FXE_=#Kh5?T7'(V'N%CXq$PmEg;?Zl34FlY<`;aIVd3\FB@?H#Dr(fj6nU><^aqqdhs\ToOd3cok&6?0,4gXV-ORWJBQWcGjUs]@/p9ecLu)e7$F?.dcuk%g@"4ac3C$Y+NE.c/'6jmmF>$gQ"q4t=0ds2r[-5qT'p7Q-F!nDiaEYuTN@1mET)@I@2:NXkN;>H+JMhlrR0?D(4!1-?_$!08]>fB%@e-2KHL(;e)ia4_c?_G&MCY`iIQ!Xq<!*_kXR+Er8RJIR?h,U)]NVM]oj55ThiL4hGZn"fjPe;-#5F6[5;;2:qP!Uj^t$j@MD%>;%6?lh$$Ai`VR_tCokm&ElF#74KPhFN!]$<F82P^Vl'UOk^T28p@SkX#!Q*#uCE#kZ%[=PLQGc#dh[mh^$23g,n`M[kW@D=!F,MUBJ%1OdrB%LYo_B`>9-e:*qu7(CacrJoA[0=Tr18#\?ORlC#6(jDNmHRp]Eh$ZIe^T?sl1f7E-dq^G[QTWu\-<<"7alckD"P8EkSb1c.%pbK0*Z4NKTHad7)Mbb9&nVrILm5e5ShrAU`g(=<uMd$K4P2()Egh@_dBhN?^\:i+q(R7@>]FQ)5C[/o;2AEn\d3p!GnUPu&<<<c,%['7U/lhFM(_nOj7bT'a8e#SlaX#'%0g&op>,2ug2R8ll4Y&2nk>]+GT.aQ-GR$-ljTt_8/[7>d?o"I2:qnWEVkiNb_UbVX'2C'f6%(tC#D_/M?gF'0tBcZ,emG4:Yle`B5f/"N;Mlme'#;R'Qr8bp?rO]8,iTYAA%?\b=LjX,'A[,#q'A9$uJRm&Y5SI*Q:\a'gng/+f'%9EjGi\lE81X`3RRU(HTM&BR%tnI(bqg<]2SB)S6&5J#Xi'G=O(jFDJ*X)Zf(+%B*f%(I,B%\>5gU9;;4N,SEb=f"^4`'1dC+#uZs%qUsk#`_NPd>EFa>^&DeHN_n/VGDGZhAdJ?9"?lIAe>6#)p!6#X)dVaIdWP!E-;u*H<YWe8<sc+U.<csO3a?28k+p%G&p)esi[Kd2%ocU7#4nG["q\DJO_Fs2[3dHgJZK^Yg5`c5I8iBsh?";tVL'BZKa_b>oqW<*Zi#h;$_j_ll#Xi&9g51u.6o5bGF9AG5M!Fi5nTqX=%ou_6]g<4US8tm.u0ukLU8aUY[C0L)k*7C.0gH62Yn*LUX8nmTa/Wf&"(h0\Dpu_S#^,'Hi%eLSIG9_kn\_^hm,o*$FPr3tGR^G2T%0(3gYn]7Zr>SQq^CdpCt$:Hf37-;c`7jkWX*)kN:DZ'oUhA8!0`ljN$!#CZnC+8;AgZ:e!O.4>@=gPHoX`pf5K)/\`pp9fh;ED<?%[)(K=W,Ur!j%b_D3_:F-'ZhM^Z*L0)V<*IU)fV+f5/op3$jPqN[K[qpQ:C;re496P6^Ga@H3K7@cH*(&bF=%$dn:8=X2Xkb-:d+.%G)B0^XWYtWW(KoI37pr92_o1XhaOd!<n^UIimCLhDXJ007'#'nI.G._^;B5ABEZZ<[*OS]BIa0,'q%$(/!>%_J%[;Je^YH5VXA\Y%,ARihGhUe-<P.3U[$GkR5/UAobi:TVCM*YFS+RB\A>.lR)-f<T<Y\RONC%eDhW^_+hL=rB/S29scfEmtqi-JBcc2CdRN1sO8&8-?%@,`6T=,8f:hsAWB<-T,,H5&gAP[=rI\:JXP7_q5WDmqm3pNn8,;!E?H5&MZ".]pi(3t<#b:-C#0n9M?fm.Bik\ZcJSl4)0:6&6+.%?s$Z#:naD3/=<AArH?B#dh"RAH@rC:^L5>Q,7i$"_rB*b(`#=]_%9^M%TN.-moL?;&nASp(,qpS02r$SH-N[/P_mJen;T0]TYgjf%W]V&rQo@,]GHq]+Nrd^E@uoer0g$Cn>7Bref$L(g58Y*``C5P>atQgIgn>dk3<CPIM2I::e-lY6QUrc20Eq"F.8]Dm?SKX+[P0'2%E-<1en:NWb(tR-M`J0bXYuH#R^gkEp'B]])KYXf7"dqP.3iAXdT5!'JM,IP=X4@crXZYg+(_!BgER<#!OCTRIa[L62i0LTEcJtDd%:Eph3a'Nas-Um)`K0TRK<bdKD[cKiHUuf8TCpYP?"5i[F<^*#b:F-b]%Z8o_)HFu*!E1$5KQ*abW(CXh=?9_B\*h&YTC!*s1nV?>%"R8VgN3[n+.QZ5)Mp7qmM"&^/E\s,>*ugL$nC_DgjK@9SWY0N$HbZ`MDh]#tJi#Yk5!P8+]@C1t/&tla3.r9jQOubOTc#;GC5TH_%3LaR#TnDo=?=kghPS729E?)p(NFY.O>-IPt[bHbRM]p.:YIMi.aGAmC\BPjI/(dRifX:fu?>D"]`(.]nH>OmfP$+uq)G_+X:iL-\%^kXEF=X@*/(gm[0IAaF/LueKREBojTLueKREIiobaX%-tU#3q##Z&'Vb(7bg","NaR-b2p41C1%*iM:kK,k?u2jJ>5?)qVL2UC8W%QQm.U)qk>YeH.Wdni!,47iJf95c=ZHs.l=)1XZ,<o3r7Y5e&<0l2#68_FO%Xl#jJKHo@:/VQpPU6cHNT:C3N2#dUm88&HArCKJ.&%E9hV2?95e_[I5#,"Q/F0o#0KQW<8#.5u!TE'X=3TP+1is1f5":HS5!gf:^>Knug4/AV+/MmtMe_\PE94DBC,YFc^Q\\BM\[`:Lq_%%ER%,4OIWAP<=hC?`5VQ01?pnXq%TNJG\XUQa>7?6KLTbj=8L6[r7_bc?Vt!'AZbr>eAgNp*gFP];;NMA%UUb@iXOmS6V&N7>u)l%gHLhkaFVFBZ2a3R"-LFP%SLgtoQ-@@#N2p!pFG3=VVQ`r,%=1^oI]Ro_gV>;^B5Y>FmI]*U`^#7*Z$F_bMaC"8ocI)PuounHV3l:%\DoCh(";@/)>0sEO(U)JFrc"'lfE$8Sr@LX+K$I$mh>SdQSb-?4j_JtZs7;$gJUU>S@#)V(p,KPA&Q;dF_<ZEj6b'goEHK\)u-<.%!Z8NUA`$a<H=(t]'1('9#$Y4mWl.3hDMa6upfJoLG<>G9O!o9M],_12+SW=Y:F2_[h0PnVEI3H1Bgo36BSj'5-GI>s#::qJH'BCo%/f&dsMto7AMD*+UQ<m4I],.NH8eDVu>T6;g*GJun^UA[_A=<8$Kaj.B@E4#F.]Zg%SJ4E2g":G]kI"EYPr4WN-b@ordTJ;RQ[.RO%4`pA`mE3l0<qHjlioUO?J=ij=f65n+j-fIPC_L@p<+o36-g4N<8]`Te*TQ&<VQ_'3%$/jr)'q`SPO9-MrU/ob+HibmQ>/MIQYR/Q%/%$,!@jpJZ<@id>D+&TlK\-NBUNq]rj>3Xlo#d?AYCTVm#ef"6'pRMH:)+uQ+rQ3XM05r\\i6/@8JIL,$e`SidK>S.@UBYWhcGtR%Pm#srj=tS/<np$MS[L>fp2?TU'/,&="rQa7YG?B[Ohn/QZ&pD>8fnQ0/#FCb2-*B%C:03mpHj/@3uES$TNUs'+2]rREMG\%P#[4\%h)p[r,0J0<cl2I70#/@=B*"88(;S0Ga:,][@a"a9_n>+UZiUgmlUY\I18VCJc5>C<B+c&*,>N3'l!uquY`k53*q.I\04]Ad[Ze9e%cU2=Oj#%:a..Bh-@:t3#h552o?$)WFRtuYKX-okRXU.JZ+IRLO$[EEkG^.='q@FHs0[g?0RC^=00AJI0PtN3s0?A_-D=_KodK$]e%(I0?(gVC&k[8O,u;If2fmqa79*G"n?)Abr^MSmYY2s;$WDst6#5I?VT%[U9Ykr"*D]Nf83FuHci8g"0b/1"hEb,$''Cah!L!&CA#%G5*+uR?Qo+9K!T#glAK\e5KF_o"<Lq1QN;$`J0U+9"]BQ49jprpFI=ib"![^!4.>s&`Jf3f#\]n%oV0,)t)eo0Xe_f#mAFhJ;MLR%2]OU?-?_!OY4P"@'WoZV]j5HfZp;iM+gblZ)]Eh/0+"IMD'3U0oo$J.'GYYNbR3`'s5j>&+nfep)g6#O@COUgIS;R?\!@Ajk/Q]Z%`i<.U$[7hfrG#hdo8]M6p]]?ne#4n\Dn#/16GM0^>rD&7aHXkPUtg@#1gGV>;PCY--CorM+aoTf"g\nkA7"m,bpj@N<NJhjV[QCO%=Fe1IkUl7>Cc70drS%C_\?H_\T3p)(A5f*s@&)\FF/HFR(NR*8&uCf`h5k^1Cd(JX?E/\1V?R'/+>Q1`=uh^(@Z-@(\;%p7[hpaF%fsGj.bGMaIS4=>82i.&b=Ju<uP_VLgSu@Llk47't;,F*t[=klSD4clOZ"8bF/F=rf.0H/0ol9R\ZGI'-h7_]5$TofZ]m^tC2p+us%.PQpo$!f+TUd@&S0=?"*?EtO'En?AJ,.;\?^,Hq%,d(L9_A02lL%=@!`B*[6\=jnt([5bc3$l8'7B$GQFLc(s+qOPcZq!$[I1G,Q%Bg:!O/\4du:1AD\b22"*+poWbMRN&Z+J#[:?%=E+LQRcgZL.FUi]ud'5nI%-LWSu62Qq'"s-h!@B)B4J6Y0cF6q0>2deH9=4I-@:%>3'kEP)pfQLHMD0A$Eu9g)"OhAlsnn$"3bXc<&%'PQZe-F9.f3)`0o7RlS%khXUYU3RBJ61Y&*_DV(e2M4mA#o0m6j,UH3g#FooI%p#nGu`#se9X%14UV0<`?E6@3nO*4Q$b)Y8:6Ac1D1:DWGVf/D@0llP_A1[7ej!B,D3N^D_U\H$jad9!ZikrctL+TLB*/i"'Ye$/j%f!U?86/i$\&rkS6$@5ct5Z<u8\bP,kA-U"^YFX:M*iuJ0Mo^slmGoJE@Rk=E$t36Y=4c`k_paE(\?P%\ig\B<npMk$nV4GB,FsN^%N0kbhg->>KLGeI:nLT*iFDm7\OAcCBb+4]\QM,M\G14Rl;,6Ss@$Y@)e6YI-6FHBQ/l)nS[;&2mCTf=,hC7cFZ<''R.JqM+(9\c0%>,\cbP]4Up0+`CKE:RTJ-GKT\e+NMChmumIITtj@g$##R[F:+@/V&8Cmm.9%*Np$+T\(1&#n6A`I.=K!7d=_eWNk6q`bPNKkI+\t%18ERH<Eu]PEicXMVn.$g$+'t+2L"p""n*jiWSFEI6H.TuFVZ&3K@Jh*V,AqK;sHt]DC3G6mcrr7X]/)CnfU)0<B5LVos7HgrArfo%O)lIHD-7_9\//$oJ2^EJAp9'&C2`->93_OicD+:L<#[eF6TmV0X_bS[9mcS>=PD-ioKk%3%t1P"Xs77iC#=\2j.%b4E$mPeSdtki%f&]`LN,\]:$'&GLkXre5EQ=95`Jc<#D\PLTXQXG2n.6(?,]0L#-!`:k-S#;hR=oj@34@S(!LHb<9.'tV.WTs?&KW>_-1irFCJq&<%RI[b/Ro1o!B4W[d$p]])Sp@iGT0kT%\/p7;Wr0f+TA2V7-D>[O]c63_:`1r&l_TP6R>\?@;(SU9mCh!Dlhn/elBafr(N2'cCS<(2%QZU)3IJmT^#)]^u_S$qfgE93o'\*-e3=:]!ccTk"[,0FTR-g#bpl"8XLfCED%StdFJ3H]ZG:Hu$S*<SfOK-^%h,"1WOM=pU4R`l8%d2YbU/8*-("appt%G'g"7_TI"7IPgs`_hYXPe@ZQ/l1M#GiR(gVL'=-kiYsF]cG7JYBNbc@CT806WLuZ3P4b#LXb2&mMWK_F^>,O%Zn0/:HenRs*+Cd0?gJF`j=\DZJ@gI>;JnXFmq]NI.mCs/7r]-:0"qZJ<!5uG;r.T%4*A9e=VT1<[u4__dY+%U1<A:$YdVln*/CsO%HM>8cFsupo3:n>i[oQqm8]kO%*)>5)G\$`I[qh$F[9%j]:04KirI1rB18G3%[RpFI=u3@M<R'^;;UO74B![QE#;XN]n"1"Dp1\TT%O"mhK+0C0OZ_l+OK`!OJL?q&tC?ufg:=DPEKUNhHhAJ@ZB(C#^LcD>a]lA.t>m@P&)7`JTr5M+Ic9Q[@@:XHsr8;h_GFj#&`WZ;.%l.4fP6dMu3S0U;=23![l(nIGJ+g$t&To08,#(-q%0re;tk@s3QLWha)(/;Jr5eS.dW-ok5lt:I!T#8KrL[N,?:I^`(m*Inni%:aN%W8L,.F@2UENd5$Q5/H^Z9aMNW]n&uO@d5/k_X';Sq^q_UL/EmOD<k2.Y7:neZRIq*5p&/Irlq^pga3OhJHDX&XkhG/lm%Mg+9XVD%_2*Sg*9b[VXR@=g1V5rJ[mh:ULAs/qcnGLlR"N_s)HK3ocTu/]NH8X;NH-&,=.=Mjp(=4t1ubsD2k>S<W,\_09YgKG3dO.C):!44%D`8_,jChc[9pS1t^<tLJMT/Qn?'ZJbb,:7`ZVKBSl21C[@H@t4"/TniZZkeo^U%A+iX+e](fK$D8o!fkrMdJQpn?#t`5f94o2+tV%%tbe*;<ZM:r7Jo*U><5VDh@KPEU+954du543FfmYQBtb]Sa,Z6:Km)mf'WF-*N.h4ifQ-7qlGXN89U'AI+&6$Z/0P_r0r4&X/^MA%Z/<-*mi:1?<4V3QPj+a=niQ$/%Sp2Vl`=9gb$[HR4ur<7:.O/&n<S,pkc*qV6mD(=+n5"_*G>"XYn!KB"HP4gX(t#ui1;&^(OEK4%2u'/N[=_a""XkM86#S<*+5]u.ki]ba8^=AAP!Q<pW(Zn*md-k!%sFDg#fK%sJd=N7Trm`tWnp4ciHPQ1%DlLjdl&=$fJ?>?AM'k@%ZZFW(;uMR0B*3[8?YG:$[pQ;5l0Y0T]j>Ib]!4_?"53Q*4/4hR?LJ*qm7&$';:9Yr:cA!l]AD"@>2SYhN]hU5s"WD[[(cjP)%6CW%[:?lm8_:V1\kV:ON%-fC\Y6%"VpfNCq>((3p8u^8Ff;C/l4;Kf9"g7.;sla3LL11FVJa'i*ZYLHg^@MO]YBDR+tgUK54S11Mp`NK%(-bF0\*H0q>uAhckrS4g3-DFoN>0'3m)_k"bVdc(&65\Bf3@ZK._^2JeO)';G;GIc><WE_6Lh1t7OWG-,DK7b3o#%]-:@>&H6KYA%FJXX'`">G>D-fa&n8'Kn4(Z!&pBW+D1mmZoV_)'fBS!eS=uZ4*'qEqpga.+c[<*O#RTl7-Bsi#p^N1N@[tNRsb@K26@4j=th$p(5%A?UpE9kgq-Y"3r0=?FpUj'1.0'X=8p9,"p5ll,O2g-$T\Qg5IEM(kuCkXpSAG7qo_db#1V(S=2Ecjeea/(F.@Jhg4M\^hL9e96*2%!P[]b6tPUdEU\8+29f+p_RsXk#K.NZYY]kB<-5\dEfhkuk;4*2L1D5tj^`mQo00jnPGA_CIXEX^=rO%C&'>`%L%_<.*rogFO7g@t%fV(SiT@fKq%P`.R#OWp'C!b[TZa=m3(_e[d)0R6HgC7LpkJn*Z]",J]T"a#&2eY<RAi:tEb16ZWQ,RV&BKWB?obET8<fY00\ra%5%Mu6`EGher[[Wnb["pMS_LZQC8HpNoB%JiKR_DgZ<#L+Q<QM4"nX)Wan?1+:ac5nmY]KAM\3n8"Hn=[R[V9CVnYK_E/rtl1`HVMuM%/[K_eNl.NKJbFDMYgUGhBCA"8gK'Uti@EhL-s0WJd-(ZPODW*?[Ok!PZK*-2a^N9u<]FacT=OZp\#M^q,QNF)T5Wlfp5e<(21WtX%oiCE,)hj7UJ)64A(H$MdHT4$jQe,nfK"g&#%BlWqc-<[UHM@?,/o#LO>^ncDc>W?sf_"!aS\4&RZ,\WEhEH<g'/S+\?bYVZ3qq_*%LSBocj5YV2523_>6"/!R(N8?aPBXPN4LT5I:RF(Vn+.Ij2QhPE/8TG!p"T(4DR;=L0ii@7mVTZ[s.$j(Da&F[(CPROe>U&pC\2LZ%o-g$`KDK\jdFn^^)uRD%q&j0Qs*Cr4C%V"[\,@N%BQU[mUg"XbX]\dbH&[.)QTrd+;,GG0ZeT6dHN!?/W6n!$m@UjLq2N+WqY[A@%\@ufqPZm$XG@#'S2cag<HdfV_"c[schT$Eo1Bib%h!]&tI^-;;gp-9mpV.(TrHS<RiE&mO0>,!9WMR$mW>0,j4.b/q*dtAbgZYR3%hIL&iT:ShC*\V:#\+b1I.8g*BZ+bL'rm0fmlu[-?hbM0t(H-TEph/l'>GGk#Rf0ha*?IC'q2N+Z)nVLant+V"GJ-4Hf]^u(iTpVe%jIEJ=)'-E(h0=-p7cufBc!15$gfX40PT!j*gJ3qReCC.+oHKmg7NLCLB)`q*b?JkK\Gc&#AqF[Pbq38ZYG9M@cBJ*E@H-\Cf,ps=%B6W_f?%6qUdA`@Bn!E4k8E#6rkXZ2Cs6Y:*AX5HkpX[r?2pc65P7UKJ:7Y28");r<JK#mfefofD([@Wgd:N!NhU^oCa-Rm%4Qtn_%mHo"jrr(BG^NtBe7_OhEmcgp_M1>6NT$1*=01XbEq"AlZ0&`i!0&)tXqXKIc`D?0kMgF]'#8`k6H@#Ofn7s5]PIH6A^%Eaco?#IP%X%j#.rG:dmnpIWn^i+_tGZ=8+m/(Mee(:@EIPt7ln%!_n.";$diSpKhV`T6Fgj7[/A)>M7op+O?5CU+k>PRjaIbmkfg?([2:#=X4%J!9&&gCKa^pN-#$q!"\HmiI`V%DPZIAh<-@euuL@Vk8SpF2^qi>ti"M4mecE_eHGar:T$p_t1aC`8$]Fnt*E1;eE4^>l=9D`fJs8%V^o#,`D>ABl0FKM;fD[g4t_5o3-fRn<;:QWEc*a*SfZ^2bh2-Sf1Qq%o94@O2sPa*QeA8qD%[],b_N&,3pEH9V43l#2aj9E?TI+e%r*dSCqYkNG.334frO@$E<`^&CITd[TJ%;no4Lao:WfKn=d'(]<cPGrH<]B`eDOe,12l^85Wl;qT!q?!%n#%Nh[#AM\7+%>cA8'lf%Qp:99?!XZNjIF^jQcA\4ec#'%8LrklK/=WRGTC'aOVGJ.!&fGrp#AVMUI<KG<FMXRk7f`kNn5U#l$R8(Rq_NQCLNt@D/XN9UQBOP%4#u%H,b:Q!URQb]NBS5N8N1C-*i5e/?/VV!4e%r]D`(.M"n7#J=e07`p]^<i-biM7o<#OMZ&Rd5#*3>bAb9?V.*7*prkB7+H>lj9%.#heSo2/UL<_!)mN=n&j9Q==ek_E36K).59r8uO9EML;`fralP:Zn4^l4,Gk5$_i/rIR!$W`Pl`n,)J2oCDVq[:HMlU)-WM)>U..%F#CqCdo+@?`LHb*rm\7J!n3mu'jaQ)l`;2's2dL+p"@lm\GdNe&)X/K6gHSVU]rVr/(\u`U_!*5%=3YLDRk`\;=hEgkg.?W`r$@R%8HT$G>m%)*]UQQ*?J0UieiaVmo3MV7'<QbMDPk`D3lK7MUif<%3d()J?[4)qfAeKe/GqP9S%q8Kc.SN0e'-2F^9"<o7oNX:$1qHU%*cu[AIDYq=s8"d[;jf7Tgm*%s>g;`;H2R9Q@=G+qEBSZ<Re5_+oiL7=mf#6'?Y`6`D;ul?Je@9<O'cb57[QD(r6oN]VT/2X&$)=*%6(H7sBpg;\HiU?5Xe4((jK5)!rm1CH09]DK)/(SaG8Hm_<E<h??`Wj<GFNmL?CU/$B0C-33&tjISslqNbTGXNkN$kP<ZB.UmUNQV%8C..aV:dEa=`9FojQnhGhrAGkbhm"ZYhA!Z"Ch&]2'rKkFjAf(V!/\pYM4DFoIr_@rUkPZmW.[qHn#ZYrGN2sYOW!Dm\pnK>gC^]%@sLH-30dd([_2D7Fii"k%*_K:)/=:>9.^\:Djk=?CfHn--JdtMD"dP*C\>+:V($oU!C<5Kn+5Zrbj=pmr:@bpQd/<S\F0;l@gB\C%9\Zq]\?tHPZ@$t0g23=WY8<@qMc(q;ZB`c+b6"!uWiAc-=4VQ_NlO'@ZKH,#S`LZY\lr1$ET03IT=]g7j,<O,O/%8B)9H\&\!*ed%7q:?kF@$a"V>]i7)]KeSYdlCar0_bX^Uqk?ZP,Kc]4$c@?MfG/>kiG)pU#Xj=u03b,_?^d9=!4[Kk3f9i8e/&6a*,!WnEYe2Y$l7%'.anC`XEZqM!iG(;hao+Q`9S3%s_uJ>04TVV<DX"SPFB(engfB3kJL3Vp<>?Gic8DD^ol9J?Fu8^AZD(!*trsY?s;_l\bL:Y@#3]%IBHr.@O75G=!-..fFu'<dd,hV/X6"1el-/:0P=&gDoV]`cBoYh`Z/3+)f<;fE;d?/SP:-.QV/X4.d5Mlfg!ZV*-m(CLlU:EO&cJ;%q5<fH<`ThTjAath5O)*BAp\@^*a@=4T,;*^d$r.chW3_%o%EQYO,nH7M@(F4a)]\k,Zj8%7_f,;kh;;lNc[:kD&pa9QIM0XCtVl[%;CC#Jpq"P$a(+k53@np'<S%to$F$A]l#Sk&7]sbml*X_Via5_b^&<-Ko=jKr'F^2+etC^lk=)(`SM+.o#Gc2<Be800rYG)"4F+HH%98*MA.IU=`!/))uYiRtK:k2ugh+pfVB7,#Nn)J1dQ[pKSVYjLsNnh?a$aBO:2X9rq^9fg5O3mbYoln.UI7Ac]:4*#TV,g88MuG*I%<7hVeMN_')M!&[\3oCmffWogKf65+*U\NuF]9(T4]>PVNbEpm,hM3^L5?aS+<7m\o6n^mGbBB.e^*94;-(@F#04/<'I"+L>e#f<T%:1]Q>,Hi?ZCq3NYd2Yg6G#p==Z6Eje",d-D2?]MQV(:*n]O^&?"hd]KU<CLQ=If@q5mL;jY5sBOfdY>$jH5%QVBH>D(HS8^bq%"?%)GG?lTE%UMjk[K;0'B).VRh%Q@[$*""u@1:ji-sm(%eq[8@W_SMh@XgRodf9X7#S,N_E`H:fTtb[a/<gpg/$]qAN0lb:=b:[>A?%%-S<e\er8/j!MF-5CD.F0VE:)le\UI,G4Kkm/.5rfepl_nPa.iO>30f1,!=K?N_&Cd&HcF`BjXkXLT2-YWgoC_qGpShoR:2:]YDpn%OeQ^C@--X(knVduDCNf\;OaUi:W4!7=%hQ-,P;I]WSgr@q-GjhU^,3..U-b;WQIVsn!Bul@HO+u_j`&iPb4I(72<g?T_CcahJh*V%p=MUmZeZI,]8a"5.X/&dVD;didK$Y=U?u61;D]lHTkM\6ecV)Nfk@kSPuG%pC\;Ft;ap^#NN1]]W(h@]6WGNQ4a8nH0N-W^*JC/p%c9AAb&1AH3l(i!<H`V!G4]A^7;JN7FE/KBR&rP8i>Gb+Jmost*Hn:@bYVHMg%#7R5GWna18KX5d1NT+;IXePQ!Oe`Ke`O]m+C]HP%76h77Kec[d/tf4fF(p2R^H7iPA\'@Z8\Ap3Nq<,!YJl)h`P]@Od)@^(af;^/CT1=8VahPZ4?X,);b<eQg7*K1UQgJA%$J)$esdk!%0'baQc4.PfmGs"$f!A>H0CaUR/IX-!XV)N)J*8*H<Tf+m]d[^H\`*)28\`<D`F&='%0PM:Wo``ehROKg.Dtm[\JWjQ!5;7\P46=d%?apI9AFY'[0.aF"UlXK4$J_kU(M7N3he247gi1$.4&R4TCa#XMgCeCkp;<n\"nnXggWEV2dlg?"B'V\tBe3;ad?A$-ffIlt(SpB]%VTO?f30;*l40;MUatARZke3)FrO)gb2IelVQUeNM0Q5E5/Q_+g_pBf/?2*9Fa)WJKWW]VNLRRUHl/]",/TE9gGJd;P6DVh*6oriL%k.B2e8P\\GP^o<[96<d[S)n%6hR6BdJ(C+EIP%U%gV_F#SD7,m-RUF$<XQJNZ'Gc_S8YsD!f-l,!j=usS(SDLk)-T"(%)A$LZs,t%jP[UZJVDabq3"/n>0d-Bo#%VYhUpS^9fuXi?eJc#4a_Q48.8dL"C57*L;%0]as6,g_E2uN?$QPna&``oL9<Xj/fQCpIgfV."C5kR%3&,O:&Tf&@JpkYcPt015[2_dI?$QQYB=)&r0m)LhF;Z``!Fk98,NuG!7/*aC(qQmDb/%TOg)Q8;q/t[!5PtBC9m<j$NU)HHYR]rf%D-b;)Z*'Wi]!PW^:GeXdn+NWoMdYf*jP=dF@<49=h<1b&[U!\3p=Z98ZuD;mBrBb4XF6ZICuU7%b;/ohf-9KS[33,QX/q;!OT!\R%%njpo4_CK@Ej"^&7&RECTt0GsdbD?tkM2E3N)ZD@/t/iho?p:Y>S1eth6%dT[T*!Zp)oc0[=3nsD59$:]!eV;oKdo4Wbnoi7;Y^c%4/`]_e7E=$M4U5'MLsZq)#e:cKAF+QN%8Rf&aVE[Wp4!kVA/W'T9s)?6b+%s\!,F$*H!@J1g(Wr=bgB@+Q@X@RnR.F4D_A2]f@!o%C18i?WG76'X_X$_M>t$n,ZRa4[Eo(O<f(<O'ua>,Lh9Q=q^,%OLi.tM-YQKVm1_W&/_F8I=:X[I>huQ&I+d!QI?IWkj,:Of^L6A&%<sVODH9/M1_"SCFLb=Z'G,_lkD<k7?a-Y=aQDJ3WZ@:/.QH$R=5+cJWjY8KA/UOFt4:=JA<I+ScW2r)h68/9=:DqlFPt'!i3b'J5%OPXWONM?)(a>V$+rR,'Hl-2WBXR%&&"s!6\ebrAq,We5"W--`#Wot3Mf2b1t?0m##2j[(HMKerTs62k@=8)YXb$%72(A>2ZKtYEn%:o6S8C:@UeMu#jWFF"O`XE7lQ=I0",?6NtA/(u@p-#qpI8<\P?&E).<m!#(^8g7MsQ)?3+Xugt\Z:XuLU/Tb<SBk6SOZBkqIpOgd%/<-pWilL+MT5HW`[?J4U+*@mNb>Ol@!85R[2n`PAc[3Q>hsMlGO%0P<olT2#<&jDNqb,m1h9Se)1/G$nZ._TalCInuj(]5jFfIB[%9X@A09s<k^:E#Xa0"'kA).9$cBk.RHUo[$T5Dh*0Z5T-t4_\Gq)5hOc^;^@W>?nm98JZ`-kG6]p]pc%"];Q:4o4Uuqof9CF>^?-c%@#YT3cuKj3^#`1=fr%<:/Ktp<BS1&13'&^nOX\Fmf54uKSq;#u'1L2!0?_7SH4%s6=;KfM\&Y0pmnRupVPsW_$-S;=*g?B!W[C0V%kGh'f\Tp&OhQS=s?@4t#GSjVHb8tF5/+1d'pS4!Y(HV;'g2e*H?J-4+/?Z.nBf6c5FH*?eeT\]*9#AMG$6e[!Mh/FDQ$.1:\+Su*%46fT8I!sO]AQ@dL]&`/r;EUK%P1h/?L)gfVq]>&N*\Pc+'p3=MNJAIk6a_5&>ZjJ[nD`CLnI6]U]K@5f9.c&O)`/V=R8p"kW():,%E!8Gp6]QrfPf12Fo^re,f0-FRP$)G*,@>H*nR;Uq7(-Ms"J6.H-ZZ[B7LsP5pTCRVpG/@I,"$F"_MP^)E0J\"Be?idnd)=#om-gu%YtsEse5ObZf/4?n#M3Ms@9YXlhE@G@DE<h%Q":J7Sej]#A(Z]86XduKKHCZ@24:L3/&OE&H[2d9]qTMjGFr>d-B=.sq#''j&@Jkc%_LA:^WMc(JaJ)3Xe2(d<$a-><*i9j_Qcb30Y!na,9(^P13@TLkijISG9"3n%/rW@"qKF>"WG8M-&s__oWG8M?DB'cC<K3EH6>0Li%lLEMPKqOoU\F=3'&ZMCW'Tr6+8.hhnL(]XF.5)-P9&cl_^Qr00[PZ>KLP6]qUQ0#J[UY\g"raaK]B'I&WjhA76fDQ,>6S8J=J9\^%jFZeE'Wu_2ASu(s$AE!'AU!Be^ehOG\T6o-E-YW@iJ58VYKT>Nm\+UMJ70sbE,KK7D].MbM7[;OccZMt&gc+A6FFIKTur+3nH>T<%ON)5f(hU0a/(p(8:h#gh]As)E9G<qR7R&;4HG)$<F=FUBZ5sUkpn5&j0CFeBh9KmAjL/FqmcS9^lM],or8-E/B`5J**3Hu7f5[AW%.XiCscN!b(,Q;sH3d9;&3BFqK@28h#9$R-.F#bW&3p_;9h2X5T97hNYeAQ5#e7Knhba?-^kJs,V)4N1h0!8&)M6NIrir=C5ctGC&%^3fJ792VqJkE6+_]<R?Fas-2$]\+`MFAfe73\>+=//r$L*f[S5PA7HVfPUQ<H&F)Z#CnE)I<=-^BmYN(R5l[3PU?0>EJ0ml&USF'%)Wgkk5$[r>7<)t:&U&Aq\C&RsmsD0+47D2kT=2Llmc/)I27bqNfI3;W]A9=2_Qf+bqc<`a=k3+'BqBgbKpZ$AI!/Zf*hWDlc,5=[%X0+=7j*qTkpYU.B0DOZ&>r,80Jr[Q/DhFd@$"ph*V;]E]nL[=X0"2k3e?T?<a%#]4X]sNZ:4?JjO4CkANH?9>^\!G(E">-6`M#Ft%#i*tnC)AnOje:Rr/SRa7aXuW0,M0+7DQUL.A@Xo5mR<Ts'Y/8^qTA8T)qlTYL!J.A1gW1Qn8[&!<BA0ekF[^Vg</k&W8=A)2EPs:%P?u(jZKc^\h";_R*096Z3R+83+\'qgpCMZ6Jb:];d<'YS5U'>>0:FLhiK^s3F"#FXGq/!Ib``,ue)`T?[/26]*_ht;937ADVZ1>@%l<<L>U?Q]u;M/Ndac!%>Mkqru;=#[!0$d9;>3fTde)e]r=^F+IBY)](29BO'm<,XH]"D.VU6q)BUZkr[FZTQTYbUIR<jsCD%kF)$%0:&cYRP8\;?!]'&;ja7Je)d\RT9l6@drdrK6].baX/aO`gNPJ[?<,hM'^diIDJ1iW'bg9rA,SjF(!P<lUZq>Ykpj_U<K<s"UPlOR%8(6S=dabp8j4J-(?#e*00Vdn'@_Yghl]@k*\n%?P;D_\9$8iF^d%]bSb*<&ue!4%lLDWaPGKNR"&/B^nF=HEfKbBoGor.Mth46C.%!oStX;`>F`8Q>H7BFb6D0^rei4`Ih;]'/1g\idc,L+`>7YH@k2FM4l\l9%cUFt$uqW\RB+JOSuBke+\$gYK'UHAX=\C6F1]SG(e4%A[Y63%Wa*TV6!VO&3uR7,nu(p<V\UuldE6;>*6[t8S2!IH@"I$&L"*QS%Z+r)JlWnmbEbd?Zam-,gX0dY0/sQ7FU/S20T55AS!O+%lSIb0FbKYd:[[>5]+Y/)ejXcbKIP##G6;Up.p[3tX5o!jkV[QY?T@dSmR;=%4*q7uHe#8Xk[QD"^+WN=ob_>8QZm;#i7E.nSSK$g%<TjM>bKsinHkgr5UrstN^3m%sc-L`2_k.`7f5BX7o7FP'&[5Q8dU!["*VSP^`g@iVL-==reLdBVph6[%:mS`AB$*VLNR8n3Yi+%(%jIQ;<EerRK<8"LgU#''UoS+h+o/Jq6E]7N_aN'^"K6pZ[RU]rQi-IN"kGScrXB<erT=nsN-ZQ$+m:6qo]22M&'"+eX=?G!Rp\$f]%0e4AH<\`I,<[$J`@msjmk$?Z>bcK"@UgNAXS<P.!)T^9!`LLh"8f,[qHdu)FRsT!tCAWo_+njJubh]pLZB\G$>.3,oL3FHQDQK+A%/S`UYgiqgh%re8qX)iJ%`a,`Y#[%5=SfRtOo"7&oT)?d>q?UW!IK$bT%Z#"r$sem%VdBTOnQ'S>a=e9h@CI3DWl8$LHGa$8ls$<M%e+4#mrM&i=DR_3VI-gkMAnjVJoe>[q(/Ip&VS'b)M-;k"'d(?0Dn*ue0GSN1Y("8o+'Hi#rUcdMEf=mXm*kG*CHjPtade^s")C,d%9@[&2HN*bbOSi(WaN+,g!c+d$4De,[5$(WXcPk";h71rjG[N,R;OSE)\+k,OQWJ!ZG-3^^WDYI0l0,SI(fFL\]iK!E_D.i`I4;gB%]h/i7QA[=i=%o)i+c,CH[XDHX:-?R^FVieJ'a=?,gIc5G6G6rR`kp]UQ*c^$ocE2:!lDA&;\5..V6j0R-dkd^8Q5W2r^"4\`jItW%EF6N.h39k2(tXDQ#hPAQd;+^,b5Oi?dqm09j4:%d`jOW<UT`0H0$b84G$b9<<PU9nGnI3-hiq48]#W7c%ChO<.+^U/&ZN[(EGY`"%\CYWUjnb&u*/QqWdFhT^'aNtHXD_`nroi_/kj6@Q+b%+GZ$ig9!cMNI_E,^.o_Kcf\O='ZMO[#?i02RQilg5RG7.`'5-rkr9g-)%%8Mds%4`&RpO$6gE-1Pebg=NVLk76g3NHuNoiS2"7CD1a9h3EG:<"t(2=OQEqBMdLJk2u%s8orN(L,])jI/$kZRT:%3(VP=l+k:6^%1lZ++UDtBUfe!QK$\$>aq_WXu'SKO-q+&p2e&u^8p=R,u>=ARJiV:@1_VRj]UW7Y>Eb%=/Yd]uY<Yn1#oAt4*USD2:_qh'OS``I@%&_u'E^6i_@<?07E2p]7%&Bop9$LcLlm\72Nk>c7:Hi%ol_L&a&7i)gfrJBn%%bR0h?2Akr\rCiuM,/%SjD_`>)\(NJlFY0]2LA8U%mW<t`b\h`K)(L[G8Z,V4]u@)</RMe%N(FF`@c]$KD<f6NWY"E8^@B;t%]35`8Mj63EZNMI4X!J]Br^LT%@*^:H?62<#lpI\(7!Ig%IX4+`5/+&24U?$XE7q<H^.aJ#FfNjdUuuqNj71N_Z)tK,pP*fso),k`KPNO(2n"]J*R%l5gmQ#_jrrrU&*DX,?i&-cY4naI._klF%E.']hCPf27X!"`l)-U`,Ru7'IKDD!&oNK?WWU!pCWYfrlhPcdE=\_i;C/KM0-)&TS8t),UV//P"9eWUg4\XBV\XPNSG34\:BQKTe%[8pA'0ZR]#%muMB2hmN-OnJVX\L[BBlV.tqOd?D>ICi_fV-V[-2V71YE421$FeMOU?T#DH.__ag;N?Qto5VCNZN!1qcMV/SKHCq\%[r`\1Q4C)D3q7[pAJ%kAJB"pdb0^#<Tn&tjJ<.:^moL"\]]p+sj`KOJ69,DTFXh3^p'C*2\a7S\",/-]'r]+GMtL!$62CK8^!0Zg%=Iu*rXGc2GQU*Zi2OkXH0;K3+de4KVX;E#p6ig='B)0+3*<fP&#-_!+NM7mPhl,/>+1\R'^u"_*rC-fGgZoISR(\'af-nG70n?Zg%6)"@[`W4QoM?9k?T?NGpNWQ:#"5#4NpD*p7!Yu0GDrjiHXuDoHWc0Coq^hgJSkJmb41S#6<o987AL*1`gSK;.>.C85b1H$PpYfB"%`u3U_m^&YPcnFK2eA;[f;SLqROeH.)2jF1i]3`Y3Q>aF;;^L(!HIF`1eA1hTQ/CjcKLi8>jbE&LY@$tX:kRQhf,E?SE^LSulW:5(%C<+HphWn6lX']5ETlTSo.p&&P`E2bZY@%+-IT:Q3-'uU!>Q&TK2"u!nhk6*:_sg]KO^(6\6n5duYIFBZMsp?)6#Sd!]meWlYBW,r%chI;/m\/@\]mb7cLu!L<HG.q6gJ/g8]mf(%Y1CS!<qTe6$;kM)\CWBjho`^aY?fK3n%F1`n$.?0oud_5*(J/!p0PN)>.WV32s=8M%aaJQS\C[oHn@`P@)Xq(JE]:K*/2Y&tlW5^<Fo#;9GHYBQM,%s]lQ5e(m9[QuWGG]M#J8Tkgu5iq+f=mUY?rq[Bu>gTBYW*$&6njQ%YMUI8^\YWmV.#O.WJK&Tl7('=dDLB[6b(2%I)(+->.*FZXdW/9JG8o*hs)S%J+.g`b&mlqM;d7U=1$ZB<km(=TcWXp/%7J#d]l"(%p$9STT`9B;dN6o/\,,cI+($[fCR3es2o%.AeUg.J@.o?;]m_:(Y82U:L\;JNp$43):;?Q"Pmc)9$8^VRIa.Yig]3PFoNG6@STh8E%3Qto]b9>[,=+74-E:2cP(55uc5/+k?=fqSr#.rJ?W?jb9[jRfKS9t47"iKNg`r!9tY<3Y.mRnJr?G?Qem;DSIU1:mnlW8P9?cqq'%d(Oni@XJ*coR<uNq5o)JkUj+s<m;:u^jH%N@\/He')TAo0=OSKl+:0.q5X2cFTTJQXaYu/U-7B!Qa<nF;G`i2oWCh_A_2;-aoc,-%n6"TBqW5\j[FE6n)T<ccp$3Z)4,eObb)Hen]KLo&ldn7k\[VDMq-3Q=Y@#tC881Re07E4]6+fg$5Du;Jjkr$[5#Tn99ss<KW-5q?%WHLoSmmV/_%:%\%o+GA(l`e*!r5fq*5dmO#Yn1M+"Z*8p@9MsQF_aJ$A5U:ZD+4-FabTOb/"];1D!/gOEcf$AHi)<"=k`gt0KhI:%A^0GgU:2j<HbK$"e6h!V4nn`til^')dp)V=n%SWUjfQ;.dG@@*rlj-lp2/"-S:C=lD;1=/hY*;^Vr$am]8!fdGUi3+Ng<bZh1&2F%]Y1;F?f'YJqWmP)]R8dg>!?*\^:h4)jaFaZm!D5Ul;uj:faebQpEt_PLp)2)T=V^_r[kdr]:OCiqlk>Fj_k!.j[V[V7h75XoB5eY%V/U2Ap$TtUDl8YocJOWMIK$bKkj!>"A(!;+Dl18;/4O+k?_5j35&S$&>'g504Ig0k!nJ]q[a)XjfBr:m5I;\W)[LekO5Bm8[P77F%pZi=upN)@C3kBFqpRc\PmZ2Xc\H6gKNc,N"Hh*uH86d]aZ?SED^m!XLf@0337lpD>eBk\]nrgKPn^E6%3I^qpp+H2``f[(ALf?2%%EUN'XSSt8CPF0;]om[`pn%N*m7bN#*@$ag?3^-24D^JAN<OMrgD<lA8O^IZk@eSQr"7F1aQg6Hj?[pcOSZX&q+iO(#rcsGQ2;aDE%(FBYID+hBSo.)HAN7#0O[@^.*e'IKT7D)gM0<_kRT"k-ol#:NWIc=dGHL&NXP!C\8DB-oKGsuBB+9:DG":@Ktp\43h85;gof/ro@%i$`TL2:_VYgDQ;8*r\DDKPP_=AgQl33;,K6S9KIc2B)@sdJRrlDLHGQ$bcA9QhPAu<du2E-uWP99Q.$0YL2<11TbNrou6[GcQ7"c%hVupfC'=._F/R7fp%3l(Hes.sC@<*]R\.oip>2h#ZnPCHpu<rB5+QPUWnCDFfY,#03hL_;r+Pb;o&)q=_3)&\G@0Me=YiH3s*:7B%*u+aSQZksacZd]ICD4rBNgM+jkm#K./01AS(#ChkJ.Zru7*"KX/\U^u!NG2Cfh[e1guW9`oqV<QT)SY^(LHQ8B_qG_gt^?QPAqYe%p`)0<\F^OH[d21-^F-.2VcaKof@LduT1gm:]UIR1Gd;5dC%2?s]/TKAV\M^Yp8D\"TNt9?]NQ=NNEi)?[5>=Xe2R!)2A*W`UWnd2%;s,7S?C\RI<Z9N&8iFj_^U<S1bb([#p!\i60thUDRKGdO<pjJ,?mfmYR%S_n<-q&`mOgKB48n%1eB.EB)>a"p$'/FQ3V8Zt(I"tO%ag"TiSJeTI/a^L^Y-H7PN;hU>E8OuLnWI77.^f+#"N@g9>^nBOFR$^$W'6ACq>L!D#re0.bE+`D?AWdrq##*na6KjIj6b!]BKSnL%&KF:WPpQTJr?GL$6rDkoh![1jNLm_`Ee!;P:%`=kIN>KMf9tNBNsN]0)W1KX`hDpEItIR2NS0_ra*+XMp3Pcrl\V!3[@TLlZeimM%\U`8r>NjAl^,MVb%U#Sm;u(==WJ0rQ(Xpt%MKEq%c0&dbPZ't/*u6k._:IiJbjrdo](mb.P:)'%b*"nNQtE'`LZ\Ch+1[&XmG,3Q%NrQtKo7/*aG6X6g%8qClT574u9/qNqs)UBE1jNk+_OQ*LrC,Yg(B&;nh*Bdprm\:%DnPQ^RI_u<'?Ydp@c@(\I7*W<^ZQErR-,#$%>CW'E;^.D$k#L1$j3]Ke@YpO)fpUuSIWJ"el02HQm!.k#Z,EJ=hUBr(L_hRk`i_4'<0bMpM@cB8gKOQ)nbaq4a#=fIYW#lukq)5'%8BEE#mS69ZC-UV([r6p[W6Lq=1\R[hIr7Dq[]oJragFXH]_-r<c(o(Ik-!#<63#/7FiSt\`7UbYC#*CL*nno/lI#H:5g]8C4`7ZV%T?5piCuX@&;`JO_1jYG(Rp7jt5CM.bi*H$lAq;nIRgl^sr6dZr\6:-LGWhN#d#9BFe4$fYjQTI\#J,UA,X9,`b+lA?K%%iMH`L#_%b!N*8[B[KGRR6P%48-&-kA\31_XF>WFb[]aBM6"aPHqm:8_Lp3Ut<(WF8F:J-f93ens4(9]Gn7hg)t2Zf4I7]r89/C*0&so^4<3.%9G9b0GX-r&pnm7Keqmm+RIia%\>/t0ApX9rT+&FEAn2@XI='r$2>@]^L$ApR^4#B#]KI>Me9@#!c8!e:Z2N)9KltM(E4^/[L$,G'%AE56]'sf@&8]s<_VE"g849\;W%GVu\S:o5Q8YH'Y-fH8\O]?i)r_05e@,f;lpLFWT6>Hofj[h%X4XJQSq'7LE?<m"G?nZ-dVfPO-%2;5^SS'QP;8`3f(GkXF][e@P9\be-b@38l)ZUZ'Tm?O)@bt6Raeen9s2jo=g]l5%nQd-k_\>\sV'(<*2.YpjG-<9]E(BK8!7kX0t%[lu?<cW@'\8[%qiX>]?r%:aU%+ZYhdXTh&gCt1\n)0OAaHs@De'6C]a<1HRI"sqr#Xh2ue_`3,9VH&?Lnjc.5.W/;#Y'ii:ASn0T%(\L9O'N]95[^ie$f1\(YqrLlY9te$Hnor*e\+,Mo]f0BVXF5"[Ud*cY'-Em`p=Qff%(=ImT6Z(WZ)M*ZKC1J_C8Q4'S$$.GDSB+:%C6)q=,$dXX0Fhr<;q\_%k'oR#(h>MRk4VpSEHO('R>K?AG,OMLmmEP%WQi?#r'7;K!4/9;6u!C#2q@'8@_WjD\`k'CG+`8[eMk--%?HA]f?&,["DQ?)"5cniSJ+1'hjP-L7eZ<6'gc'DKV##%N373Eb0LmabM3FQQF+a/E"u3amXiBTM>9Af-Wmggn7Q59bb(ia0eL!fS%o8'"k^K=82\b5Z!qTnoJcSMVOqYA<,$=M.AC+Q7^XII8p5JtGfks(N,4\bse[BYtqoDSB'qRlSZT0GG25<mtRT)S?-i<frIhEmm4%)<iJOUR%)Be>t7J*UU$n*,f_uIX;rn42"/RXIdkXHmS%NlqU4]Zd6BMT6'jaE>%%c5I&R"SPgu@+"f`sP3CZl/#Sli^Sq$">A*Q/%%1k,V\%?!iO^:J\e]YR7,3:1u0DYkL)YM.pn=R'qc`ZNY`Ash*?qh%%<rW#?GKtNOWKu$;LAA/6d8Y0^\($r)g%=oGU?5^N:!*+.%&M-(\.5\f9ohe@$NRS'oUM:It,/DONApZ!b0a(LL!e)qp0&)p\8R<`h5P<s43GUflYf$bRl%oqm,7lr,au@Hl"dVC2chH\8M$a5l%]m"2o3fo7pEghK+/^$^5%#<j@!c)&FfqFORO5&aWS+jO"X_+-'BM>mqDP[lrc8[g+lY527o!?AMjfr.kGlM46:ZLX)o67)s[b"j!%(u8mT'NgpaZC>GH""(=6,V(hZ:TE!5='r)9`qS4`Rl.>Op[9/oDgqR'rHu?NnEBWCkHf@dbC*@7Xn(<Jp2KfN/c<GYDCSX\=p+5s%/_d.srDT77csM.7$6&_S+Ya^ZU:O.76$WC)&l%%,[MiK4QYudX;Si4i9A#Ck97>=4d4$aHkGGZGZe,,?g26h5s6t6\S'O.o@-urN%U+uTo8B13\'X?5YGneZ*o`+8OXO"pCLX.#gH]R=;.\Z*"nICW][Jk/XD!1Do'RX]')V($-D_\6Kkb!K'd%l'L4m%4jkr2uL1ak/^%r\SunIcL=^_<T`Z1paHlrd$4ie?kQnGCHh71+d43rQhQLqiBV)s(/n*p&A?u=WOIRCL]6-nDW?Pq<cqkh`lTtNQfuqf+ssm:hoai%m!@^cr;>UNs12RL5(0q'^UbLi**IO#ZhiZM'Wdjt?D!dLE1h(;h56DqZ?_t/>SlYNKh/<DLc6uq`]lRK?Mi\%/@B9FVf"]tKm'"0%1K<KMaSPdFFPbp-)4fWqS&_-+U>Oq/3.<]qTf,uu<kKMEUW=!m)lg#Q:L4esm'h272Gr7p)85\W9)T:Ik<BiT3*3<1ZQ8tSOn@UE%U>=QIAZ&=_qWThiN#7ktM:IBhcPu'ECZB%<l`8o$5O=/D<mSdW/_iR9q/#$Xm.!P-Idq=SdkcFIq"+40dcR18rNFPV_U4Q-W(40>%A6R5`=:"#1(_79Xp%k\"rG*!Q3`pn,,g@]YP`I,l;9?(bLGig>-,7qdo)q5]BI0mhJg07a"A]1P&2sAO7jhDU,TgnT1s`[u[[0bf%3bgGDRIl-MoI<A/+6./%6!*hHXUG1PWknuBZNC2`WpkRPXD\)9'g@F0dElVZJ.DdN#65<8i<,uXlPi)gKb";C"oo37iBqHk&-,QB%5,@+1Y5k<PLF"Yeq'u\klcme]`'TqO0J2%Y`Q;oQXFFFL]1:@kG&8iAb`d]thCR-.f.T]*HhWgI4C-g"++6*nM/7QTl0kCjm?Zf[%CpWA5o((5V/F'DYm,P@;/1\skYO)5,`bo1E0j0@69%1Dj+U=a-C_NOmT&-hOb8nKC6co>Z/Nh-[SAuQec-Jcgp21O/@\8IMn]1(W%QWu16P/t@\Y!*nX_Cjm\f=;m$=r2e5A-R?BLFb2i)%qW#WD*Z4WBY_!X%<h7G]sE"gY<icphTOUF+cfMc*boX'/hd.lJeuk_WL"S%Jesri!m,]I3T:oos([CXD^;YRe2[+Z&&#&Gm:=r&OLJXg84hgG^c)EjI9CDJ&W80q_EW*9)k;+9(+`u)T>;:bi9q>skNuNPj`Gbq%<PaTso8U,/J^ko:]193n9ag?+NeqsBD;tN\^MG^rHL"A`Y34Jofu]/QGfWjh27_8C8n1UAdlaf7D6u5cY-+ORTAQ*TY=>j7TijkN%1;<o-N+q:mZ=1H2`of6G+O=pa=353t,YUmuhm0-&[/K]k`.#m4gj?H_AX'oVIpYYAD3":42DkYFDY6RV"cFjI\suq%I!1lN66gR;%_ft^]c$nE2obOZKp:pU7HfC?\C=HNpnZ=YPe4SC>2!+uu@6]+s.=`kE0DfT!$=1ac+SX<@Af,0,2tj`tjVg23#BmrIfc<A]d&QN[%J9>S0ioG!m@JkFbZ_b8OX1fM@^:*na<7oZfF@8djNXCe8eZ!q?I[B415]UF^(pf9$<@k?Q^!9Ss4kdR[\PnnUh(QIR*D<Cl\851(%D7r+m9fI4a[CLbt;@B,1Ur8UI%"muQSZ@>9f_PJRDE"&77L.d[HWL=<Z%M@.82!t^Egp,2N?p@oT?DuZX5BmmmBMS)_,fUSW;*mR%-E:'cnop0ZYR9taG;?5&`kek6'AqMAidOlgN/I]qp;,8]LF3QeN8+'4O`rSAlkf?S@;N/3HlaBucB8(;YH99DVtPT,UoQI8WQYI5%*4`0f-g,ukbs[m^r(:h*/@DQ?'.4T?K2TmVX7"8IV0qLfDu0R]`Q;]go&O49rTEG?=Q[rOn\d;2CKg3QM5YD\@DqUp?Ed8@7Sn\S%O4IABN4=$0=D]nf@u.aYW0H\Rbo=DO4JXkiS,e]Bn.95glR>)p,lh"(EMe].,t?1E%Voe598V>)qZ'9(l'=o@k*N%^%LYk99u;$g%=ukME,]$=mCqfS8PF-DW*%h%Q.nnpXl5YS-3*XG8(\O)Qr%RGIaEQAJM%,l!\kgB+h$4IrK4;/FrOFT3lK+(.%B#VAe<k7@jb"A^%P&ok9Q\2c,*7t1A:kM`?6+]^d-2AX1=NINR\r2#Qh"=i.L:^4t=.eqV55r:mbJ(Q5rpfg7-OD&$q(d<\%+jtkBI`pDlB^ur]tPlK%o;QsHEK*0X+KB_BnhMH)NlUi=I"\AEL\4408D!fCDaBS1^nrdajd,W$B-=H&iYm6MgH]3V7B71unUm^,Y+CY'\iBC^5p7bNGF*(Y%aePK*WL40`@l_r[],M$ImjSkS8R1<u(Q$U5&\%]a]c6FT/?fJDqYbeBI]\*J3@DR>rP&<2\Vq8YD7p6??Z,gFq_<*bYr;.=an!0.%309up><p^!]iZlZjR7psencUoSh;XqGO;'5p@kF+ls2]?":t1"+7*8pR*ao#oRjhm#:8<*2uR-@G4>>-?E-.8gA""6U\1[oZl-2.%0gR*IkP#KGGTf%M3WJpPCA[d5kI3<+U..9E:]@clM"7;Q57$J6!2\Et[HWt>X04EG]\S"B2D_Xe<LYsOG^b"SpA=L]p\!),mCu++%;7-@LHhYM5aPobQouA<+e0j^@5+nf0Yb3%75EDc)k;@0gs1dfjkP4(lI_;e.%8R/Ip`oFK;c,)1I&"30NS'!*.f>*]<ec)l^(*X+%O))ikW7$1C+"um!5?.:4,K^sN4n@^(2faWW5Ld%L8*V6,m]okp^6.=-m^M35r(?7P]^_b)jDBBB+9,YPr,@+2Isgq\chYf+_X>rm%=H@[oDgu-m*9"rm^]3VIkL]7Kq;UDbn^Z<bo@l4EQfg+emI`o*Xk)[UIn$_D0.sEUnt+_[aEKQ3D!?<Dnm:7""g;d6s8Mi[^=uka%I\5HrP*_&4=hVP_3ktW4I.mHrDK4'jQhAG:MlZ`8G@+VR^AiWZkP`<gg$S<pCOQ&ueUJV>q0ePnH`=25>X)Jad=[M[_Ha*I\ts^h%9"pUGoDmeF!tDNeYL>(M"1?qMR'U/og31'b4Y<]eJ,-Vpb3JZ1NmeSF\\?@7q9S`u`IIp%F*0\738a1bDiZR?nt2fCiV&-?B-Pl"%Rd9WO@]c*;g'=keTr.jdB_C,FQg:[oG:F3ik.?=Hg.SC:"+DRR=p6qs6%(nm6V"3[j7uBD,H\?'+O.V-_O.=2+.0Pc)XZk#Tlf4R%e9u2%-P3]ZFk#o.?_n*X*B%@[FsRa.9AH1KiujR1'iW#J2;e-I`k<0G_N9"uY>cb=,?/:7L(5I)e;G8cCsZkZ2o6\6psd1d1sL1#%l@ua%hG_!ODrA<"2e)08:o@uk*_KnFiN(>g7SP+(<%f!_%F<C[q0ps%Ln:B_1h[LR("&[R`1QT3ifR7?1^q0\RYBLa_O-'Fh31/Y%<r$=\UM^[Eb^<YlW#JT!]uYSl<u04hWM&Y=gqp!Ue"X0UkEIF!@=8f$5L(qSC%=sPf6Lp.VT^A/a0G%\N4$)BU`EpPk&gtT!^9Qt%2'U?SH!P)6Vb1W*Ztahd^3#(`R6oUl3jdR,g)>P9YuQ4@-&]LaDN&sX6IY?/C&9_[W!QrPZs?j(<0mn0&\?iqcqqJ%jelm4'd^OY%AZ`gMIqcM6hm=+&<0-]pH3+0%m_4(=9G8-E!R=_e3iS7W1fUF6ll;o1>:W+6LRoS'(:FuAom'kPC*0iIcS'*Oc.(peKrs1&qE26k%Fb!A^k7jf>AFoDE_U^FPLk8a4mHi<u=;qEX_Ef86EQCWlD>O>K&U=\I'f&0V,m5(ml!/1G,1A4XQ2+iV4^]aM"$0[6;\[[@6nqWb%<[%-m8>uX)BkU$CBbK2eW_\PGZKE>QR*E_:p#QW*_T3a"iQ*<RJZO6<;o=(TXd^Ed/qhjZ^L9iERml)r,+<ctn,[?RR9,]%qP.Xc%g@l1$8m4)*MPpu<qVjJ7[bWFNA6[r#9/OE..nb<fK?kNS%M1?uU,\lI]1a#E7K&q6_4>tI&]@gO!;8[Y9[h`G!D=Vk'u[O\VJ&65%Lr31lWM631dorcup`LQnoNYsrR(&fLR;+N,3j#6iepOYYJ7`Yh""i::\T60qT0L)/mY2oC&b4lkUd1NP]hNJ:EaO+dqjalm&R8#E%[W?qGH_5VHp7jNfD":n.Mc^ifg$2`V:tj8PZ5U^BfPf?m'X4$EjGI$e_^N":[!5**J=oTm>9C$:O"oIi@J:4ZB-"K],AT/'6H%l8%KZn`fdU$s&&GiZ%g]2GUfNNp+1ESg?;dN-d2C@XaE5&*7kb&)D`MYUp+Ij$l)CeQ^'bMht%:tu!S!Uj#PfG(lJ-]X7,)q`HGN]o@%+]W,ogcV`u&09+%<Fu8]4Z(>&nE=)NTt[EB1D3893hdfe9\cs@F!ICfW/k=u**Xc.GT8E66(nT0=(n"sWIW9ZEA)V@*(CXfQ`n1O%Vun2#8O\:[N"2=G+Q=gA"V2u7.KI%k[#-&%c(^$Vg:AJDcoW_Po?840%3'm(j%r0hberq+/WD/G9J!F+6^EHI&^".m&n4WUR6)G/%]Fr.'@O3fqeHo7+K[6APODfcmUN$ldU:(+^n"?>rVg47'-&WGV6-Rm,*gT*BY6dV4Rt6EZeHV[D^85*dcs-n&=+p:Gf=[XU[*NMR%fZI:#((Nuh$Vri!'$YNPTa?"\$$0fiUp:q,6RYb+*ju>A>YH65-<K7n7#:SO0iIHPcJu0,8Z9"\`#&[p`=]j!cp"<JUO+iR0kLrM%>.O(K:D3f(&JZ\h,N,g1nhE]b0s(QmH8J/5$'5P4fN"h30+tc3#*I,98;P,UJ7c`p^m=*qg9huY0UR(1;p68=,@L%BGo[26.X@*%%Zn*is'cVktVPg\!B_a1]?K*-B7hmNU[fk'GXjFm?M?ccs321O]+cS/aIGT9,5?9(af[@&Ij"P(G7@T@PVlbpBZVj-E>g'[^-;KHn%<+%]eZ<WLnY[Np;"e#hYOC>H7er21&#nej*;^W$2P)2b$k<HCEb'_Eb,06TDa$4((3'pML&/^gm8<+MM7UVI]/+C))U+j=>E;DBo%elHlJ<%MfMLP_fC8$*uE/-.=df1/'cVWcr@_t?Hc.\!M\5Q`7j(Bh"\lOcO,&5u5(&k,Qe!9M.$78E?WpNaJM84;#DiYMqh*10j:%@7Z!q#`<(1C'!&iH6>XBj:2=#M02?(qD\aQh@g)Y-enf06]&*DTOkZ]231T7BmJV[-H'lYN0.?dJqnF`DKB5+/%7.F+T:(SJ+.d;%fQ32[6#[pRd__.mJYcBj:/o<!5)>bG7d%hZ^Q>?079H]kVQMs<[TR9hkLs&0HaI^Y<"kj$bc+EL6Ioc,(_JBEd]/A2.b^XEe4*Kc%a,,p&hD\,Y1k3Z%^.b\b,DMB.XV=rpn0Q2'U)Jln>BuouUsh74!&M*XC!o0YC0D\_4h36hVMnaoni1>fqV!jNW;Zei)u#ee,9"tD%ntcK=RQ_uD9(Wcj,f2<=E+p4MX(('"4P.0-0Gu,V*;WLSN0$XHKAofAM7cSb@A+:S=\^*ifj0_&J<WWm6m#"mMNhZlOt$k`9G#@t%%>uH!-,b*d-8^=%a$O'0FNWdd-UsAH%jE#=PGGK`M/*c32@GAmd/g-)hl=mckJ9Zafk=7d[,:4To=`]\R^I9uo`$G_mZA@&*V^_3%lpM-hp;_+pHU)q9=(@&J?$_kK``%tiG#I8]b<3[qljg:9`c%LW`2UP$%A+9mILPk;KqJel;K9%=:?UC4H+/Z3CNW)D_cT2!J=qcW%37pVuM8hglA\^$o7]hH!8j&"U,!mFph7<W]Z*]K";=+@@EVboQ"a%Zo#kWKUkD2Y2+:6:=eK6Ln!=o/E0SD]iRfNi21]W0;!;.$\%=pChA4R32^?3d,Z!&G\2"W\>?=,%S6^Z:;l6;ZNO6>_*l*GcYJR#npO20jkY7u2*\N;#3Z#Y]b3?r9t<78Pjg9\,l3%%+tcdf\\5%`Fu$;,(RULO>UEmSf/,s+sTDcFZNt3'XKK-8aP&:RUBB^T*Wo+psAs/.N*1,6@19W'+I58`Zsh@Uln,n,.&6qCP-o\)FXjT,et+g%%KfDgUF.3!Z98"-Ys^i^RQM8r\hSq73o`Z-RqP6`^U)9.BrJJ7&5u5epa!5*BV6mfn:5IO!.($=pK#,-=`6\9@SAQG,d>Y(Cm>U9%0oCK.&<R+u1SC<T%%=%9`3*bgdE[?>AYJ^1]gj'aK2K3[=fNlaP<Nh!C63EhhI^?;pILUde2A7_(4gY@^,=*&rD0HY*98Qd'Tu>$%BU,6t;[cTnKnbt#5ggp_DZBe0Ll_Y%Z%Tc':KXBD<7,D3,e=('dON_uFF8h+\saqi-><pYATW*//]3]_9`Q)tflFF8AeEBad]qAM%XYD,ejU;ftV`ePm%oZ'_/-pX%o3,^YUa&=/JPAaW+f7!t'qc3N`Mq7a&p/d:DjW#++u'Ga<(3pPUcBV,bqdAd:ms9m1([T*W\IR?%ZdnE).r'2fWMOZL)";Dp*grT;g&I9JA=OI+FFmqS)`1TfjU9=t$;rT(F;+m(_P7CZE&tr%U&arsF-%lY&7)7J^f:mh!ptCs%YfWi%J?"DrDQ8LVV8^sc."(;C:WRM2KWlY`0F&jni[T`oiFYG:#,HmM<"*Jt^7scg&W$4UVmljP'eUt()2KPmW?Q#Wd9Qb!epGc`_pgq?%,jmq5AgJbX&If<jU*UE+G0i2)kX<[/ORt!<8*2&kdKaShYkJ;p%YM!b`;pt=Y$'KL6rI1)Z@O6UT'#Et<J6lPLnN1$n-08WP1m\Y%bHg%5O:!14&:d(sOBG,q,k>?90Qn*)AI4bc_K$[^dr>L&^d+]UK`.!?9H@!3N=LUZ&/E#$&Ifu\'O-QI*tafHK_A@2EHa-FP"Dq1%TK/it&c;*#`.r4P^Sl=[&8Yi[0?E?&ZSqrHFs^'Q>$]>T;(il6(aF/Gnft"I<*'&c5CbF:HiZVF+4)LX%*oBPELAE1M*DnSqspTI%qIiWUR$jFqMOKqEC_"0S'bT,1d9<CkGn7s3kO,Y:*p@\XA/(b=NaaAi7,9[ZFbG<S`d!Dr&D?:f75EI<oJfl49[iCL]QeOs4:S-N%U=ms,YWA<cP%RT\%%"u$AR%Fd=0),0Ui;g4ZO[800%=#":mnaY'$hCRdF)`r90kKFMg>D[M[pBJ.KW#D=u!3t(+Q[\7u#)7F;l&%%D%R.RPs\VRCF^dND5VT]XpEFINVpFP55U>@)'f4.N-LG]@lb\QN>HI5ep>\][Tq)Hn&eEM>;SiLV-sRDiBKRte>(;-f.TBHAoIR5%Gaf0Y]jqt=jh,Kq:f<p"a/tlkF\"\[6]TU+=/9_$MZ>>Brl]gheCipEnr=9ZVa<H:kQhk9.k:al+)4VIHXIo%<hX3>/o/fI#;NE(%;Ri8HoS=anHkG*@64feTZN?8&,>:iZjrHo]gG!Ap!"rtSdU8asdB'058HbK;,/TYN'SSs;R=[aoLs7!VJ-Bd5%#BAV?UE49FbSPc%g-@rfbJXgC*p\1UG)r<m=cmRr2>C@BR(m1.():85B^6(k7'b0B/00isH7pC%b9@)*c3RH?l;mu$a<_$eQbI"L',X0r_*S\H;2R(I%MFS0,+Q:5.#uC9_S+HY$fhD,,c@6qnTDfbV1V>`QCKo(Br+Qj8IVRUM*XY'Mm83Sn+(bY9*j0Xi6i^ZKZk;(fFNBp.cF<%S(pM\(%cdG+TdDoO-Q<hR05u@2+'4RE'PmY3<9i#QBk%Xpold56e>SN@FT*Y<E/'h!e+"e3M1Io;(=a5"9s5EnJqY#lhKh/tLZceNtlXQsf%J'f2[e#Uf%,V/NWa7\hr4DG5%cd/aicB"R3LuGtQF8rF.k=;X41QG.DAH*(]me<sP.4RcM&LL$V"puBe!Qmb#X2Uun#Vb%462KN'%WmTgG%F@O0-qp9,#RXBVS(":+$;#3sfmq\*VIL0gnUX!S!n!D;dtQL3!l"h?[n=pe'bVk4HTH\A#/m=1R)DPuKS.$j:Tu,:+nC1\%KI$:HV2-8=0bMbd@afUR;h,+R'X?!hNG/MbVbf`NLpP>u5C<djQq)o0WdK(FLndLu^uJ9)1W%2!?GO];YnI:EUjSJB@6+cZko4ER%h$@-(7s@C9MLcE+ZSF!>@*3PdKd*g[KM*jhR@#0"(.'JnG6`"8'fq0qhtN9?pPn+Tlsd(4WPYYW!oADYS.6RM%\kGY,?WnT0VPm!%;M@*5i%u?1'uPHSg&cj\/30/s6j5C\%)%'kqK,&sTpgc$LN&'=Et9T'ES$&L&G@f`+f"aCn$#Ak@*Im)5umba:X5%/iV0)*,a"go%=:#V\HmjD^MDW_(f9?@1VPS8(1F*#t5hjV33V$Q#!.K"M'*;TI?EGHD0GW^#.<*PMad]+Ik^dc;e4Rb)ecSgqr-A6jJ9F99$^nK#%GJAa?_p<4LTEs1:J4!eU+gAr-@jHhX6\ksm,1$B2l,1ST\'';8$Ca]tj=h&;9UH2-'iONC&@o-L+-f,Xq5+ACJoJhXrYYM8:/e;c%YiR=fEQP@1i@P%?bBXs\(2S37m:m`W!^t4(l]o^%6'T/pri=OY"k1[fpFcAV?WZ+9&&"]h#V8.PGtMk5rL7<\OWim+qINbB:#O6.%=jb0lNUUO,n.;mm*>:06+Y,b?Vl*P]6oIap.X&=ZTXl<***R.[mdpqa3ekgtaNdpBnL;AMK#`6\NC%4gX<#+[4+ajG/[GdF5b<g8%E^[;nnqFOdbd=J0M7H4;:(5`_S2ETa75YPu^4\g&#i+Ac%cD'bPShrd3_cCi7E0sD-@fZ7n_"[&*tE[kR6/CcSdhB?!Z1SR"EP1P%EMq)?FO-79I*tCe^/_FVh8dYK=@XB#N-1f_ZrW(>V])-OCh6!XI2#5=%H/^acVr&XBil.AkCKn"JDki@&@pa),!ODqJCZDIN]GRe%I;%Y'(ltd28VmoNDT3nLnlRH#gr^IW2T>59YVn$SXc&?R2A&:X/3U*HmfnILO*EVYm'm@j^fi+_MX1IUW0./'XB"+]YmIi)/K[.g%.&(<?fn4:?ck2'f]IP^@!q`/M:ngL28Hn#b:,iU@JhfJ!iJnh]H]M*$`]+@,HpC$ab37mdq*qaGK34!tA#-'j'G[&hX-9J?]EX35%:nS97@k):7[r!MH$(a];0[X*H&UH7l@phH!c%":%!#9d!j9g<#k6Ni8n$Y=MrLL&#M*^+A@6UB,j1%.K;H)C;+.N07b6Cs[kK=Ie%>o'>Dpeuk%B6.EseLO=K[_7@u,QH:2Sp79ST8L8M+9(p$jA3%GSS[8k'f>`Ma"erlZNqq?N\cfC/(@IN9F+U]V?S"``0<O'KdW*O%"-"69Z%F$R@b<iS-tFOPg@J^'E?)Ed`_a`_IJg@)D@&`499j0WLTZFJ9CNtNN[A`oOHCT2OGD47O\..ant=;1:"#^!4FVHj5%W!0%1+ZO*Tn<:N;]q]pV%7=`6@6c&%A,&Facg<W[l,I68.?e@W3c+&WdC@<Ka(Qi(kP:$;XA?,\N%TNTI>V[2%:dRk_FMKcalluVZ>*X%&1Kc[+uO0TQ7+`jOd%5`P";8]:.^.#P%fgn-prjQ\-H&1`m?^rr*X(ZHX_^",pqEY$'-:C#%#-HLNUG3;.O',P#WY3&)83l0VW%G%iETloPG\L[1r>_[WMGVQ#0.U8O@DAM59)YVfhu;MMHIpW6hq2rV:kW\![2Hdcb@">%+n@B.@q?m_!PY(>)G.3(lCHLGsmc@bf086%E#GPSZ*]9lk=dFQ>_?I<gcb&8%N>Q,TgZ^E>$skEjt'1kTUC6'm,b-ir?Ji'Keb0#11F<uXe0E<R#=cTZKi6DiBSnG14n-iKVsue%<SG#N$XeKJ@:MbT5!5!eC_IJ?+bGN/@@]'['ALZ_PT]r*gQ"g]Or^F%`BM+ee]M;T*Qq3274"$))u5T:WPgSiZE4EoNT?Ud&l$X_%%cKdW%N14BPQC-/MFf.27ms4rWc1$u856uT"?%DfP-Yk>D1fh:/1(IQ/#[%>*=An\[3#2^)1GA?Y:.igd7$nP`3'BE(1..'a^VNp%.#+H!nOH:"EAZ=]:BBf3<^S@h%,#Qe8g.Oq4FnQ7SSGYcG3XJj,p-o`;(Fap"'-jj1Igl?LWtHiBVr#USN],iaU^OnKpTSf<+p1*%K#%3m[X&KN/Gr]26n]D8K?gG<MM<4]UHgC)1(t5frM4QHkDGA11J:.j&kD;Qg\EaaFYR_%9biq5_G+ah:.Z1YE@1]kT8bg)RoF)T%>1<'b%KGoSr,l\H6KPZsHlnl_rS[Q\:^gokGI#dXK($0GNcsAl6P<e##m=!RQF6#j*?bn4%\Ni_Y]UMgij7"1&SR,5%$?)e3[fr8%a;+IaNa&bu&+%>B-c"cIdh4M8`e"]@YYN6aI-90JW"!48KbcrD%f1kQXE*H4bte*il]G[+ZBcNCl\L0'(dKNl(q[!9-I/JWmLmOT%))aaY,)NhL=FDKY^ObGfb:L1J?n-O9EQGQJ",b#urY.6mm:Oh">`'^M-'6&18ikR>pf`.3W8j5D4^j/f1(?rpM.RY'37nKH9YdpS%XJqO?L]G#82Oboc_rGGdE6)If$:5biG751WZ$bgm#Jd:u6mO(McFfh'3G]?0@dVtlQAQb`LmAEl.9L_k-jX'Vd)A?mjb1l<7)4\X%F5Do7*#QO#b)oIfhur/L3oUGn,X;#lhr34QY0H]+2uin1B@c$++?M'\nI`IY/u+i*+!Zo$6g3mf9-mF8)Iu08q,o$U7XU(E4>drV%ZD1-qfd4OVF9rtR&<RM4AY>`Mk@A4$L8EjA8(AFdNAf4t;%u]sY"&gS;qTmU0q^8Kr4KK`i+ik'&?"P9ac#(uQ^VL',)?b9M>?VG%VQR>9b<#0ch>QfjU&^PV**WN38fo3AF;QPsDg&SlB4aALlO07<bVenk]IfNl)c;)MFTJsqj0A>%(c+[LdC*-9#=hE,HJn`FTLGU>%%0C_5Y/?r&PV&I=[ll52KN5m_L04X!IC+/Yk<S[poamW:Z2FpoPoV'G<h-F'70@I`Vcq.k'Y'Zd*&CP)&Lh7]0f=]+W#e:N?k*@$%1;g62HeBb.HMI,a6a="M]ubGHZk^KR+;?6'`/ar?37O?0?AI:,%DjZuJX<f?Pc:6^i<XItOX<KHe,3*6&lj%r?]t?G4:^SuOIIOM%U1@A,#B!YtG?,2@CZ^B?Z,.F.`-SbO=hC.rp@^kJ).2GS&#*HQb)Jpnn8<o4"!8u89*<4_eprF0?"FT1!R?OL#f>hb6ZATMI3O=u%k_HH4W'a$F,J,iP#aoY,TSX&MVI=[nB_OM(Qo:JQ:EYfKil,B']p4"[?u^dWVN=fn3QPDaOOiBgVV+0K$?/`a@0%]XUMn']GEi\p%Ysq;.%:?@k-h%p@!S^@1O3t^0c!QNF,<A6G@U5?aY78K]IJDkG4?1:U,L"RbDr;s-j7of]SJ@i<nfB</i4WVgK*lB2k-hVH@HmT)%_h*QW@=^<DJ#1UW68tB=b/3RWo3R1&JET=iGc/Ld?r=MJ?Dm!WS>orc.^19OK.Gcin/iG=mpo;<KMFPniQ*>s8lSS?0sc`@5h\:!%WJH*EbV6;(<"YK;M!MI0ctt4iTT%tFP8k_d_4qB,WXYCO'lhCrekor$'=o2,nbuKu`OQ9u&Zf,'Ogp;nL^9;?l%q'^;FG7'O\d@k%a3Ic1K2Rr5P)0je=N`.7:`'GOF.^u;AqK/:X/%.OF(jadrHf:X7/i^HT+NQ0Q:Iem>BA3p,>p0(!*3$O\]#a18"?<-8cn4YKuq>s%MkZ+ld6gBt+bif2$W)V2?-F?LlsU\:;cM`dJ3r9XTi/3D"#b;Fl42'T*u#]'G@=tDMjW*@Gmr39>io68Y8P*c.KLK?Z(.o`n3n'd%>6YIN'$W:34)Au+(Pi;4Z$OT=+Wr:*$-*N-Eu4%>4f9Cr,n(3*I-o/P"Gl!r%PM0b4R7CqD?VnI?*hG[,BjP60O%Ro*"!R&37b7+%jV<E`nl=q.8h:@DAXtsXf0LZkru=0&gKH-s7SAO@<9RA?>^RP=6lAka"!neebX^m.Rj;?mi_^Q!7[^`'b`!6m9L>YSpQUnUP:V=U%fbp=3=hHLmFjK[!HBhTufaFA%_2($#U9e<mCnrbF',&0]P;lTa`&Xtiihdt2._N1j+$CkdiEQiEVq+?(.=_bQ\!\O;UuN`ugXZ2T%APWo:K#"\'UmthS"-5:`_+9)27Ndnlf+*%Z2'4us(QV:T!5C61Xq7b6M?>CAL94b>8]V)iShe3$4UC`QR)C.]LuSmUm)3f/#WCWd%64bc$dL.b]@!<Fo=p_R2!.Mj\+UOmL2Lm],i!gZ]"at^V?dFii0ffB78OnGJJX3Mfi$&n/'H$>OCiFnNbG."8Ad7r<iJ#T7K.UQ*%`t@&OE8Z*HbAfc\K-ebL.o+a6H90\-3-pEq*3_!Bm]a/^6?YK5gk,9F^:5[5j]"_U10Y_,8-DjX3&MT,Y+4fJ//-)h?sV]Z(^qua%"a&2ne3W-aYF6/G$l15?n3lTA6LA5]irDOXG/=l^$5KGeTc,Z#M.`.#4NAXjMa];!7%eo=o@]dgR+#t=$`\n!_5IEE+kfZQ_(ZWK%b9ZSea+6ctr)?#$!tJFR6C+!]?kTr*atNBH"9:_`Oe[F4TqY"BD*q0qEN[QRr=6edRNm=?_p`T>:5_Gi,!QNAi,$R:6uc=qqnFY@%+^Hi>LckC82$.[Rc"f>+'$NlR:2A3.PHYd\&:q5/P6M,^k!!OmX]YHe>hj:')=Rk$Wd'o8p2;MsYi$=*U,6#-@;_^>Y#K6Q:,l;0%m^5MR-/0HnnpG/H\rj748bTaRhd4q"If^L3fj7quP8`Ea1H:aH@=,Oq7]m0+?T:9)S7<m\#cmVXeWhh/\:9Eq%N6n@pH[Mh&_k7T%"H`F%0p2<,bbFkT_@Jks0L6mpQ;]3+Ki!.MLi'Kf$Wg%;Ybop%CH4[b!t0[Y6f5]LO1_1)]EG$Cj`pW2;:TWdO'KJhY9f!q4Ucb4%9p/*]e5BQF,!ZWur(#a'8*4&=2L)?4nci[+p/q+!LkB?B/:82B>'LNtJ)Qq=H,bC8CQ.:ITbe#;LdT`.&@:jC=!HK:Tn:JsFX6kb%^-_o+*("c_Z,[u#,8:*=6Sg`9(iGF)=sZEU,nP[A9@:?O%^HoR!EURWOSfJo>;gMDhRF%#O@_I2R$\Qg.0`N)/tjNTZ"(UZGl^8[%K$)OVJ;B*>_BpVC&C<'G]a1kRbKCf<k!DV6K+(k_X=/+n(BB$F2oiik)Pl3n5p6#?c>`,LiM*XZ*9782@s2>gNRIrt&:TgF2T4CU%U(=N/(3\e><ag5:.tsY?#d(&p!\9'-[S%i6StNe/^4&B7H5eVRPdkTWH7e6`DC9r:&8RiPML"K$(2P+5\^9VEh@Hu1-,bW7(FT2:%2"fj9J:n9H\g-DXq)a8'``s9%cUB,B__PJKPekJBd#_c6OEMB52Lo>RkT92HCdYRc99dRY5?RtGPiSJk;5/RtU.Ps#T.tg=c5_m9%6W2DrDP+&@(o3#e7.&#Tjer_f_Uo.@Nq-]c:oFPlpTr"dOmpA79-UN5L24RsL[]-j*DH)b]1L*#0;5JEn)U,Q=je-t+_agS!J#V%%MH,$`/=^a7Fp)e6QUiD*?Wq"iR7NF%hQhOH8i[@o6mTF!"(0m$<l:R9W'?HEjX^[gMjTPBJQb$MoCg'I.jKcdJud!*7?4CuR]*]D%(MISD5@Z3470j>X:7OaJ[U]eI&s<5W7@rj;F?!ena_k9EH4AL1S/B6c'okG\7BMHb-&VFn4&\49W_aC;FB6Gu74h)K+R)G^P$^/6%;&KRdK^)O\FWk`EB1.ZOHKDiUNefemHHjKej4B6!6b>!X1HaOqqA=du\D:R.Vqr/`4X]u3SMBD`mZV^WU&,ud&A&:*/.d@-8-D"*%atbA)kcqi*Bh1?n-5)^`0XZJkDIBm^-[ju#?lb"qp0cM_&SgXQ3q88-9F`Cg^c0WGNR0l$mhmCeo\HB'Z1%6TK]5lD2uM#?2*B0"%Lsr(YhABgT7GgF.mDNd&ig^f.X!IfrEY6?dYRXoSKOmT[AOjG\ED<$CE%%T40dh>bV]t1]B#!l'#ASO>'?kS[m$R#DnuR(`Wn:`Q%i&l?;1qh6r5;jmjMd.kD+.4@XUk'm-h+1!B+F6d>j9!GketKAt8^%dOp&p@1;e0N>ES\LrPLG,nOQIEl[L:tmhTO-"=d%sAb7nAK%/FT\XCTGE`UbsNF5p2!gbD%<o[2:<LPk(@W65%#+0Xf8O6V#[n+r_l)dnf%1?d]B<-=OgmbCjD+j?t%e"GMIUH6qZ([d4FDT<`<(%3R^kOM39(Gpr,u;SGiQRW.Q@G1a$bV'H<OW,T\<Vqm%>/VO1q6!ds7:`tSl!`KG%mR2$fZ/nFsu:rISHZ"=4RY@7YO@OXZA1.'tY%g;S*N][8:nKlUcIC0cb@RLNM\B'>86D>L7T=9d'1>T5&6j.SLg>>-s1%Afe0BfMq1L?14GJcX#/(UG(UCn-,)Kr%JAiGI@<.98G0%O%p#iPOL;l&h>[Q+@rc<5;5gN9ZX"3L#R9rY2"l38f[EIcq^6'OU4#=/+b*M'UnE>XD@E;Q[or:4s'%bIFa6WdFT;S)=6;jUKO@B%'F;?*S/P7X>F-!>^:nSr[u7L1n=`:0JW$(Y'm:%o'M3="cHRr/\u9rKY=1(faAYi.7g&Df[4>!"UY5F0GWi;`O1iS^B.P@=a=Dlg%g"ZXldCZ2AR%qHRp:QV.454tf4AK=-l?#UVIrK"eDF,W_15(Np,R>)S+;K4JE+]cQKMUR;bd9<`Q-bkk.SbU0_a;>!&%0S7"MtcT%EnWL.K^WT/@Z)?Ua\e?lXiGG3%/=3^Zq5I%Y;$t2),3s7*C"1[p-&?='Y+Q."b%Sg>i0i/"EPe[ZlZKn&[@O]@M>P(S?<(r@>^sg%9!SF"D#^dFp]Kn;c7).*L,:n4>GM?Y(b6Uj0NRm:lEf<3lKuGb-jdD6DRA;$;ZP/@+?&)+'ErcoX'A@qV#Ee&-Mndu3,XhUp9KF7%3[;?T(`\MO0%!_\)MA?IX<#fTQXiS%q9bkGCtE2?A<F9]81=D0,8E7)()[=J87gh>@gFoE&Q+#]pGU3>#n.n"LJeQ9PmFK!?5T_#%]I+L2!2X[16+C?\\.'B@EZT9s8JZteF(Z"UAA"eA*=8\=d18t[/V4:nY-H;5[DeBVkUi)'eaT07:0!9]:eo"^)H%$kk">bhbF!n3%c%2Z.f+"WqL0bXpc&mNX&r/ahK9Y#Y@m'8iK*mTZ@$(^3`X]\'JnI[/*;^5!_rCmaR7[=5"^]5=mQk6_ZjS0-nIR_74?2E5\ASqM%J,`N4_E]E$5%e01/1gtVZ2Y/g66.H72s0IT/GZVG$Fk^>(.b);E6+ij![Z=ZH]lSR^Eg!;'I55"0NLFg7uZ;;aMb_"q8a:MYi8st%?PQ@7$?LZfaG%LJFFlsUX;K<4dJq.d=)r;8#1DaN%B)%@SKUq,$jfOnk.i>dgUM>)=&f%IZNMIF*u#P#6<$Z@3UbJ4M@.ln'rjRR%9TFIRL-J.X-qLn.6jC!A7H#WLrY\9aE4LfpX@N.R"$irXp=%ehV<3=#`@?cCUr\O#_1TSQLhlf.+lBsdci<[,?@X?,qa9TTY'Pp[%/&ATCl%X7T!\q#uPG??2-G`/lC\b%BAP.N\++[g$UpIpt!XPA."?FBW)S,T):,BpZ!:4M26S_lJ6AMXP,kU&3E1V2YWWnhtP+Mmf%,_]2X;f>DWkTm+RF2U+O4$S(8Ylb4]Plhhi9kTlt(dJ4L'KRU-%UXdbV]Rml3!d&lKgYp78<f]W[p"%,Z@9fiM2]99'&^m#8a'$=%-]&B?Vu2VYqAHA*hGfY<,?tQUdom:iO+Z)>+TMP`9^42B`X;P96KalTmidT?C(%uU&[a&7A5LM?q*V;0boi7W"`%b*,*!=0_F$oF%(NGLF*\(T78(as0YO\5VT7JY_%45"VcN2q=3aNc0i>IS9_Yp/&PW41/@6B,XK[3<T3C(ms$LoR#qm]T5)FBTl0bN*WmEUKj*I+XJ%9PH6BYu%T=&9Ts+J=o@+'K6eI=)`?im(`>FGM7;G?Bi6D:X\CB,g82'^sg(8<bIN6'`8pq'kj6d2Gs;.YJ/KMG^Q]]inTUGA^7X/%5@=IlM(0CG4@Y48Lf1bC5a"auL((s;#Y^t\"E/=k0&cB">`kpnQQS*tT2A:Pju^s!B8K-U=q4@;'-k"Ug348<mU5Eu+92NGX`Z:*%0;>J^LiM%PcPeb,a,06<L4Sf>9-&4^1C.JY;(VFt&6T`eA?^<A*>s0&X(@r#HE\/'L015V64ml/j(ZuJa@M,X^^UZ5KIfe23QLhQ%jE1b_\j2R=Z[SPqN`[##KcSU4Y&Y`MfNFf.,T@UkC!VUhKMN!d]+S04S.d*FPNAAG/P/])kMDtqU6L'CJaON2pCNh7^^r4aRemJ_%U%hFg:kWf-;-5>nc9o=CJ74:8-97qmZ;5NO=\59B>kWV+,56dF=H&>;`6&MnZ07&'&K.mOK@u<aa`/2WcX7#B-DHVjH:5Im_'I-&%D4'*D"qVZ`W?YNBq,=*ILu"SVI)O_'^cE!BE\ES+$a_2"'>63/%Xdf%Ur4MY)BsE)Z$sYb2"=c#-:$ddF[25jPu/L&H/Rg)rmb]4%KX+)^m.];mf_IJb<3h?QEQfEK-4M,Q<0!XVb.*[#+P)]0=ZLL?8Os]\NA%0frF"SH+I>.Y<lL=#E\2iS%V]LfHoP[cp<-L^M*WRB%5[Jj!:_YA39%\hPDd]AGoQ]]n/H_#<,&CD%/2d#\A-3=$Eb(9LrOJ$2E6.o]7>Z@P;&B>SllM0",&.OeI9+T>?I5orU:[+DO*atd%-/2=5acbZ$O,G@l[gtpYV2Fo5Y.t4"M$RlJR'%:O1`HcJpEI.6M),Qr00[U9=F6F4`'f1bWLtTWR_&Fg0eR][-kCMPn^k71k+OC;%G3(h[Yg%3X60Rn3(bsY5&`ba#^@=?US4Yb[UTuSUnN^7I,@d'5+*^,b`,?nZ640+DTd5BWR3`B+$TNrD3#d4XKhbY0#Q,WUWj1tT%#WGFDrMGAYOtP0p*,:fJ0L2j,6OYP4m[P%oKOaOOoN?=^?[?[K&T>/"_(\tWP2)m]R3(Y!cDM1V94)p'W2a7.=K^a`%.42[?-"Kn%0S,="P]JI9S<3&l8SUQE%%Ll[E:8'K]WdX$>`o.L9hb%&DggVQ#N$h]!-U#9_=B-G?t!L`]@a"5*>j6$SG7n\5a^QbZuUdXOV=ia%)n@0$3k:OGPPuK?;XA[B>r'HV>6X.#HR9LjoU9a<-B[6-^k$e&im8DPBXBn:7b"*0ba64:lQ@5QS1P@t<C*(<e4>rbpqS*3Rr@\V%'EEk$@O$",0:''+#6E#+QR(nTbIA`sJFJ7(YWl<=#%JDfjo\WscqD%I!\*XOerRmHnH[)\RFhbFaChV\+s&>F]u11+OSk/Q%O*2)%JPG95_-LQ9TtM74cE!+ANJIR`Cg<\>p1JoG&Ge#/Nt",-!MT-8G+q>(C;gN`B0Ym*Qt[$93]J8c]]<&A74^>>R+B\Gk8ZgO6.6M4%#d&!cEXF#P`VL%Fa8d)jcm"0%LZPfShp\<gNB+J^,@sL=d/k2C!_47jZT9F&S8[BR63E%s5WHWP..!eN]aSJ),==+>-R51HMHg^s%JaL!H_Q'E`m8F`r(DWuG<3/?<=X>N'B4$G>[4q`R@L"SFRkn0U!i^#![tor0:l-(+]jd'N<_iO.F/<oH*YSB+^]K7Q\CPP$JP]eF%s.^;GVHT=),`onI)@4E+anaU6iGcl6L'42t5/"l[6p1.8`g7`;?6V%g#^]==-GDg>JW^ZV.D`)AO9VE>=Okh6$[i%H.rq^<J-&L;%Ia%%/$/<K%VbG#u6bZr&A6rA`+g3(P-$!'D0KcY2FcQ(H8m]`g8CffUPX8L=Eu?h;hc]>0TCW($.%2/#%+tk,a](SOd$0:H=miF)%'4>M7k%pi=Odg9/!,TlgD^%3D&^r^E/eFt[3G)$^:Q>k4>f<UB7;D>JVlU\r2C&")C!L;L*(`]rPUg.##`DM-a;nSjSE9];O<Ei0%Qb-D*LKV1@k$Ktp'Y'#eA@dK29"?oT"*Z,gm0LY.#aj2IK,O+@#_h%Y;[9OYei_tFj0"1,,n*&E&;)>I8K%^Ta,$GB(Z0[5$t<Lm%6,\UTObJ[*(OS-FXI.T>#&IrT=&WMbSE!+I!BL_.-Z4El-05jum#!HCjSQ*&iXa8I8P%e&P5`P9Fa>=r..j1lolN"lo\0/.Mhp<-%I*YuBg5t6"JKsKpbJ(qj<4"@]TMN;+!ubetPD0]"FG_EZ7!,'m=rEZ'1(9kJLJalG;qrQ%)f%,?6;"TRBj!I`Vo=pY/RjT)<kSWP%W_aH.H%!DqhYWr8kO!PSri]Dpin?S+&nDc76a,RN[LU)mVuY<7+A"KVKDjeoBWGB#O:GB^#\'`#%YJ@&<!Yp55;.fE+K1_B981B^%,ib?s5p0V0$XETSha%ZkW$JMSjrU0'ABTk;6WVcJ07W'!MB_/LLm@%7#R1PS#.+Y"jcihuHQb"U:6U:$GYVi\iV[,0>dim5TKP71%+I(SR6gR3'8PIH5PQX_"A1G\d$;3k(\ZJ#7We1U+E&g_ig;Ukt2l(6J>AM2R(R?@3e<1#9ZUte\lh]tIMQ7RWkJ7<N,3C-1M2*Lp%1:/cL<)aQjYh:IbDeETd#t%q2WJHsR,i(Cu8AHVu8V%'lHL)8u+`\`LP&RLj]A^%8@I8"jJh8&U<c[>qFnRQNMc%Hu"nMf'2m9,,%;>$$oZm<94m%Va?(UGC2.I2)=`Q:nreqM\!8d0m3E`"B&*2KHd:270`=kAfNWY$VpANN-Y$UP\npmt@Gcj#8n0QJ*d&=7&'EoV7V%/9`LNAt787[o$P'emHD939G*ap/Neh::(Hr8fZBSif<(FK]3c!*3F3+-O0AM=C^M<$*atV&oaGd7Ma1#]OrFT8O+'AKUu+3nKlMM%ZOfZlPUB%RR&J.:B5g@r,O-brR)"!L,MecRbo;=F!*>m9@%8LH9C<$m^<N'fNAKE\5icrpUfBC`A*<H##1beT>8=]T-D!u"&`['r%8tNuL7Bu'u2!<ifV1d)/Z8,nZ@8()s3T(K)j,":+[-3t--+f<G;.0/38eU;()8hWSRJLC%5<S)]fLHQI#@ig(7q1N]']1,d6B%tc%n=DLX$]^LF<DMa*AnsAJ#$**c'4p;$4j4I(NVk&J/V]W;.2.\Ve:n%VTJ>'H2]p0T36<T9r!,5'<.k0.I6E"h7?MLBG,?,%`\5C^%P+/(OG"35ecqg/WqGg]s;M(O!^-'8%nJt#>p\2L1Kj9ABA3`7_Gp`mbjBN0-,(ZdHPg;9.`K<_c=IO.F`:\4Ie'.7&5]DhQ@Y_B:%\D6%9'hb]=BJ-N\RMC^bg[l(bb(IuRA)-&4iB=#?8T3Ds@T=_l;HJN=&guU50nWn]Sb<4D7hQ;^*3:=HQ"9'-BBXDCZ<.;_ae>qS%&2;9&-V`ZFNFMgC-'\ijOZ)"TN"DM-P/C3\ggl(*$BpJ<46i\_cT%i[PV=lF%jN6/d/+a'9bC%\<R!Q`\Z7(nT2B^TRE]3O4'B"E%&u?"M"OgKq.P.j$iGp-g!IE-JJOW12/'VhoTGbt+'-fG0=CD5nNY9p!+EGU<-.>MF)RGPWi'c?;.ABih5RS2E!spq\R"Y?*!B]uF%H]b[cm%TTAi6ga+a'LpJqZ1nL)Q1*r;'`9\p(04_A3'<rN-kkjV0d/,@\5G@\I"+VOIiao'MBWRO3augm@YJla0BRg:ne2^5D>9,%PLGge0&_UULaFbjLF4c0$(6).^3#:U?Al[m=H+T?\Hj-cY,FZ'$-eU4SAs"]3PuaY6lT<#aeFBPK*=lR8$6kn?"SZCC*4+F<\?O!%A\oY,!JLa'aV[A^-JDHJB=)2aoqf`tLG:*[N!l;Eq(CIk>hh.!-13$hj`04[q'm$VUtGh3?mIhb@gT,Dk6QUObqbnK0"j,Ij&_YQ%BYJSXhnfud\jY07CPdR1S%^lI+Gm-8a,,<oY0U3C-pDnZZ0u/T'kRIke]HH\,^^G@=m`bFj"rJQCQ]GSZ`=r8_VM%+5]8U`((1sL%O]-9Vk@%[2-CSM,aXWGV2hT"Jlj""[G[`kaJ\,;"?rMH>p_q=@E2:\rRnVJN<j%*OdPWFL!h_9qiEAfF"h\LolMsmp^3ga-0OXSc%N`epTZms41O>8?pV^_2l"q7?/cuVTm%p;.$B)L4sQj?#8?U>B-[l7Eh(T8>.7!K!*<8r<$ac/kQip-t+N$q7'TY/))>Pp0qdCK>W%(aX*.V`+g]oDnS0kG7MB^>O(H<R&Vq0b0CZHWT,FQ%MVF(@X]5iQ-R8^:WIA1[^j(+OJhJB99WoZ';%eNU3*5'$nWq9Ch2M!?R)U%!OPhe$ojcT.S&R"XSD0g6,4(Ym#M37k-6[9Y*kC,<K'<Gg(MlJY:SS?7WLP/ZR<5VBt1GLIC+Jt&4Xh`=gVb6nXsHDlF3s/="6/P%[pPOKRo'S-9*OE1nhN`8F"Uo$pT"XUT_nDG>='WKREp*=_DppB+(opZ9QHm^E7t?qMLSIOI)C_[#sShP"sY_W3^+H,d>_aagrbC'%MHJ-T7QQ>=0Y%D_o]6]=<r\%H;;&aqX=8-<e!qsniq%TG+Y^925B1i]K+C1s$Csm-9Ak`=PVnlG,(\n7*NBPn!/I<Hd-3W%Z,1d&%<+WY!"KN0^$;D^[)A'6U'A"Xj=<,&,2"7'U+CK2@P>F6.4*:X"Jg=P*5<-cQ2Q5*7\7r'*5S3B1(VtaPJ8)krfJY$p(.84IDK=2l%b_<#DHuC7?ljHF1!!`4WL]e3]"=iA[eQeeB$B5H;Q69/j@PJ_E2LMD'dS@Uu8gFnemTYhYC"f3eYV)Fl<pi"[CSTrB(!''p,/HiK%'Hefkof3&rs(UrXFt?:H/&<lpIu"mAl3=QJn!BIjAl(m:E-e=R6k,!hJ>`sTW1&aF,-"`knF+EL137ZokF@?eb`!aB;3E&hB>r`A%rU+:[B$5i1"g$lpBFrc#;!R[,76V#u">:+!"&R43;u3(*.CR%q,AaZs;i:kFMWDuIGY"%i>XQl;b4U"+AMJR_op:-hmL*dSnp_",%^4p2?>=[Uh(Y>K)'FuZ\TJ%CB-n/jAfg_!q+Qerf_.F]u0A+uAni8e'j[5]bnA%U3Y7?C+KLXu=/eoGVLdg@#hM6UPm7Y23-0lO&%^a_df?s=`9`6]q3@b^_aNRPXl$SWp2l3eje9U\PX#e:;$!PHti::+HkSBCtVEACsO):^lAMlicp9J-grM[fn20hO&(2(-juMQR?:%]GYoY>0@=W(eu+b$Gnb.C4T./h*^BW75Y9c_HpqY(g%<i7EWYi0P4&ikdD,5(D'1bfs'BCd\c^Q-r1%.D5bh4>7dXZC$mT%a@3NN%GVU!K!])FZE8]*E^5uTFU*1Ctf39H^>LZ`437#B^>%r53K1o<PbOKj0:%VISbW3e]'c:VVk&XA"n6D9:5RB';gp\K5..j,MAqfQ`%9aeU)KVd45aC?\pTVu`G"fI.J;(e%]*u8`Dfr=4i)gMp,2A2V0-l+9mV,Ne7&F_=ogchcn(19EE",$B1^`?MEgYt8nJhfb_M<0Xo%>elH@)?3G*nA9-XJ?#D"lnln,l@D\\+m'oQU^,9c&/6b+[*0I(FBf0]2aVO<!Ga!-#dK.>lNkGaou/8TD$h"mlDStT"a;sV,h?j<%&%X*^9Ml]1d[)0ERudnF%N=G2=]/F&'78;E`35'SS_#Gk2p"Q^H[X@tk39c]MD)$(Z-;CB^+,PV=]j+hMAhJ[X*K.mI"cgQ65q#Q%D,k9NJt)O0@JUZ!P.!i1WN//0]A+.-_'46AY"2+[&H]T*@=\rR>Y#=.,D_k"m&R_DjOE;9'PGc'oC9o&=fC);I&Cuh<_:df1!&-#%Rd>D7QA_eN&_MDGqGH)R+SnKEOIBE,6aC\`:)ERQ#%0E(`BJ3(E#j\fmbf@'2s_>HKGI;H!g>GtpH&s@;k/EWLh2:M;k3IuSD%tF%!'[PL"-BiC1Z/p0(4@f%Q\BtSHdgM>G?E?H$,I'Ej'\Q\@8,)PH?rLU`iN[N#TAn46*1.'/r2-<Y&pCMB.)Qm&nqNm<eTe,`am!I%('_9BNWgFT04#K?bfcY+bQ]cK,7%BVY^2Ri"3nLlhbMa+G.O0mah:Q97R08fq"B[5HYdDU$?\q;LE6bb?-oW&[e*d;Zcd"]OqiV]%8s=OmQk!F\`^!IM`&TQI?NMN=3eC#Z'p>ue]INiMatV/XXqm.%B^eEnbtYEf\aY6B[74^SiuSr'C:("3Wc[pl@+I;(4[iLi#^jg1%)@X"QF+G/#1Q:rE+a;Dr3_[A8eT-i0`'ONC1't#"gu)3!+m:lJ-fg&EaA.UKT*D:s5s0-/<T1]C%0.X%qt+;+=V`KY.rLfBTYX0-%P:kA$ooP*;X$r%Z?nsE)U=A/fMT[6O+:>RYN^b@X`5pGB4fs;7G2-&Dd.6CrNdf/X+"MAa!It.FAur\F[<i0F$Ml;3nIXiuJ1sPI%0W*AX<)Lfjoi_)QadG`,Ze2i6dtUE1/#QP01+j#)5XH#3NLR1H8"_hq#%SFkWbH*c@uSW-Q.1acZ5S&"`9-_^5[7`tjL==N:lrmK%UU,9<(BQqC-pa$OU<2AhcV\pT;fguZ"@'UC/j9lp*j`M>/A11>+!a?ja46eC$qel1Td7Yla9@HQ5#p,:Klij2<EV+\VufL1.b7_-%Co1>M?91b5@&\*[EYhaod0(jU\Y3Ol$Z=a%(Gr.$CjMN*K[cZ8"#lnjEg\jSZE^(Son"U&R>`mgUPqlGf`Y_WXPQd2Q(4C5'E2+n%=h$Ladi3!S%7ph?BuFh&b3^D56-"]:0VBc'>n`Lq-l9LRURa#=@a&\P;&7n)[MYC5PlRQ<2HeP_-LMZU;X(@KX]1GC+2eC4N[`rZ%3SmXH8O?GY,&4;_NUYpXPMA&WH#=U)5o2mfV*Yj!@cjYD*FO*&,LN>hn(!<^QQ=M*I!'&aik:qr8obS_[>eAkRLmG:4,RiLm=qER%]Rs(`Jk`@^Uoqdt8k:U?:g2;*glSDT>Am5TB%M=?65q[%Ri;a1Up$_'0=D"5KWuXT\]7P0Z(HhRDMphA9AbJ$+bljQ%@Eg"71\;V%P;W8:L(]P$YB&a\+mEIeioh?@)^_#Ko)<X$IJ_I=deCe?CB4;0rC[P'XcEqV]uc*0',_3Bh$tEDh,9dr+He0;hKV"3W$8A%ab$+0%(;d1dU<ok"ORsI_oH]R"@ks'!%\q:-2H3k!ZiT`\eHn*`2\dIUF>q&Y_)j%U(P4=m\)V->]arH?4N$\N.$6YTGa8<N8P%*N'n.qb%BR"7,Z6lBs<8\rd"A;1JS^8A7*\PT:3Smc+AU&ReiSNMKjH/_1T(&^u<M:hmdt-*,e>L(NfNnXga$O-lRk2KS?0V&a8_SsH2eJ&b%$&diih$0`2GO![_lUok97N;P+QE*dl_(:FG=0kXFmb@F/PcT/.i4YYQH5>AHn.pKMJm.O/q4+h\g%G;0Gn3#"$mfc'?1`q!MWns)%G7^Vdd>KDn"*1+Q9]?PCoK.*)deY02YL?X2cf&t2=FA/;piP>"[Mo`X)"h(SQ!19pJ$fJ^+rrSm/J=tJWd[&OEf!;FH_6gN]YD:o%7BCQ3="-Taj"[.U5RM$&5]nj:Fl@W=i8bPi4%(R6mD*p*Pt34be]QU4U@Eb"W%pO-c--*>8=H7n,T1K.6X^7$B0Orl*AfZOBd[@+%P'3WkMD3@-TRCuBigd32ea"UL$REQ+nLu*fNF'"7-A2EYZcFuUN#;!JH.AS2"H`TVU_J6N19FD]B%o:(Bpb@k9[,o6K?+S%++Y5]%o5^u&rl8!ad:$oTG$3kW9%le=.4/MTAU8/^\0253:7"D+Y@;hO"u7-"[4WOjN#Y0[k4Zn)P35Kgc'+0<=.c:811I9?^An'PY]KeV%cPdH.NoJl73t+*eW\;EG:PCW@\8m?3)/*)k9%<;I.Z2SB+^bJe@%]+.f-h-K6C3T<fmqg_[n)_'TO"P=CSgDC235Ms9I5[dio0U)%'ag\)l*RU&ID>Vt$fK2r!0/Dn$c6ZLCq2<,OhW(KH/e+a'm)$I:@..Yn9JKXG[c/13[>!-7C$l_e,ear=9jlIcH992TiONAPEb+'%L]DQiJ>9`C^bu]=86f@&GZ5#aDaiNCQoX:*A8hgY`!:UY1J/-.(QQM9_!?TFr#HY]NWD(LBp4V:Pjs%h_D$tX]NRS_W:>QV/uF3$%2+\*r'*o6Q6l/),dEi^K'&XDRF`B?nXTZDA"ka@F6jrLC.5R-4-k:rLJe:JTZZ&2*aQN,)?g[b:kiH;;XR-S?<ufM/)043PGD@Sc%91[ibnH"<OR9+B&"ZP4`^+.EicoH&B)(8&J)1VbF/%/&jL-YM$3G@FTn*Pcd'-UfFee8\V/lX78c^Q584`oNrZHH18'H)H('80F+%F;m3o0RR3t["*.&I/PbC`N,'1"$ml=K2)sh-MU7_9)KmC9IfL80TW5t#Y?]X7+k9>U-pfa*\mZr>pbio,Z6i/Th\NirW(RM5b^5!%Zt3@d"ou@Bl@d5T;j_8&X!>U*TH18)"pXru.)UW8ar:+*de*dQEYk2ibL8WS.)BtD1asX:fe='Op`tusJ1r@#*7Cc!H7T(iTN'84%-r-uN9Dt.%^/hs3P!%OZ_RebnhjUYWlF9S:(sG@Wnnc3SGK<l5LD(*o\6jNa<6`qu0Dfdl9_#"cU[-\/IfK#eoMZf*1up,`>hDQ1%Ye;IRH=.:ieS@n3oms'>!@6t^HN<Z9:]Eid56._-%&B5<7A+V.?TWRM*%bY'ae;/L?o3S!?gdH?HjXuR(,$I"+9pY],X3,!;k[6u%#t;^)i,"s+5AH*L\B7h_;jp>tp?*'tT!A;E)j!Q,rKV9tBs[F8`b_:5OVlSqY"(PBUibi15B_!\IQ^FJSAr:YKgVHL=TVl""6,Zs%d5slm!MCdHitOmZVeXo-FKnACcKRll9FY;]Lqa6)UCSkO&doYm9fZq?W:.rI#d?s`1C48)DW#[aMFRi'HgG*YD'Y5[#=Ye%!*74r%JX@:u;c0>XSZssk\]b1MBo4#NRKan:*c>/U+HrY5__jIE)f:;1<b_>c?kb4LCj1\_$bSGoap&E=O!MNE6AQ27Us%0QPr7gT"p=<,%X`=nTA]N(`6CF_DNNcZ\YtaY;#/oFtl%.3V3osDLlbjjHP"HR]':A=lWj`C]?Qj:+UmV^GkUC%/60Yg&\6EKoE'^-Tk":I1=75@b%$V<'26@/TgW!e^n&AfbMLL)0lF?pp&Jn2$Hfda-gn4mXP%hW`HPjZ6%mi[^P86nk/9O=%niht&OLI<"OBG&<'+$*>h+rG'$RR2%'%apM8WTKd$8![J-cf3nfQ6s`kK.s<Me?;sM'N&3.R#L>p^R^s*V56K5AQ5g7A=0LUFJj;d7.W?u=p^ifo#!nS!fN5mr%i9qoPX:Wa%pTSqD,7_.u%((epc`(Q#:Qi,Jl9n[^CL.1ZTl4,`C$X_+!Z+3WGL?t[[WH>:#T@;Y$#D)Yj,A%m=]QhdZ6^uc_6L@^_.P0,%G0s>%(!GZ:Wp0pTlHY?1:49-gU6cKZ-^`/K5$MN?K0iFu,9o`s/>S/NUHrfcR\P9EWN(iF+`d(SCKPH5'9D)n1)_ri<->JQid)&gUc'6_%*;U=Z4;t3=D(fJk8kK-q;SU;]#O?c\dijZ/0d-5ub2_1f38_i]f6s6Q<.S0X5ke<"<+EoZ^P+u-8N](QL-Z>LaQoYikpb/.rt<9#%$^\#V(JB0_3@?/ridF[CgjX=.`"h=-0Q]kTjTNV?&:9=di(bD_fZgIg<Gr((h2i:1Lo85nKd3ARiPcpdabgbF/1J)0U6V('n]?\u%?^"#V:C0g)cbr3rcONF)<lKGm3D.DYi@2"S>^s>.>\h=H78SGAd;NAi1mUW#OtU$.?k>+d<obMdAfkq:OB5rR!ZY`:K9/+$Zbr*c%8@7K3-4OZq8-Ond`@WB%[jS^hRNi,C1<K:KakWr.mkEQ*\Ei(i&N(-)OP(5[;3FEam]/[gNi9s*?c>/$1M9scruRO9_,f%JGsM'[%HEud%m%WB`gih;Pjo\-QW!o,[2J!8LdWoFjXa3YqfNmWZ;fs("jt?59;.t,D<e,iY\37rm-mA87WoH([JlC6s%Y@gH7DV^(`.S]W%^pNHR3Z86X2$V'*9)&[f%@ZL5YQ`D309RmakLp>6WD/=7bZU;*<JN/C#dtk>=&6YcfLRt)U_%VMi:k8nOVs#S9D?l^^B$eLTaQOW%$j>hAJs$</<3?qud-+HX*/:_T"jWPWfE+^Wo9pdN;bSH$*17\mFPA;gUIC,T'CS4HpJhN"c)I[pSgMC-_j_;S"5sus8p$(Hii7Vm%,5@lWOH,(NK'9'oIA:7+==!\\*<7I=gLG5'?14KK&ll!Zl%ZSEh"`ir7rqW1TgD:J<o>+H.ZC>u,L"+nr7'QDgJ%[9HOlC)XXJha%$\%Qr*Zb(gGRfE0mU`6/I=J6/;1Z@<hLi7qjDTPA`u>0I-cB<,Q%2Q9ndd.?N;)r5\"q)r`I`S]A:_PXWHNs,rQUsQ5`cgN(nsmK%0e7O#1GuS&$(_PB+cSe]3LSL&K')_RAB+Xm/jk*\op9%blJ;E2^A?t&&+>5mq<Mt5^Amp$n"r($5G,[hn_HFH)s5<ss8,mTr;P[2%GQ5]#r%$oan[i4HB&qU@:#YeJrg.!KNQLbZ]ALcS2*($96hZ#tiSV_o36r7iUTZoZhqrk\LO]8d5$H#RrD^'%f@Re;e%[NeTBfk`%p:G8"IJ9cs\UXDRb:eK1*7[jKm+G`poC\`irp&JBr8F^6J+qJP>(s`ijYoDQp$hYCYP4u@qc@_p)LqO[5GN`,LK)HHi2>XQq,%!B%GJbdcnO)3B?Zr(6jUZ5"na-kc[]T9/%;U@jiLe4YI<g*AnZa"hIf&MtLEF7Ds'Pg"p%Rp@H1,Ros2.pqIJ*C6otMF<&dCD$M'qY=%aKjX`*s"DFpIL\9`$I#ZW@RrKM]ML^GMFG-1-d<nAU#5B,Vlo'Pf<i%#)mL/JJI-S?G?i9fDfT4A-)SffW\_k7tQF>4gj`!pIO!4%SgsNX*r4<\TD-FQHfX?Qo!S3_ZSe!t\L$Uf[_RsYg!&bX3L=s'E%+kbFEhkZ=U?O)"0]Y*B-NM*St'i;h_L1-6qU'>#?IN9/[th9%^#i%G\06UHIJN0,+PlO.\1L)5"/-=[4?i&:DdWEFWqX#JHP8]#k2/rXnrk-q^61/n^\RsBkgoZWs8Tb3J):2i@fLX:nc&",P^rOO%#f(=/DHHHO]?0_'*FV7$Z6\QU+2<Xh4lWm[mQ<,^SeNn+;5h;HqJbJ_>Jt"3<apA%qHjaJg*!&k'9\!%+e^V1S/r*)@C\]-a!s5B%U$jh';!?b:=0W!:mkcC@On;XYh+9s,=hK;t/L4o2K!W$!#>eW9^+c%*V;JNMs)@R:J%,NSNMPtCnI?`h+)a:09?:^+Z-uDd"-U"0%)#$NufaRk;@";DG]:4dOV,<Jn&4iGbm4R1Xns?<hZjIJW1KC!ul%T5a$s&c5Z@S3XCmAlLXhuQ&@C**aK5#s]iNpdq]nLf)J,=<9%B:uqWP!KWq1VELO=PZ],)gI2T=d?$(*I0CWj3<]NA<dWd.dCK_/^E(<)TOk(8U1n+`^H#aR*mq!#BOC%0Fam2g83+rRt3)20JE;2%Rco8"p!'[YVuZjHa(UFgFgll#;*.7e/QB%1^uGmq;:.+9D\i[LA%n+[iBC(#1ZuV1aP&7)[^V0Sc1S_Bf/:=DYVqDFe$W7"4&j@7%X%4)uBK)ZFm#>IaH_3!Z[Up=>>C>+*CQjkI:%IV%lP7gYO1N(DBF*s\k\`R'&?3Gc)%9+.955:GH*F"uqt^N=[@a8-"l_S&Gm*jh%1?f@umAe51mLD+Gkimg1_CZW6oF-m_AX:)n=cG0+(H1T+ZC!OcQbM1&V;LEiYq'+V.ZZ\3ZETut&0(Q6!0CYG[sC+(-qVU2eto8H%#Z"nZ;X4uZcN0KPQtHj=p!.VtOVBU^B!AfB5g,3)4`tr^07*8$Yh?*`qJ*V__n&>2]\e0qI7&0**=.c#4R,D)2tVWKZmRm*"iAg'%GlGS7USVQ6BtG2=#K<L"=Ob?0q)B)A>rW\kE?2T*0Tg]\d>:$A^sfkTMnq3W0X>/RD@iqfrQW>o>osJ5>I7&T7UPf<g,AX_[l4cL%A]eH5i-fN#:r:b.Ch@N%ABh07m<Q+E\Xlm]F33khm-VZ+aD8+i>cY3#"Vg,BnsgK0OhDGf[TB3>ZpD=rg$$W9RTkKFn_,L<,Fn+@%!>2"`?'j&1bZ<<@47Zo:?,jMK\^\m6X_kr)G\n(Q3NqhidHYJYQ>VdAQlFe4\Zsh^?2ABF)7d.D>kZcJHc2;IT<_0bYs40(<.`$_%isfH(Eg+:M"j*"sZU2q2H@SQ0Mb@gf_ClG1)c$\MIUs8%=eCKUWQ1REWQW6JN"3-YS-pJ&oZb)Z7h7'^lPgVf]%l*YE7Xl-!4?t3%'=/3C<@2g3[0KJd^Q9+Lrs_/#g:KhBRGc2e<>4/fOX'r6i;fu42rO+E$R1c^0;.JU^_if:[QCt$*k10+B9t92EFDM@>[K2+lL0`"%mP^FjD!RjsoiM"XmV7gJdeI7RKdEga'F$EP$K8j\6Fa7rf7EAo4FRKBK+86^2Q0f5O:am"&D@I7d\g9n7XeRT7M)U-$F80l<N8@W%gI;c[FZ`f#)R>6,D8#;4919D0`oWit$;u(h5p>WZ797Cm7H^3mL6I$6>H;Sa/(VUs<Ll!'[B4NJQC>7dV95pg%C-1W@s\1bVCgLo%TX<A\=-iqMn#)dYrS.4)3OBL,lJKOG'"?GZ6$+Ckol$tb#E.iX?DXj5^Zr$7UAupjBRgIpMVK];+Bf#F!j9*u=A2r+<P[;QbPi,W%%f]N6+:oV=A/ZFU8=0g@m=tOm\E,=K=VhT.q?@*nG!WWDA_.lU"FM?MXaCeEG6c_!7uJN_0+>B@M,thf.d/hJRcGdOaScRh#KZ;A%0_kS9MIi*[!WC[Lc%7F^(<<0+`Dje5+^0)<Ca*AfB8tJ0X4">IbGIE?20/A-jmO63^Ad0e5Ln#9Q@="\iiYK9%q!*K]5N/uPl95u%p5a_"lFT9K#JhF;aOY-fgP_DNNHnUmBOS'b&^QSa\fJOgGF%R7ANb&+^-uehXqka>HPf_$rPLFk^bkpuCuHHQ\3R+jSs_T3CA(0]%.9R'('5L/Z/Dl!0]VLiF!e,1pK5PL#f9=0=!="C-Q&Yu8Piqd=<9,*\a^hY`:hP`90Ei=^5Bh=XZ!"2m`O,3:nC>72?FYJ3S2*5p%p/E;e$#bI\B0)&4doTC=s39Ru7G'-L_m=82>jD'IDsq%8jP)&?2!s1S5'Kg"1?'nqI^rY!\l9\=oRHf1j8]&N@6F2J?iKt@'K+Io%R9P2elApFB2s0opp[A+\a*6Ehp\!KTf9rsOknn[JAkXuJRWHE!H2rJVXf#urOuH(L7%U6'Q9\e+f[e;g9Ede)jXSM?CPt.04:+\q%o=-J]h1pleh0NtJ@?l#hf$=TEV]@>HA?BA5rHtj5_.';)5$?`-1E_1s!\n1X&&iA2(0ZKO!Vbhf5s5t,-g&fbfB52&@.d=VAMqdW%C:K$dBcC62MuiZ%A&6]UonhMYMdH4TP9uik*iA,E;+!ZegsNduW-Nl\DkAZ2oYTe/k39e'CR3)[@:R)u4>]Iq7'!/s+l>/ZC$)Wc%m!`Ajk!B/;'Q%Og=hF[Qf&:#Zg1SM'W&\X:jjnLb$*1SZVLC^E54P_R@tOerrMuPJofqYC,L`t>cPg=R@gq>QI?Dl2UhKL9"7<F,%KBB6ii&i%R-e90@X('?mYT8iT?p=n!!PNqg`E@#L2?l%ZNC@Jap1IEa072h=2&k:sp:RAn]DQ/<Rk&'aIC`,,%A+0$-P%1dpUA%[%Z_;Y,"B[bs7n=4&=aSYKBA?^IiP)f]=p5dSmJ%Wi#K&$)*Zk2oqi'3NRb4Y6/E`aAT9#=7[#nX6N..>Xja%C9h&e:*1#q576*@=.%X;i<QTj#]iClieHCi#^p#1JcDQTi`R?&*j0+LqdA6-N9;pom92#1e(*TRE2DB\%Qr]NTO,#HrE5R%CT!104YYQt,3_aL=q\\_I/[%#^PtHJ_LR]$_&rj@(Q)F>XTlR$A/jb:"EW/#0`-g:YoI_q+@/?NXW3Op5R>QJ!Vu&M#G#8N9j`MVcM&T8XJiAI#ra86%XbK(lH*+%6#sZXJ&O3SccUZjA>J%i>:MCU((o,?,<!V(68l95&;05m^C$TGK3<uq"Na@/AC$ZqqepD6&;.&?A7PKJ1"`T*.Xa2DU)./-'JZ.i%:Q_TTgHOa6\Ld==P=:oMq#B)'ZMue(bUWFN*:e>4cW_#/\5R.2!\Sde>/JWXIU8PT%FPBiGJpP7&2iZ+9>,arBY5I<M+uH1@W*=,%+_d2%8Fi3Q=hl:fF.W3O.g\n=A@G'<'0)G4Tml)rnXcP9!,!JUJtC:G8IWYVTSX)Va5p@b7tlg0q8u%NjE<P?Rl[]gK%EtFAG@;\%'PZXcigWNM(*cpW;&o/3(<u<fli%R6lt3+Ta)i]el"N_Q\bQA2$jEPsIEeZ8`+tPA90c=JJKCo<,^#,MUHrQUoA\<cBP?>NQC0-&%fcs7,\nEmV!_+Ye&Q=l]ISOf)%hMtR`TU_q:cN/l3dHgCnT$NN7q;GOILtFGeb%u[OMWfY_c*a2*m6Q7o0`e<jYS9bLTr(OJQ,5'%nZd[Q>4UFG9AVg?b'g[giJ^TGb]P7N)$:n;Z:<p9K(q5m+6i1GOb'dd[jb^\LOb/EDF(3d/*<9[lIA)iZ;'gsJ4L_"/a.st<G;0R%V1FuB+!B^sP@Qopi55Rh!sBLnre0hOR@5OEDl]tl!u(+E(!@eB!hh&k86><s>'7FY4rch)R/+U8rft48#_NeIcBGf!K*9:Q6,O%q%Z"C4qS"T$-2b$h#I!!G]$+Wkk5R':_?_0Uq)_+B@$.WXQ>REF0rHSS79e@*+\3V;VU!$EVOs+Pe#2442!^7ShD9i-rD"2(DaVoG!%Q71*)12A^/id5',?"4cu"!s$lOY%Z.L"MtT!\V[=,cV5>MU`b6po"?b:c]e"IXc6$pZ2&YhV%'Wm5@qMCs(Inq4n%(c$!g%qH"U2%,h;-TXiU,_FoTW8117NT0@48-M_l;CNa6#d`e@Fbn%IR2,"qogqTRq:lD<H'D]BFNq7i?%(SNk56Cq,Nd@`bSEsUJ##:j&Y5gb),%2AF!*g*jf\#;K[>*m+-=$M.Ff!C.,bn/FEG8I3F'cHG,%+IQTsNCY[HCb2nHe<."q7+p*HXFrfuk<O47bq(+!":6")N@>QlGq9pH%,5q3>b_(a/[YVg)/)Y"#rctRWjH'\%m]i6)M-RogFF>IPM`END9G<3W!eG*.b\rngY";rFE6(@^$m:T`A0sdSQ9&QL+.9)X84$%4%cf1lgSq\Eq9/FkU1#/Ndj?FC)m@e&FO6Dl*rU\Jh`ou%u*4m"9WM)*gB9U#?LnX;o7qYko-NFNp&<Q$--A<)#*il)g+qh1X8V2V\%fe-/+9-b/BJ<2TAi<)%AOie<s*$k8(o$#0%f,u@H^Gcp!`>=X2ZtY9A>#6&V,*]1.?n8ZI>YQ@*08UJCQit'384$!Fg15(,=,-_B%Ee7Pe7]9MZU_-&@CCh>8+L?qFLuc<\!fgDdOI&cXM4s&s(^gKW='k^J,CD$BV39A[]fB!`,,pXcc6-+@T0q=qUqqJnJIip&2FtI)%Hn39WKRO"r%2:'uic+Zpk[>fE/Dt7D2uVhl^F+$>)p%HH1S6t2#Y>Bc.o_bS4UC(Q!e%8)EZ>p-7DTdG='S]WaoWq2KP=_=[NTq=%:f9.1@6i9<n9h4rU4hkrcN!3+B"H4PPL"`N"Rg<EgHt`MX5gL4Y7/:u_7DD#f7s96MLaSA?r^#\"RA8&#Q9TXF2XJ3KuHMY;HF4e%Jh5%eQ1[KO.gi/L)ilY"'cR[XAUhndEc7tf2>FV89G*3q[q06UBPL!@#)sq4Ol?4O6ZAjhcA^9UK.O>%0k2>b5N&[Cn2^9>ei*ph%fRp,?H/rkG_).&)"/m-F^>-?9LPOCi[%7tccbW6D^-^^4p9Y7eoBalCj=L9)kS)j_S[#4LV]@=&KcF&Z-B:h66"/[<Sl_oLUVNQ^%?>Vm+8J&i<WCt)q)V@D(R<M3s-`q;sdW#\X.1POUhLOc<,=N.,K0(<m,#T-uh=M_O!JmFXJL:hW(`1;)#FN:p-!/)W(komMfK_5;%po<EL\^ISRW;YA%@Rl:fODK%bi>>eG(ac&8\7-C.Sda_pC;Pmb`7ERi]b2'T$:r!#Ej(KknRIH,,p*8AYRYtsh<^U%GDBK85$/dT%V=G$d7I5dOn_(B)rbR*CgQkW_.X$I@JboLA#'h$JM#nfPK`ICBRGd8\8j'YZKg5a^[&I;h,FBn_@$>"g$*q?3Yq=2l^n:6dekB;b%(bj85-u"@t*XD]4dCd&>1.J-qoc$aopdP&>q+E4jED-'I+k#33Rt4.p<l+VG3\V8@"fu$lQd7_Sl0R@,4W/=t5[)L<UlDJll[?us%QE8u/S4Jo=eE+ho<UskJKLkP\mHo6mS,Kk;?Yr$fkUNt<N&)@Q=VB)Ia!Tj.19Wd>a2oRf2tHd'USE1a6?ML\M&(sT-KHmVKfN6K%YM#!pb_N8E_*u!ZdJbpTkS@9^Bn]JQb?D^Xir.-AfYF1]m#id$+`#'rie!guc^HH4ZtYhLV3uh@bIn[f!e5KdGfZlo,3g]C`1b:l%]V\I%>SZZ!hA6nEc$sK!p_0$=Od%1HjhP;59e\="ZGW4>H.>J6;>"2'.n_%e/.-aCJ5@[N1S2h-(1NW]_N5T8Bbbhh:raMAB'n#E%kl,0qD1SQaZa;4lrD0r1`[P$,'4HUp:6sIP<W#MGSEm3OA8fI-2)DdG>S\<b3h/f);j\8a>77U]bY4YUR-EY$(lFG?49o%7QiqSH%#$Nh=J.6la\#-52#2,=02^]k28[NC$\_R<=la!&o5#&)fL[n%X#1>U%:IZu[B,%\[/.`[rU-9B%Wpp=M"UF0k=l;7l.l&EA%NppR%WGnc-5_^o3hHEpIOL-]4:TW`b^F7>lqUJH.%F4g@%cD0Drkr^A7BaN)IDH!SK5ps>nm&gg$8*Mo=#Jom>Bls;Cf_Bt4S?8<,Qhc0%Z28GN\U6]+ZqG1_QF=LgTfZJn$(gM1XHuZMc;.]*_YpNr_An?)41WS</MIfpjI2/r/)q^B1.s)$O_'Ro&!\FrjTiTBS!8b<[dM1&%$hXLFH0Xh;JB4/es4>^#9Tk`_J&*LXbZ&+>fGBWMUE?,oQ\G,(O5A\0E)uFL!*:u--[&uQqW->Os5BO:,II:uCV%)P/sgSEMNbJX%*dML?bt96;6]qZnF^1C?)&m#BNOWnf!P)L,n8A!B+pZ-tX?/\0D?;PC70bi?*"?@STRaWU:mXH^+^[Q4<\cqB,I\AYPL;SG._$G8%buW7DH6bsh*b4"""qkGJ.oa?9'q-+)^;%*5A7u&*O=*fW>+*;H?.,*q)Ba2:+P#4!3q(/A*@PI(pP]4"1j*8/JcS&lT;uE1"rT0r%!:f(W:b7%BpKZX0Ch(GrVN+C?oKc_HHjQ<P*0TI:ciLppIggdIE[='u"`f+.4QXPSb0+/N<5r,C+;L5'/Zd8IOTrq?B!m`:1'e!9%fNT'4V3+J(kGFB;A%Sa+\5^Bo/X%!W+[Kbk36bbk3h[<2Nnna,H*9:h[E_q)_$`oB?M--rDs2:q$Zp\R/SlR+OQWaYrQPT8D`38.%4qR>Q;Oj'4pEKh/ClR6HI$8qjk/Cr(P/9/`CLAmJEYgReER=fj4T!7H7+DPZ(;eLW;k'-:'16e-<u&QJAjaElI4HZ8PudZ+'cOrf%"-(kSf.2hbE!(ZT#]:gEG;'SqofG';;"Si\#H$`Q[E/B7C/caLZ"%8Ad?+RQBFcJ#/Be,&^E^cmB-71`c2qAkcXVRXXQDO(]-cAd%aS2]^7FnTjMmQq7Ri3%b8UhsZq\AGCEREEV3U==Z5!tF5:.R"X^-2Z2$;=sX86Yir!fBYk$n1a!:iK#t(gNr(b3[KG:([qt5a=>e%F()Nf.,sq$:eP+tr>Ni!VE`ekKFSPmX)cS(c&I111rtaH"6jn/"d7j6L=7]MU:10*,[nuO]9/KOLU`!_U=eR5P7*,<Kn7QF(d4XA%;\$Z99A61bEY+8ids`4+*-gbZ*9pZ[*BWkX#:nd0NJ:k$2RtA:(6T<n@R*3T>j8QE*[*]n9#_!RCEQ>7J.?jBbpSC8k=el&FO0gR%%(FQjbL5,?=%+l.X5E.Me97ohm+,M8at%ZtGptb?$9$dr,6Hf%\i68e&PS2lEA@WrAM0g:Vaal0jfli_Sk7DoH!(h/+#IjX!)\@K%iX/(G*7.4j/Q3K-W5o@)9DtM6B./D2$*GYCKU@Td=IAZi#q^BK@j#XrFKr,h-R,t@Ep^qI,1d.?:R9XfRs*XB`2GiYl2HGJl'8k%%3b4c1[t#Am2q(85IJLI,'g+lWDP?Q;CKMds6NSjmJ:MC0lNEGZ-5@Va,VfS`dS+NH4Ek>3*<DE/;VP7f(NIG;]5`o`TScS"!Al^Y%.#.dofC/OtfG0$FjTOZ)k%<B?Y](Jhce)CuKV75XYut8@d2+[U0q$XdDB5J@J:QV\1Bt":OEu8deN<5MEIAF5li>\VHAQIfkWhCi%H.PaqSbM.pNtZoYHW3/YF`Jo8hnE3]3\duSWS<U?!A-aR+SY7(iA:3e#(r*PDXC+p@2@De6U^>P<=>iG&/.s%p0BYWYNOsS#20eP%J5T`Qg2,8MLV.Yg];;6B]mD@@bV_GR0+]qFjq['2\].3EK*LHCnL4\[i(ue_]HT`VOOCI%=9h8?+AP%Vp^NhH17L)um%LZuA9O.#%lpB)bOBA'tBB<TVAeVN+rQc=%n=S/e2'?de.PC2M"!/u>QtEu=4H]-qr+JPL>C&lVq-C&QOAWH,JWIL5.I5Y9%a/9G`O10YVi1P%%m;jZ7P.?F#DS/B\Wj#,C!s2qh?6C,00gHSA6&;c\pO(G8MZ-`PE59:Md28iKe^tU^<?`mmq9\7aU%YTCEHBKZ6AK/<%a=%+3c,[=%^0s)+;OPKa9&KrfP+`.:CH]J<GE#NAqI<t1.WP5+1?N-^,h$urcI,0NE)`GE3tX!>CMtK:IfP@8'XAa$era$(l<9.+P*<V;bOaCM%s5SmjoA@qA&f-a#HcI^cK.%$rfE@9G)V[K^*01^FdZYJ1F.?'fNV1orZqBid(_D=p`g7_=I6^?4SKe:G0U5;`/j0&8PT)Bh<Hn4=%NM#].K]/)79o"6PB$;T+GPOQBcGksm9BFP"'/.RHs.Fo!<E`")1SA@s=R%9$iAO4k*>)2(&<R%^R7VfkU"jl7*K]#YT8S";>nSt$%H#2\ZE!$tjZCAf\Gqm3&;)&;/D`IUg1t@uK,CL,EdDq!7R[b-?kATDek/n`r7O_3o0]Z&(J6A3k-qQ4m^bZR_EAB"#Es.0=C4[>Y%mLAidkf_Tu@<1uqGtQ\)j14II)1P+XP6`ds@>J;?Pb3Za2^JOUV8]!j\rf0/25WLR*Z5WKdfVm/8<f,d7m7(e:jB`L&Vf^J6.7f$%3Hq(#o'sYQi+2!)UD.V'nE7Z,:36bNFRDJIG0F_$`Cqr&/UM/Je3m`Tm;b\c-Ys.6l<ZH2&JiGV1H't;Is5p";rdHn+Yh7M5N1PD%RZFIl!K\Qj3q9$aFi$2Ub4G21GjWJOJ*3Bh&C?mV+Tht$ra:[Ub[2WtH,4@bQq:#P!rp$2_s=P[E]hD-`:*5BVRm/j&&EH1e2L'%%@M4a-b2#Csa)8l49^Fsl#OPPScr`3>e8CV6)UHZ4ojST40KP&e0:3=l%[eT4!q/4!+Xmi8S4329Z+TRQBPFDKa^8$Gl#6TIr3^L1%MZqNap&R:r#@PrW=!l7ZJe/7fUa_GR/mQCUbnQ7(p\ATP],!"3<!HLRiVCWhFKG9-'D=&ce#@-5f[PKki5dfQ`-$s/aPt?IFbf)-%?%s0.CN+`W"fc?uSl12#5G.=G0*n%og:%C&cK(\f89!H0-bpm/^+*u#s/$E;nuC:`*N(MQehr6\98\/pJmt_3P:(jl42'A4Ghahl%5BO5bh_+tr3/\-QU:D6t:P,Yi]RI+Cs"dj]NAOZFUkf9mjR>E5'V?"m=^5Q[5+Aj=r)hJeNpZCH_&u-4r_.kVeh[/V\BEbH&1Oc%%ERG.(l_EHVXDJ"[$NhooWqASVroDKsr6j@<-GYV:b(:KqdB0niDu)8iCT@@OnPDal_OlhDb)6;r.G?$Mp`_uo*#3d(iasgIQ`9)f%:YA8aI04&7J2hCoR80#5lffhKO)60lJCQ$Y!Bb^RNgHWp'(Tkt(51=r_U5QeL-SWT)\0h&F?=8DfJi._pg[@mWCYmgrN1AeSIsTp%$QfA<JS9Y__r-43CUh\[+/1&W+gQgF3>=G%E)P*MM5(DA69NCQ/_W>2`XX;mh99h.Gn!qLL4=E5=$9Q3LX)X1I%1^raF@]/5QZ!m%*&u!YKf$%'a_T2nU:\2K^,#%$6BY6]^W`bYYtdE&%3Y4"^kLTg9\urM""dLBn\a1\;!qe7E/$ChXHs@GB`non7FguR_ljr=7HK=p%rn<5h++R(VUR;oG;.FG-TeT"k_I\g[8\B)\[S:6V3\$?O*a3^'^S$_.831(IMEQ$cGU=Kj:`u#ULj5R4<po9+M^di3J70E^3=H;e%]gSQFKDV^IlPY]B=g6=9rV+>X?SlOiTTJ;)hj!4YX@jPjN8Rie[EIAPr0^iU7E=V?\U+^)Lb_Lm=bM*&s6&IC()ER?EDND54S<`%%A]Z:;8*Ff!Jf]V7hh,l+d.8F0Zb5@l96/+gIS(KX>ses'6>Y-j`KZ#A.DF6TS\'dgDs!T](GHsK"&Ma_;].d_33No%&\N!_UR#/e%M-Li(NqHC#%7LIgn2]:3@,K.mEX=NI("rJWYm;@18rb*/3DpHn1kuBuls5cd!5"u+'^g^gc&dJW<lBP)qK40*4pT2NVNAhK#AW%a%EI9RAGs+J<N!RTti*p*U,,/NX^P5J?B6D43bnY)1n>pQFSq<W>/>nk#%5X#kG`;JuLa"M3RYCA9/2'qK6047r%*[`)Sn?f)MfV?e%TtR</bB!]a]NiIoA4#A_hF^(,M[7lL"Xk\=ecW`3a@'Z+)=&g%E--3\D)IQF/qR<DHCr18_MuTgE13G;Q-<>t1COo0$iSAod?)E-%,N6H[lRe!MW_Uj,KaoI;\aTb?+po8MNfc'g4J<snVE7S>hKp&P8-OQA@>0W+Gu6DsW8i&YUQC/m!f'I8]3`"D+[@&E:HV7h/8Gk!%/n&R:6B<RQUmlm4Ok&c.Zf`4fA_iEX"gL^,oj09M&^6qU*N-uS6?\U&*<Q/g][_`3"^l%L8VPSgPil^CVP''U/)e'C2P:,h&m7"-%5fIej?t7+W8#A688EdRs%6WF@RofR1aaSt[,'&"VPlS:tJ830:"\"J@NXEm9EIqd?<3/l!Z`p\]c9\BN_9]e1ZI%_,9=Ye@$KXUm%[X]rVFLFtB7+PVilVM"7(e%lF"#Mt/YaC#g:8AK;jc3Ec@V/Rh&/V]b&ah<"1JQ&(a46mMkY,AS_'Mo3`VL1@l@]NGBisRr=e@32%(IXGOdkmL53?(IW6W>k?c;s;+@`qKuMNd`p1Wkn)"/d(ZlX_+]@oJLK]h:s@1j51fhlK]A]1%kg;4rj=\M9GYTuSd[9E`lhS.WYJ%>0,eGO0=(>P;>JjZq*40AHq?N"B0A48Lp"JFI9n0ZqMibOf1V,L(M^Jjo)5TjuVXB&3d[_$ahIiB9^O^%VtEA5<`)XZUXk\nfFT6%/5U*M]e`\,pM=pn@.7t=,aZ;1+u_amUb.9g&``>RBQD[U$sjHGML9Z0?:bBSpjD/HQr1Nmn`WH@AMf3V2*F_#1#Jj[8J)HW^[cK#%%,$^U>GGk<<:\c[PY@@DV::Mdk,0c_V.r/BYc<EUMpEc>$OXVKMEp/8nRD;2B84XF,/7+CUTY11Nk&#=iELgZJ!]r:njSX=DcKbi%cW=#GBcsLOGj*'crSplinW@l(2RlN:<U^9/NB1:a5^TcTFa-bGS/(d;@Dp-Fk%IfRW>4S#RE=Fk,>a!hb6+#?Rd?kp4ipc5EM=U[%qVgC:H1+rCcRsbM=g+!D.Dnps6-Wth;sH(R!!H'b]2p&V6U$)h6dZ),P&fHoT\SAI4oHsfjMs`V<UB`J*-jD25+r#Y]Pm#@+kY0\%S1mb9c"ks\Fn*?X[3Usf.$'?^adSk\_+ED?2G+UmNK"t$(hW)Z4W\geg`X`[Qtn=gq/H-VV^"+K`bf*7/SGCC3PqqPc,&F`MTQt3%2;:3nNM[0t>2naKqn_s\_j,EfGe7L35:$?ja7DU1J\g%04q.ENKg$nm]-C&,"sp6l&Qd9bNqipOK.(3kW'NX5$$22EC)_hKTaUge%!FZ=UP/BXOiRC$H<+SC?_H04cCLX%u*762WhK;dK=Rc0?`O%6a^HPNi5m1ol&S8bn)]/ZGBuMqV4eb)\A8#5dbaI]E$=rCiZ)F%.%e3d7N-"S&b'U<Z:-5ZBV="f>>BE+!mGN0Sngk(72%>`jUV2@-SY/CEs(kOaTX2M's0(F7Z`?1,^E'JId[c9Kg0i;ToYaqPG<U!9`%koCrL6YOlJ*R&<nm$+3+.9J)'J%E&3fd]aj#26D+K4Z`P0L,][`?(OR,%iERGf"Ia-=gcT`&Lu5GU8f&LR](o)8[SN(g?:ubm#?r%AcWd)Z4H6>*]p^:p8#:[R"5`.k(c](;>'ONjH)(76@,/dmFnB.@J*]`[QI_I3FNpS?">">7kmf2Y.ahaA@#LtCWs=YEWK-prh)q5%JSR<e@8Q<$0t=7k[bncQX`pE-gN]!0_meORZ\g8XW&YWMK')a,i-P>LWP"!f+TopGS,g7j;#(D=/)M/Q?bZs9f<>$Z>hcsiVp?X.%SM9puDM^^><!)8#=ond\a`8!!;Wn6N_?QCG:u`n*9tUV1bhnBM$?s%@m=>W[05'`1d'4`D))%=#EV<s#4Fj4=<"]fcS<9ZtYrjdb%Wj09^$uR>GW('\YMUFWYc-P<?=IC<2A1\7i9^1LKkr->(V]eGsW;J"DPu@f.$!e/4,RJj<+40lrb8;!0B35-scQi.LklKBKpMXG,%9C2odjP0=+CTqkJ>c,]!!XO/)*FEqUC_),t>c"h^<Uu4ki+UMO/mPd=F9&,KJ#(PhHkfmmY)tXMf3C,-&"-HpSqEM1Pm8>8nkthg%@gtI?6ul\4.Rb=_TEYUoTusn>.lrWsZM,@:H)3V3pm?FgO1Rdm3,%qO/Hh<WZ[YZ@U$[2m#IhMt=GB]C,Zr6A(#76-8:MrK+K$Fm%COh:]F#g)';Q.]2VVZfPA"UpW6:<4KKndaO&3Y!c'29s34!^dG>[KTDJfAg;0uAVM.OLg.U_L?c.0p#CO/19ibbTHtMNbYUki?:j%=1^G0^l-kll1Ymh[fsuIkk1+:Dc/)h*/mV`3F8hX38CocFiLA9hSi/+1U"oC>/o5(9"R^I'[I_;R<VQfMr"W$!V7REUJ!CSI)[7I%2HIA\/$PGa<6jRnV*Bj<\h6OLVbkcpd2dXd-AWs*[Z]n%!s1VNA%$/eX[uQ<"=a&Ak+LAu>bR]&:N5mi%GLkBSCmH&k`%r9^s4Y2%(e7&)mpQ<l9q91&f`n\0oJ569@)l`,A'p=?EUI!r]jk4mGpT%#R_76\/<R?8s%i9.^le&6m"-t@V3n`4Xq@\0Cr:q+o[AR'?jLka%))Flt$8A#q"3XA):<,`lL<"+`H'*Z8Xm8Y%e&P7_kd%/DPF0pQ"h_qYaX>(6^rT6KcnaeBPtukn.gLeW\j,B5E,#$=a3oFL#0JLf%_VBpL9mpo$(Jk#<#HN$Zn2\)9#F5^h,[$\J;<iiS^<AQANWku+e$4b2r%\MJ/6;kY9OB_[TneAURWQYIjXHIXIMYZ!BD%`$Sm)]h%&9U2;hk)$"D*j7>^]LM`7YHI/:b:nS,]aDIoHEO\k&L%O:&"jQFj7bJ(Ftj@fQqhm2,J!74b_t@D*gm:02%&J\UnjP2,W?5iDq[R%3@0AoU)b8F)p$FO47gNr"D8mSQuuMRMQD(lCUetBNL\p1N8`5V"'g^R0(Fi3]be3s8t0J#PW5Y(iUR>#\cgJ>:hGe]9"`bj=drFM%!0+k/\473K]h1:P#Yn\P)pd1?c:4C>kbs:F$E+1u]Y2,ll0+4dkAor^i"3PkOicj1&0)0&TCJp7VKiO3TtKs9N]'ELeo2!6`C5UH%IL8!smnk'PA/PhBdDgaq3Pr6qr(q[eK0pQ16aJR2DAZ4lY4Q=N]Pf!c77R8N&@#aG1G2rijKn"m91Cm7dO;jV)`ZoEi!fg`l6n$R%I1GR\d]bR`-dsrb:AIM87kb2bN=+lT%NIH>[\e$Fj$Z?<0@1/MKb=ISW:-#icsIaPen@=1PR"S>bGL-n]h(K*letBL9TeX[AQo3Z%:IQ$DQA#[<caBY0%iHKc"QdLc*2/bUn29mM(s.jHIr1$&_/p$8Q>a?W8#P[Z6cM:rkku3mI%'q[e`d1T+m->7BA")A_;[@WqO"r^%7cFEV>ie)H;2uIL:!0H_U6)WgE3`NJ8_g$BEG"H=]jBm1Q!ac'C\?$[6%Pc[d#^t3d*cZrk>H+BBk[[NB-8Em^$H1gn^)uFVT=ct%#(qYbg@RLd\.cFuZ[.tOVp5tbS/51q6kO)XF%81Q-9R_rhK)XE@;4V=g==?E3ZKi!c,E:Zg_nbMLoalmUXP3IeQ2n^DM=j]g[,&B%at$^[]bh$U#LZ,bLZ^oj)cUjVaIrm<\Y</>6iNs/""U0K;)F+L!aB7-lMd:2er@A[q^JfTYR,8=OfOK[M(3jJkY>Ke62-tu7Yt)u%<tNS>fZOmb/Z,_'[%C`6luUM!,439fTu\)QJQhfeWm_fI$q9$3dqR4)LUe;gV'2AT$J/_g5>/'Z(3h9u":PWk4s:BjFjsHsD$MrK%ngq[`YRl0f)UD^lNbUn"@VMt/Z3qdG]Q0t+9lW]npK$+:$Q5g-,3*5u.L7G!N28HMN`KtK?%s:l!D,1Lb[frUaF2R[EB"9p44Gcf%'p:<3/jSE)!Lm'#J`iFt$egaH8g1>d+&m=M8^]%s9uX9b6O[5YL+G/Kn/I+h08I>p9%.KZ]POqX46N]G;lP`FJc_1Er.:RG=TS"W%GC#!)8FQ2bnaekT&k;rM-4X2?M\`CZaVDf']MZR[#=N5,Eh:DVeO`X@nt>Ak-gU7=iR00#q4C"j],8un-`tR,?iD>:N/(UPQRY*i%Z7p`SoIQQd(?faEdC54/%,h+C&09Ls/n%"?jj>$E1_,QOmE>@kK^QrhjYQ@teoU=H?jQZ_D+!Hd)dKf*V6)X\[WU;<D2"F+)r8:i%A3l:'"Do2n=5![1'f$maZOur>9.ThD64+%6:nf;JT7_3Y[X"0NT`*CMY1i9k<Z<[GHM?J?HNd@=OJoAbX45ubi@2XDiT[g:&$J(j%mGNhOh\hm1)nP33nu"1PK<#>G*!"D*$`XJrPSY"XGDrNB_Pi`oVToRd1E7;!^-HWQLRQLR>U"8-W%,[k5<(b1R^4269aJT1#W?,2%S,HU&/?PFl<HnOVrG]hWV$5LR`Eb+1d$]Y%?@qAH+GIX25[pU0iLr8"l/'g3fWe0S,O's8a+5*h(lB1@_f.>8:B^)KCG:KQ#f:Hm%h+&*V+6Ys5"Hht._][1bhG53k/>EsfF-D,>-!LZ6Nm+:uk_!;p1":bgC_h[PPs3.9<A61'i0iJc21t>4l_0<^P(#5`c-LrM/2US+%Md#$(l+I!lWR.q2#f3n[_jX^l\7&7b"g$j&#hMapBpJfjqJ<2d!@=K-(.6>PZK2p6IEZ)&UKu<JoQe@*&S8,<52jAoO7A-M]I]H0%Kdo.E'JVEP+^\29Z\%,IW[)fi.%7pQBc`*f2["eL5`%0+ltg.<3e/C%&ACfdD8Ug&TfY_;qF&ML=PF2bS]27@%1(%3^Yo%.&^m[]%:oeD*dtZPZ.WhW3mOC9C:aB27H=E<T7uIqLA`*iNa1?M"(&.l$;Yi<jBbtk]dqGiB\Z4SE"6W<2)!sGm1sQV:)-h<rqIlVV:7JZ&%<lRh.$UW52r(95,*f'th+OH=2?'!%5FqN:llk!JCcR0um/h\:='7:p)9!/@$e/M[;jp1[G\0TCXLn-2BnM\o9T<:'3FQUt;0-g\t%HO<^022KICqZb@?`F:3I_=:+bR.n5EYl3u',iQ#,T3&SgkCj?-XtbD@glKK?$M$/I9]JqqWVf'.`_f/G]10!-;+j:n@Rhm:i[YIi%roLcP3D/]<[bui5aB\<0ro63>p;NY8Lp!O0,gfJ6?g>5'*5B77GQ4SEKKAgj=ahA,%^oZ\;nL1:j8#fr/C1hWHL>5'dY0nY4_@kQ%O'3<+Gjs],]`-tjA@hKHhgY=E]C12+-Ir^bJ,*[&jQD9@f0"DFc1c.+q9=t-4ad5*lhtPSrY70nN^*HjT@(:M6`T64n5JndHmjH\%]A\sBpn;W\0=t$VnqX[Lq"BJlgXc7SL,D0pn5Ju2:R:1H0O*:eO5/<YP+PEH!IjB,M3Jo9;4L,"V3e,`o'1ORSI>]35VVg##(LV@%Z[G\#am;]hMV0bQ$&k7"H%D_aBJf?FAgXM>l$UE?I2qK"e9-p[^a[]YGnOh[4Iro)3JaEn5-a?l#VN`bA^7*ZLaJj/-JcO[Q7("m%%b]f5Q#JdR"sC*qPl*A=V%^2;Y@1o6jTQ]O'ISnS%jkO$dbe\g-O\M65Z?qLJ+9&DQoI%>,390Qi?E1J1G5@@P=6YR#D7jLG1mcH%22Y>bIebI,hYn(HrRX/],E;3lA`k]Z=!dY2Im/?HT>.#EhuDWtYMJ7N;pE7e)>Dd>Y("%J4<(lJ:)cjap8Hd.pWHW(oC`it=NV_^%MRBS<d+ZX4grO/1i.hMBX<sCm`sYGC<'X&uq(BNa62m1nD/k+BSnD'.k<Jk;V4U1sS;rNQ2]:2,G)02rFRb0W[WFgWNn/9+lS*Pc%f$sqq%\R1%H$t7YYV=k>HI'W0-[72M0$oio^gGHs8Cp/'e&9'r$=PuaGUYIoc+*gt$@*6u!J99^?BT:PW$r)@]SB?NM_'Q\&f6S<%:<9(qP'cAu0/H]'7:gEtgP4b.h5.H4.sP_e>k8XdY:oClSX9MqbC(+77[X[-Ju8_7(2.#]i(KoAO1&^W]!Wfg]9GWG$A61X-.c?j%rR9+S`E!UBALkjY,='BVD]_=DA+HK>KBVL<CC>bh&EtuP5tpB$>-Yh#&Z2;O3_aGBHPU_V]"_;F,KEj]^IJ3t/.;oiPQ$C1lPPN2%9Rju!?LO=MZ>Gr#kePeDJHV<teqCFAN1qo(Vq_EC\"M)Z/b'l46%MBkO5,iG=*m:!7Gp]T\"3useti3$.a:6Teb^9f,'o*+LT@XE%C(bGL3[)&]f?15YFq\IrQS&/O/It6rZNC0CQU`?E@D8<mrhj*EmWo5Ff3BA8$5n?d$7E`:kOAP(T*E#:+CE`B,#4ZDhB9Tq(uYDU%9ng@6jRCQpO@Z(a6WkAVDrT:V_Yjsbfe*`j:t^4oJ)dq:YPF-Vr%.';O]WL2Je>aRE-tZnW>JIQC2kiEi:ql=,lk4Kj>i"n\KI[O%O5QpnLZc>*W0tL\U>NnY)ao2b8B>s_KdgfDrTJn[(V*Ra5IXk$9"Sc9a_h=G$jnDAk$n=l8)YN3c5Z7=BU^F7/<DlI.?i]tY)p&*%,P;E\")fb#QsnL;XX_2+PQ=Y56%/^j!:!W03,2"r[]4B$Nk>%^TtRJUGif+U>h@'S%?_?&K.(k2Wp;u)EC@I/B/S02HLU>#98e2p%<0=WhG,[!;28UnXM1]/TCI60?`^o,J20=Z?=V?QM":rjD_6knPcPa=o"uFBuZuW$"nMt2.IEs8K*iT\/)S?'s1r47mIdn\8HRg4k%1oYoek9jf\6T'J-OBhZ88.r&JFf'H09--cX&90rB0)E!X$=,'cOFnkL$Q1DQ)sQ6NX$jKQJZZs?NKb[*9kI(Mj9+=?*G?BB=_n0h%LX9^i5cXl,@1o7ggH9^4n3n2UkQZ\jgn_Tf6=.(3HKYJP\_-V;E%X2BF`7<Q]!bn3JU;3HoU^9n.hIKnH:A"4bK1+C:,ld*[`fhE%DX/Jr,FE@jpm>7":q@D41dq+s4!qTM=]EtoDjSdTB5mSSl8/_(UHLu^';iAa]ZY4Ym,?m!q`mtedP+`04I\nC#B,5R6FFo)Kf]hd%NaS#&6C5X4!G>7HZoOR&mS4o\0f>SFNV``c"D"])M54Y)_QKcnm6l7O]6_>nk(Qo/g(Cm-,USZ4pgqr?dohmr#Z--I3-aC+"2"Vf%S=?hZFp:k8<DrQ<&-R1P67PjRI6G+QH1tY0%S2%VmM9K;9?[Dc4cmUX*chppO0NeL4t+*r#O/9>7C)+@DT@%J0/H0YigP0teZ4@,%PaRA?']kWUibTmBNT@$ZWU)gZ]eTcZYK[HRjNnI5A7]7a>D\g8\h^8-!Zst<S:i),JllGMaNkF\L/$MkT[g#P-<m.EYt.o9bkL,^%'B"38i;h0L^l,DDMe#iMZ6^T:W$#1e4'e`i>[Y!VdtAjOjf(QJC6stll`maeI!bnQ6Jjt0W9pcoXr].;c0c,/CmR,+E2sMdE1cC3%Cp9,B1;XoR-"gPu$Egl<jnrV[PraA1@Y^"e0ZG/,]nH*K(EYsX#U3L`X]"NT+V7Pjo*/G'fA$=7?oh?ul&\k=)apE\jR&;:A,>c\%>)B.iR$6Mc;\QE)#^YOLn6O+FD>?cGT2UsCiScXOouSqB5QZu5pjIk17@FjGmQ*O(qeaEp8"]Rjl(D=73Ji66>mGPQZMj-VhVI%<%qtNZd;VZ^3"mP`#BYR#0\n#KkWdq!dUQ)_mJLlHHa>Y2TOrFW6@_(EZ=s9;nIiQS"`gL"$%gu+H60F:tN-/.+QqcpX0X+(knEFK?%]nYous5g+#Ks7@4Y7b\4^-[+G)XQDea_%qK`BZoW));TU%%aL(JV)3U%YKbD#OU8u`CLGWCC5jUCi$MV$B!WnW[d^];u02R2R+F.%0j$o'?9e,Kbf_Djf(!/ng(%&[[e6qmm\dC!j+-uh-$_5T27!qE:"+R_*HDHa16ALGK8V_.b(55P\.%dBWl2-.M4G&UEITJ@\_b#S%m<ATl`\YUU&S`1&3XBXG/I8f;EL\aZ)9qJDQP&`raddA-$b=$'"HA%O60+#Ua5/@["7p:6"dg,Z,J\mmb=Td4#l/CeCa&O3X%EaU%eXe'mC#8eYq@%t0QN@!)JUe=*2b9]8L&p6C/[n9Xe",VWlc?WSHR_7ZZO?>QG]Htm]F1o9GaOQ*.//T5cCY#^+8+<r0E/$`9X+p-%G?5($r>;HKf<bAuEh27_(Us<"O<_-u+8uP`38u5<B4''W-T/PS9XLB*L`a<J_0eu#T0p,<,K'=Rgj<!=]eTolM@fPKYeeF=_^:I)%gMSngUC6inc]Q]k/%.j>("lg97)i8[3):M*$O]MH!p+lrZ]Vrp2[0U'`$<T[L6ar$Sm(JmUWECn<bW_hdTXk+bO.U>=1j/lk-uur%#g*p='.W4a?o?#Z@=QOFPp0]C+l-if(m=QRm<k2+&^s_f_[SZ^crN^E=batJ\@Y?6-K14N9k`('Q?(A.l)@IDKb3Y;rLq+;#!Res%P9RNTd3Psq_,kr,fL5-N0!S>&!c$e"9eciS9e[DTW5fUA`<=2FG4V\i%"VtiBK`chXQ<]q$loO"68Hku7'FI<o6<Vtk%:kA8KgNL%$3nCbCmAQ4Y16B>K@HT7OC3QJ6T$<XI'3p1X'!>/?)8pgm8GQt.SScLf5s>H-M(TklEf?!5:?8!B#+jXT>/.ofW=4f`O%A+m+'t9%Sl4&1L[SS\JS(3$&5,R&#(pJ`f4NT!=%/7Y!bRuOEmK:s@a(B6\S%4=&H*XTAmu>\rTVmtKL#$E\$1_Ehj@TlVfp=mUs&IOW_G<[%8ghX7)@X/*`X&[:1GcoaD^PBM9WJu<g9XC,Ljm[W3[88@0N1jbnf%*_780cV;nM0qdUi=Dcb`hhmMW&7Vi?SP#=pt4"`H-*Z^/n-%/Rcp_Ml`aj0P%&4R;nRHW"I&CXR@S>j#G14p*jt"M:]g"Bd7sDhjE!;Pb^1OC`ds'fil$=LK9&3jG:Wd$s'uG^-PdO%&S/)-#%_M%pK"?,;bPWW)S#F/D7)[\pC&rq[7crG^M)MEgop\B1o0-'rA+CjaI&m/rqu2r2fIdOgNS/BqAUW#0])X.1Jus`58EMu)<g=7hYcce%hgPOt+2/Wha4ii9ro1P6n,E+Ts8"CXVf//g\UX38:;?eicYpS2?17a[m@Sm;hYZ3K#k>Osk'5+mBX^2Fs81'U.ESgK*^Z"R-]g:-%K6G113@pnj(1\B'c3H[5\5\MqV5/.'fZN%Ln)GMimstCSW*6\1j7`NPJ)'G[n\nii,b6Q>`T)\M>h$R2JZG[LJms6Bd!=u,d,P-9%"f*gZ*ur[YO>Dk!)uqcmYS6Y_cJeh<+IAG2MrK$:"&h3&8I?MIi:d#(U?PDtI-]s>.l)\XMGdq0/Js6K&`1\2MBsQs;clEf(>c%K%[U_ZEiH1YD'LD'>jObVX[5b$T@Wffl8dKNkK]'U@KH+ji,sWC(2n[nGP%$;#R]Io>^n_&\0LJJ>a@)tk#+d"CTZ43/?k%AtLioD/%_*GLWmpZW_5C9(ed`RQ/Z'-*!ON8EtQDtA<q+*a;n\-CApt%0Krjs"rpWW:&+HYkD?a>(RO^JMOEXDjT\F1UCIM<n7b_cJ<Q?C5,%*=3G]\lcq<dEh4b8K!`51LY#4Ll@u(5b/I>KmUNNA8XfWq1>R<<eDOMIXj+>";*!3oLs(botBL9?lXM<KdB@c1's%a`s\%<;qqq"%MD[pf/.9"uUd;Mpp>kJ_g.%.5>`#^UM@O)Q2/t[1OZs'O)s4TlrAV?_BS(QcSM>C!+HiL.]Fg$)FMJn7Z6U,k-39WJd42"5P56r1%Mi?+):PI.=5r:Ru*%3XA<X=A>SeTaE?d0lbAP+'oJ[>HOoI#r+aBla73ik*nc`PkSVp*iDHJ7':@b1D=B5IaI\8FSRFK(<(F3pK#%,FoI/>%I+PY1472'd0.hR'd0,iCu!k&)/o`1,Z?nH=dgVrEFCE,dTI>;(/VhSG:3'.a?a6675D.+Drb5.`h%#`tpnpb.+5TdrL'"%TsQd0LMSAhJtFnfC)*FeOGA^(VRiPSChU.XC%=\<)5GS"NFRtfEp4(Tkp6mU9Ep5'.<`i)N/gU06=>\L_W!i,1cO\>\7DZ2F)a;9%:-MO^=\YiVUcdgLSQ.+=bB%2[Pp'tlkFNZFKp7,Hp<#@E^_ChXg\>#_dGQ7mR3XH4^GDt:"DRGFC+k!!#?!S8-0V!c+k\p;OPPsT%,mPeCV[!i!2gpRXOg(5"'9?P;mZ.60Q_;Z9Uf-4b&80N+-sQ-7Wn.nqbVhK84"/hiE>XTb`)&"<R6*&rc#Z<,InM3,-\h.bPoC<+%RUbg/:/\\DD@-,iA5[U8Og/mASYj\*4lE"MA7ppk%#F9P#6HfD7%Q#S8a1Q,*/E\<UE98QUTV)&G&&9r6)3YnPeh<i31f;JmW/XM%K_.U6aLP`q**):H=[n[EYnNft,!ki6,1uR%O)i=8leo84ahjFAq&rg"ElNj/S]Q+HmEAac]\,Xf17983"*db.QPC"mW.E<0g["!#%7&UJck=[3pFiVT(Y;/F1$A75BMn7jNfc)';iJ\uV9qKdio\3sWI_Z5tk=-$7HC3`Lr3Y\B!kh3\08VYJ5qJ)PK!q=<9X#'A8Te<i%'1BDaAIVhKAZqnQ=s';sL`/s\BV%kmr:?d>KC!LpE7SkB[Td^udLYQ_qYUOgEj;L*?jQ/T!5U"2!3nd.3G/?fguADRP+nc;ZQOG=%0'#p:1l,#]g!!M4P.aD0f_(Ks%^rGJR;Zt^eSUV[l@74,&*Un$lu)C4[In)cq70s@>Y9<k@2sl"()u&LWhJ>]b<>1@VCr7KTh4P6%hYlZnbTgW_GQEb4R1bFLiZo;X%4"mU4ibZ\!e^^IPXUZWn:4JWA)5sW/1@LP8Lmi6_T4LTTV;>P269D:ZkKG$'#Jd_!mTKX33)/6%fq>=jIf11@(6WRm@_='.h2iniWf!2nYY.Kq<s,-hTdNUo?_?@jX&>UGNF,1Q&%1UhW';BXQYVd.4u!<B(ABHVc[WM(Dt@`7mG"8h%huE1*YJ`V>jZKTWi])^1Yub5f@+0NLjtRYU)oq9H7g_48n-R%96(#D(/LDb(JPB\/r>[(JY?rF2\qL]*-?I^fAf`fTn\,M#R=SFF%W)&"O>`8h;%&OG<XHCb`,3\'A"#iU6'Ci)pcojIe`&UWd\Yt(FpaYLsJOD`I+Pb92Y&s1=ba57"\=[NM4=g&F^*%3(<`(_>+F6-P%;rNDoijVFV6Hp^],dm':DoP"?N!@3CJRmN7"P8e"&eHY3&?TH]JVK9<-K:L](aLZ\G'FEPd+"uqE_/VH7g?`b[J8/jKlU"s74kXZ%WseS;S#sika@HcF'M88ANY\"^4L-.t>.gMT[S&!kH7XjZbqEUHZW[X98q#!k#mM71n1(oSj4#So[]qV&MTBc]@h@dWlTf*1Ac,k`%SGT4KK+FH2<$;UFor93#IC@K&a4.X54)m[C'!)K=K`R/b6h_EnB$N_-pgBbA:8:L$HLi,9:g-s'Dr3uHmU"`j:C2hAdGjfE92e/2%l73^b><4C`""4NkOGh45cjDeiVrJ+Q5SDnpm0Z:@KU=%9$:SVrR+eaF4ljHoNR06(!I!tcg#iq?PF>dP[=$qS4>,$=qs#/^CU@Oo%aB:CPBE^&:[VN'%]0\\6;(sW&n@P8Z#WDp@[71V4f;J`5)FZc:.sCG_(s^%P.=ua9)@k)%CqO&KQUCNKC\0&Yq'4I(%?e9D/5Zh@%R/6LhXiU%pZX':BA7hdn9+TjP8)mpM(%)7uY`p$Z0UK)HdIV[3^_2&fk5VEHkYq'.@>VGj75&G$.i]oG"qre7K8,ZFmIY3sMP2)h%EV&eUBg:c+98fkXo)CU[#>,%XW#T;5D%Lp*?0pVeKYRHlb_T>;-6[[:o[>[fea^gF!1n+0g3L:;)O]:-EOG-c=HBS%@Q(64HeFf/%YZ>(#]&Hn-nCFQ;Cf!%rN_eHG+S%!/h-r]Y$S_5_J;-SIC[=tn8Zu?-7+NdpXgVGqXPMjdQ8V.Yb/lNUWIR[<=gReNY()*kjDV6/%oB#rL3o\&8(ZViVYdG7%#$7hijAEu_%+`D6g4S0;<417h1u!Z+2>V,3FCJ6?<qG)X<8FqZCM=`NO5eEDd;Tq@D.0rob/]PmKNEBZ%eoSG0X0hJa^3njF8'jObS(qmVFmbCZDRIuhNb:V`\a7qOK'W)r2X;f;l6i$]cW[TH>Ci>+#$l,_1Vp&'5/_]s'qcjrdn%&8`d?"S%L*WkeGVZ'N'cLY\QHm;Eo`VS1IKl5giBueR?XFq7-afS3Gnljor.+,.^T]p")MZ:Fmp`n?HnXuo$p%Lu#5+CS=Fm.XnopsPL-.@^%?$b/63D.@-SKS?aMleU,UI\/.bp2]_?*Z)G`#&V]42hS[;8A1#.&S=rKtIFE+*7$KG[S^n-P+U)6j;K)*Bc,i_iVBhR:8&YEupcl%JqmV)dpM5=RiQX_dWm4b87DLL$aH(Zh29E2\O[$E)RP66&EptY>:-W[,1e6ur*#!_@F)A[X*oj.iEA,p_JEWSm"2NFMG,`.3EqC>%Qm1O^W)Z`3f,@8cpfO.G=*%:'R9/<U^1n<0WYc/<*CK$?ep3$<#UN^"+`!TVF3)D"`^'DV<UkN+i3\n\m5n^d1U+)+i4#=G^+M9a%9TbLgSX+:I/lYDj2N9O](hT&]Zl@.dbXtm[.Y;Xf37V(nU?Ga\-nYjGh(-u/6+`TJ#+FNI1.j2_jLpdc!K-%64mJTdg`cL7mU)jX%9Xg@`E'L79;-kg]d>1D@7"MHfMb1G.]S$FZ`pQ'9$c5W4^i=0sIoUBnJG_51NIrOO,DK0\D:'.7\3EZ[$?N-=AV8)!GZ0``Z)R]G%,n;!5fqtR7LMdMX/ii;H#PYBpraf+0'Y1tEPZsbQ>Fn.a6OdY*1.[]MnaYJUP%4Tp<++5$2tjt#&_tgc/?s:1K?DX@mAP6ZHY/ht%Y\h='SG<o!34$(iJRi]eK,nD<-rG$4N<'h_GGlk[Up19SED02OhfJt"THf6R,g@jc"=GTr"[tlqE;*^lI0uJW72s]`O>'4Uh[)]!%K42p4Nf&Qj<3:@`QnX?a:ZK-Jd=]K7ae@&"JU*8jWZ?5bKo1$hF#[1\\k5!o1A7)n$+2^n$4dKW+Ch^C`rj9<'a-Ai\/\kq!j;=u%*Xjgh0c%(`nb<g)Y*tM)_U%bcM:'9thjT]>J6fJZSg*nfVH3;f<Uj5=H/l-S@/VNq;5b%60_kUqmS`#7<M"`l$$]V,C%Z<F&I-:U%K+Wac_LB&;TI`.`%BQQ88[dJt$Y;KBRd";q)&'2^HHrgP0EAD'fjX&BE-IM&NajVCJ6"B!:Dp7T[E8fC\3M7s+Q@8X9T/5BBIHWb%U_Cnm+SVg[lLl+6m*#d+>!*pHC8FqQ@)sl\c5*]%j^?ZNq:aO77\)k-#X,,0XN:`2VK#8m1"[C9-p[3:^^[.gd/iQ?+F,h..;M$)%JpQePHY=`]WZ&S_f9Gq>2NXY(_R=P@3G*^n;dF?LP5)n%9:?c$%+U560^"O!AdM))DRoM:3!Ic!4c!3rT+-)[?'&uD"+/B1"MRre%CJ$ljU2cWiD^iOHRl-X1m91b$>R'`"]gm(B_b24X=nL*NbTr5-1RRUT6P6>8T!N5^E\p47m#R0og!]4cn3SOYT#Cc#8.gW!K<:D'%[,hqT'@<=aqormn[KBF70S"%eBd:A;U3E0;lXVi74>M)N+OoD\G!Kd"rU^FMm=;u*VI96<Ct8NjoCqt06&r:Sf0mnAR*)s,6&s,4%0==*+l;eF<#,Q+\LW;Mt<;L1=mUslZFcW1&[_6F1h';(J6/(]8<k$g8`qHP<Bh$`D;Q4aLM,Dr&P1:EN28.IGi\"s]don"@n)DHP%E\Q5V^/4IA9oa271i6%a%[#Kb8\ju*9"^MN0dU/u\4]cU&W(]GfQrP^@kOXUrCr.#o\pR1;>hEnL878gcT=P;]RZOIQES^il>RG`%4YdK._^aQjd`fN>gd9@f8)9\lcZ1haJ9OiG%RLeQKY9%l4p:'GTIL&_?4/>JdXnKnZS5B3f480Z1ijS7PgaVI,LEGb)&=UNDWEj_%(:4fsmkG,QH4&H.o:d>)QG3C'Pk5Ee;[#&Fl5$Ij+!C$8h'(1Q&;icLMjqnFVa-_0n+!?T>KCpV##uKuKrGu.5.Qo#>I4"TY.s8f%(C`U#0-9Q]rHQ%mbk<smMV\(>/9$Uk5c/D,K+*mpH`Qa_30re8\u/4%EEoktUCU&'R-jf-d-a:(cM;9Kdn+IA\s<Q6hF"MC;$ur=%OdUCX@_=cZIa>cemT^D:c?6g)$d@i!i0L/tLCg@hb>pR-OD44hkO^O+bt2T_]&tP40]m\+%`a3oG@-m8VL?$@NfDWc,U5K[T!Q^i%@Q*SY"4$U*>egPHd(%r*l46_>RhsLnTp9TMNquiqlHXpQP]q$gF:^9^&C-m5.T;9Z+CV1'p>2P?hihM[Zna=qC>/W/D[7TnS2UQp%\=bUZ3I_5Kd)s]6kRp)]:]BI%]UiXLpSVA2]R[YdU%##i*?ntkk\cuiTT.k<G!nM-a4XlE)2p^1Xuf0#h;O20OHMFo#bcfnf1+in%6iu**@mp@Z+27Th]79\FX03W%I<Y:<n%\_hh<e;$Hiqjn]0D=jh#?9EGMiGbg[F"TIfHV/rYpshb'a,*roW\KrYINn+.gO0YQ~>%AI9_PrivateDataEnd